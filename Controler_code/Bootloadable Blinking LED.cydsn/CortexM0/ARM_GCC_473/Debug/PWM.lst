ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_initVar
  18              		.bss
  19              		.type	PWM_initVar, %object
  20              		.size	PWM_initVar, 1
  21              	PWM_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_Init,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_Init, %function
  29              	PWM_Init:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\PWM.c"
   1:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM.c **** * File Name: PWM.c
   3:.\Generated_Source\PSoC4/PWM.c **** * Version 1.10
   4:.\Generated_Source\PSoC4/PWM.c **** *
   5:.\Generated_Source\PSoC4/PWM.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM.c **** *  This file provides the source code to the API for the PWM
   7:.\Generated_Source\PSoC4/PWM.c **** *  component
   8:.\Generated_Source\PSoC4/PWM.c **** *
   9:.\Generated_Source\PSoC4/PWM.c **** * Note:
  10:.\Generated_Source\PSoC4/PWM.c **** *  None
  11:.\Generated_Source\PSoC4/PWM.c **** *
  12:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  13:.\Generated_Source\PSoC4/PWM.c **** * Copyright 2013-2014, Cypress Semiconductor Corporation.  All rights reserved.
  14:.\Generated_Source\PSoC4/PWM.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:.\Generated_Source\PSoC4/PWM.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:.\Generated_Source\PSoC4/PWM.c **** * the software package with which this file was provided.
  17:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  18:.\Generated_Source\PSoC4/PWM.c **** 
  19:.\Generated_Source\PSoC4/PWM.c **** #include "PWM.h"
  20:.\Generated_Source\PSoC4/PWM.c **** #include "CyLib.h"
  21:.\Generated_Source\PSoC4/PWM.c **** 
  22:.\Generated_Source\PSoC4/PWM.c **** uint8 PWM_initVar = 0u;
  23:.\Generated_Source\PSoC4/PWM.c **** 
  24:.\Generated_Source\PSoC4/PWM.c **** 
  25:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
  26:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Init
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 2


  27:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
  28:.\Generated_Source\PSoC4/PWM.c **** *
  29:.\Generated_Source\PSoC4/PWM.c **** * Summary:
  30:.\Generated_Source\PSoC4/PWM.c **** *  Initialize/Restore default PWM configuration.
  31:.\Generated_Source\PSoC4/PWM.c **** *
  32:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
  33:.\Generated_Source\PSoC4/PWM.c **** *  None
  34:.\Generated_Source\PSoC4/PWM.c **** *
  35:.\Generated_Source\PSoC4/PWM.c **** * Return:
  36:.\Generated_Source\PSoC4/PWM.c **** *  None
  37:.\Generated_Source\PSoC4/PWM.c **** *
  38:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
  39:.\Generated_Source\PSoC4/PWM.c **** void PWM_Init(void)
  40:.\Generated_Source\PSoC4/PWM.c **** {
  32              		.loc 1 40 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 00AF     		add	r7, sp, #0
  40              	.LCFI1:
  41              		.cfi_def_cfa_register 7
  41:.\Generated_Source\PSoC4/PWM.c **** 
  42:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL */
  43:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  44:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG =
  45:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_QUAD_ENCODING_MODES     << PWM_QUAD_MODE_SHIFT))       |
  46:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_CONFIG                  << PWM_MODE_SHIFT)));
  47:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  48:.\Generated_Source\PSoC4/PWM.c **** 
  49:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  50:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG =
  42              		.loc 1 50 0
  43 0004 144B     		ldr	r3, .L2
  44 0006 8422     		mov	r2, #132
  45 0008 D204     		lsl	r2, r2, #19
  46 000a 1A60     		str	r2, [r3]
  51:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_PWM_STOP_EVENT          << PWM_PWM_STOP_KILL_SHIFT))    |
  52:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_OUT_INVERT          << PWM_INV_OUT_SHIFT))         |
  53:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_OUT_N_INVERT        << PWM_INV_COMPL_OUT_SHIFT))     |
  54:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_MODE                << PWM_MODE_SHIFT)));
  55:.\Generated_Source\PSoC4/PWM.c **** 
  56:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
  57:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  58:.\Generated_Source\PSoC4/PWM.c ****             ((uint32)(PWM_PWM_RUN_MODE         << PWM_ONESHOT_SHIFT));
  59:.\Generated_Source\PSoC4/PWM.c **** 
  60:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_PWM_PR_INIT_VALUE);
  61:.\Generated_Source\PSoC4/PWM.c ****         #else
  62:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  47              		.loc 1 62 0
  48 000c 124B     		ldr	r3, .L2
  49 000e 124A     		ldr	r2, .L2
  50 0010 1268     		ldr	r2, [r2]
  51 0012 8021     		mov	r1, #128
  52 0014 4902     		lsl	r1, r1, #9
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 3


  53 0016 0A43     		orr	r2, r1
  54 0018 1A60     		str	r2, [r3]
  63:.\Generated_Source\PSoC4/PWM.c ****             (((uint32)(PWM_PWM_ALIGN           << PWM_UPDOWN_SHIFT))          |
  64:.\Generated_Source\PSoC4/PWM.c ****              ((uint32)(PWM_PWM_KILL_EVENT      << PWM_PWM_SYNC_KILL_SHIFT)));
  65:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
  66:.\Generated_Source\PSoC4/PWM.c **** 
  67:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_DT == PWM_PWM_MODE)
  68:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  69:.\Generated_Source\PSoC4/PWM.c ****             ((uint32)(PWM_PWM_DEAD_TIME_CYCLE  << PWM_PRESCALER_SHIFT));
  70:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_DT == PWM_PWM_MODE) */
  71:.\Generated_Source\PSoC4/PWM.c **** 
  72:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM == PWM_PWM_MODE)
  73:.\Generated_Source\PSoC4/PWM.c ****             PWM_CONTROL_REG |=
  55              		.loc 1 73 0
  56 001a 0F4B     		ldr	r3, .L2
  57 001c 0E4A     		ldr	r2, .L2
  58 001e 1268     		ldr	r2, [r2]
  59 0020 1A60     		str	r2, [r3]
  74:.\Generated_Source\PSoC4/PWM.c ****             ((uint32)PWM_PWM_PRESCALER         << PWM_PRESCALER_SHIFT);
  75:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM == PWM_PWM_MODE) */
  76:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
  77:.\Generated_Source\PSoC4/PWM.c **** 
  78:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
  79:.\Generated_Source\PSoC4/PWM.c ****         PWM_CONTROL_REG =
  80:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_TC_PRESCALER            << PWM_PRESCALER_SHIFT))   |
  81:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_COUNTER_MODE         << PWM_UPDOWN_SHIFT))      |
  82:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_RUN_MODE             << PWM_ONESHOT_SHIFT))     |
  83:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_COMP_CAP_MODE        << PWM_MODE_SHIFT)));
  84:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
  85:.\Generated_Source\PSoC4/PWM.c **** 
  86:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to CTRL1 */
  87:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
  88:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  =
  89:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_QUAD_PHIA_SIGNAL_MODE   << PWM_COUNT_SHIFT))       |
  90:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_QUAD_INDEX_SIGNAL_MODE  << PWM_RELOAD_SHIFT))      |
  91:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_QUAD_STOP_SIGNAL_MODE   << PWM_STOP_SHIFT))        |
  92:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_QUAD_PHIB_SIGNAL_MODE   << PWM_START_SHIFT)));
  93:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
  94:.\Generated_Source\PSoC4/PWM.c **** 
  95:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
  96:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  =
  60              		.loc 1 96 0
  61 0022 0E4B     		ldr	r3, .L2+4
  62 0024 C322     		mov	r2, #195
  63 0026 9200     		lsl	r2, r2, #2
  64 0028 1A60     		str	r2, [r3]
  97:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_PWM_SWITCH_SIGNAL_MODE  << PWM_CAPTURE_SHIFT))     |
  98:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_COUNT_SIGNAL_MODE   << PWM_COUNT_SHIFT))       |
  99:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_RELOAD_SIGNAL_MODE  << PWM_RELOAD_SHIFT))      |
 100:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_STOP_SIGNAL_MODE    << PWM_STOP_SHIFT))        |
 101:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_PWM_START_SIGNAL_MODE   << PWM_START_SHIFT)));
 102:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 103:.\Generated_Source\PSoC4/PWM.c **** 
 104:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 105:.\Generated_Source\PSoC4/PWM.c ****         PWM_TRIG_CONTROL1_REG  =
 106:.\Generated_Source\PSoC4/PWM.c ****         (((uint32)(PWM_TC_CAPTURE_SIGNAL_MODE  << PWM_CAPTURE_SHIFT))     |
 107:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_COUNT_SIGNAL_MODE    << PWM_COUNT_SHIFT))       |
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 4


 108:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_RELOAD_SIGNAL_MODE   << PWM_RELOAD_SHIFT))      |
 109:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_STOP_SIGNAL_MODE     << PWM_STOP_SHIFT))        |
 110:.\Generated_Source\PSoC4/PWM.c ****          ((uint32)(PWM_TC_START_SIGNAL_MODE    << PWM_START_SHIFT)));
 111:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
 112:.\Generated_Source\PSoC4/PWM.c **** 
 113:.\Generated_Source\PSoC4/PWM.c ****     /* Set values from customizer to INTR */
 114:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__QUAD == PWM_CONFIG)
 115:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_QUAD_INTERRUPT_MASK);
 116:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__QUAD == PWM_CONFIG) */
 117:.\Generated_Source\PSoC4/PWM.c **** 
 118:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 119:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_PWM_INTERRUPT_MASK);
  65              		.loc 1 119 0
  66 002a 0020     		mov	r0, #0
  67 002c FFF7FEFF 		bl	PWM_SetInterruptMode
 120:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 121:.\Generated_Source\PSoC4/PWM.c **** 
 122:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 123:.\Generated_Source\PSoC4/PWM.c ****         PWM_SetInterruptMode(PWM_TC_INTERRUPT_MASK);
 124:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
 125:.\Generated_Source\PSoC4/PWM.c **** 
 126:.\Generated_Source\PSoC4/PWM.c ****     /* Set other values from customizer */
 127:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 128:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_TC_PERIOD_VALUE );
 129:.\Generated_Source\PSoC4/PWM.c **** 
 130:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__COUNT_DOWN == PWM_TC_COUNTER_MODE)
 131:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCounter(PWM_TC_PERIOD_VALUE );
 132:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COUNT_DOWN == PWM_TC_COUNTER_MODE) */
 133:.\Generated_Source\PSoC4/PWM.c **** 
 134:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__COMPARE == PWM_TC_COMP_CAP_MODE)
 135:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompare(PWM_TC_COMPARE_VALUE);
 136:.\Generated_Source\PSoC4/PWM.c **** 
 137:.\Generated_Source\PSoC4/PWM.c ****             #if (1u == PWM_TC_COMPARE_SWAP)
 138:.\Generated_Source\PSoC4/PWM.c ****                 PWM_SetCompareSwap(1u);
 139:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCompareBuf(PWM_TC_COMPARE_BUF_VALUE);
 140:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (1u == PWM_TC_COMPARE_SWAP) */
 141:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__COMPARE == PWM_TC_COMP_CAP_MODE) */
 142:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__TIMER == PWM_CONFIG) */
 143:.\Generated_Source\PSoC4/PWM.c **** 
 144:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 145:.\Generated_Source\PSoC4/PWM.c ****         PWM_WritePeriod(PWM_PWM_PERIOD_VALUE );
  68              		.loc 1 145 0
  69 0030 FA23     		mov	r3, #250
  70 0032 9B00     		lsl	r3, r3, #2
  71 0034 181C     		mov	r0, r3
  72 0036 FFF7FEFF 		bl	PWM_WritePeriod
 146:.\Generated_Source\PSoC4/PWM.c ****         PWM_WriteCompare(PWM_PWM_COMPARE_VALUE);
  73              		.loc 1 146 0
  74 003a FA23     		mov	r3, #250
  75 003c 5B00     		lsl	r3, r3, #1
  76 003e 181C     		mov	r0, r3
  77 0040 FFF7FEFF 		bl	PWM_WriteCompare
 147:.\Generated_Source\PSoC4/PWM.c **** 
 148:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_COMPARE_SWAP)
 149:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetCompareSwap(1u);
 150:.\Generated_Source\PSoC4/PWM.c ****             PWM_WriteCompareBuf(PWM_PWM_COMPARE_BUF_VALUE);
 151:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_COMPARE_SWAP) */
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 5


 152:.\Generated_Source\PSoC4/PWM.c **** 
 153:.\Generated_Source\PSoC4/PWM.c ****         #if (1u == PWM_PWM_PERIOD_SWAP)
 154:.\Generated_Source\PSoC4/PWM.c ****             PWM_SetPeriodSwap(1u);
 155:.\Generated_Source\PSoC4/PWM.c ****             PWM_WritePeriodBuf(PWM_PWM_PERIOD_BUF_VALUE);
 156:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (1u == PWM_PWM_PERIOD_SWAP) */
 157:.\Generated_Source\PSoC4/PWM.c **** 
 158:.\Generated_Source\PSoC4/PWM.c ****         /* Set values from customizer to CTRL2 */
 159:.\Generated_Source\PSoC4/PWM.c ****         #if (PWM__PWM_PR == PWM_PWM_MODE)
 160:.\Generated_Source\PSoC4/PWM.c ****             PWM_TRIG_CONTROL2_REG =
 161:.\Generated_Source\PSoC4/PWM.c ****                     (PWM_CC_MATCH_NO_CHANGE    |
 162:.\Generated_Source\PSoC4/PWM.c ****                     PWM_OVERLOW_NO_CHANGE      |
 163:.\Generated_Source\PSoC4/PWM.c ****                     PWM_UNDERFLOW_NO_CHANGE);
 164:.\Generated_Source\PSoC4/PWM.c ****         #else
 165:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__LEFT == PWM_PWM_ALIGN)
 166:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_LEFT;
 167:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_LEFT == PWM_PWM_ALIGN) */
 168:.\Generated_Source\PSoC4/PWM.c **** 
 169:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__RIGHT == PWM_PWM_ALIGN)
 170:.\Generated_Source\PSoC4/PWM.c ****                 PWM_WriteCounter(PWM_PWM_PERIOD_VALUE);
  78              		.loc 1 170 0
  79 0044 FA23     		mov	r3, #250
  80 0046 9B00     		lsl	r3, r3, #2
  81 0048 181C     		mov	r0, r3
  82 004a FFF7FEFF 		bl	PWM_WriteCounter
 171:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_RIGHT;
  83              		.loc 1 171 0
  84 004e 044B     		ldr	r3, .L2+8
  85 0050 1C22     		mov	r2, #28
  86 0052 1A60     		str	r2, [r3]
 172:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_RIGHT == PWM_PWM_ALIGN) */
 173:.\Generated_Source\PSoC4/PWM.c **** 
 174:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__CENTER == PWM_PWM_ALIGN)
 175:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_CENTER;
 176:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* ( PWM_PWM_CENTER == PWM_PWM_ALIGN) */
 177:.\Generated_Source\PSoC4/PWM.c **** 
 178:.\Generated_Source\PSoC4/PWM.c ****             #if (PWM__ASYMMETRIC == PWM_PWM_ALIGN)
 179:.\Generated_Source\PSoC4/PWM.c ****                 PWM_TRIG_CONTROL2_REG = PWM_PWM_MODE_ASYM;
 180:.\Generated_Source\PSoC4/PWM.c ****             #endif  /* (PWM__ASYMMETRIC == PWM_PWM_ALIGN) */
 181:.\Generated_Source\PSoC4/PWM.c ****         #endif  /* (PWM__PWM_PR == PWM_PWM_MODE) */
 182:.\Generated_Source\PSoC4/PWM.c ****     #endif  /* (PWM__PWM_SEL == PWM_CONFIG) */
 183:.\Generated_Source\PSoC4/PWM.c **** }
  87              		.loc 1 183 0
  88 0054 BD46     		mov	sp, r7
  89              		@ sp needed for prologue
  90 0056 80BD     		pop	{r7, pc}
  91              	.L3:
  92              		.align	2
  93              	.L2:
  94 0058 00010540 		.word	1074069760
  95 005c 24010540 		.word	1074069796
  96 0060 28010540 		.word	1074069800
  97              		.cfi_endproc
  98              	.LFE0:
  99              		.size	PWM_Init, .-PWM_Init
 100              		.section	.text.PWM_Enable,"ax",%progbits
 101              		.align	2
 102              		.global	PWM_Enable
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 6


 103              		.code	16
 104              		.thumb_func
 105              		.type	PWM_Enable, %function
 106              	PWM_Enable:
 107              	.LFB1:
 184:.\Generated_Source\PSoC4/PWM.c **** 
 185:.\Generated_Source\PSoC4/PWM.c **** 
 186:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 187:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Enable
 188:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 189:.\Generated_Source\PSoC4/PWM.c **** *
 190:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 191:.\Generated_Source\PSoC4/PWM.c **** *  Enables the PWM.
 192:.\Generated_Source\PSoC4/PWM.c **** *
 193:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 194:.\Generated_Source\PSoC4/PWM.c **** *  None
 195:.\Generated_Source\PSoC4/PWM.c **** *
 196:.\Generated_Source\PSoC4/PWM.c **** * Return:
 197:.\Generated_Source\PSoC4/PWM.c **** *  None
 198:.\Generated_Source\PSoC4/PWM.c **** *
 199:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 200:.\Generated_Source\PSoC4/PWM.c **** void PWM_Enable(void)
 201:.\Generated_Source\PSoC4/PWM.c **** {
 108              		.loc 1 201 0
 109              		.cfi_startproc
 110 0000 90B5     		push	{r4, r7, lr}
 111              	.LCFI2:
 112              		.cfi_def_cfa_offset 12
 113              		.cfi_offset 4, -12
 114              		.cfi_offset 7, -8
 115              		.cfi_offset 14, -4
 116 0002 83B0     		sub	sp, sp, #12
 117              	.LCFI3:
 118              		.cfi_def_cfa_offset 24
 119 0004 00AF     		add	r7, sp, #0
 120              	.LCFI4:
 121              		.cfi_def_cfa_register 7
 202:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 203:.\Generated_Source\PSoC4/PWM.c **** 
 204:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 122              		.loc 1 204 0
 123 0006 FC1D     		add	r4, r7, #7
 124 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 125 000c 031C     		mov	r3, r0
 126 000e 2370     		strb	r3, [r4]
 205:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG |= PWM_MASK;
 127              		.loc 1 205 0
 128 0010 064B     		ldr	r3, .L5
 129 0012 064A     		ldr	r2, .L5
 130 0014 1268     		ldr	r2, [r2]
 131 0016 0121     		mov	r1, #1
 132 0018 0A43     		orr	r2, r1
 133 001a 1A60     		str	r2, [r3]
 206:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 134              		.loc 1 206 0
 135 001c FB1D     		add	r3, r7, #7
 136 001e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 7


 137 0020 181C     		mov	r0, r3
 138 0022 FFF7FEFF 		bl	CyExitCriticalSection
 207:.\Generated_Source\PSoC4/PWM.c **** 
 208:.\Generated_Source\PSoC4/PWM.c ****     /* Start Timer or PWM if start input is absent */
 209:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__PWM_SEL == PWM_CONFIG)
 210:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_PWM_START_SIGNAL_PRESENT)
 211:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 212:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_PWM_START_SIGNAL_PRESENT) */
 213:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__PWM_SEL == PWM_CONFIG) */
 214:.\Generated_Source\PSoC4/PWM.c **** 
 215:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM__TIMER == PWM_CONFIG)
 216:.\Generated_Source\PSoC4/PWM.c ****         #if (0u == PWM_TC_START_SIGNAL_PRESENT)
 217:.\Generated_Source\PSoC4/PWM.c ****             PWM_TriggerCommand(PWM_MASK, PWM_CMD_START);
 218:.\Generated_Source\PSoC4/PWM.c ****         #endif /* (0u == PWM_TC_START_SIGNAL_PRESENT) */
 219:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM__TIMER == PWM_CONFIG) */
 220:.\Generated_Source\PSoC4/PWM.c **** }
 139              		.loc 1 220 0
 140 0026 BD46     		mov	sp, r7
 141 0028 03B0     		add	sp, sp, #12
 142              		@ sp needed for prologue
 143 002a 90BD     		pop	{r4, r7, pc}
 144              	.L6:
 145              		.align	2
 146              	.L5:
 147 002c 00000540 		.word	1074069504
 148              		.cfi_endproc
 149              	.LFE1:
 150              		.size	PWM_Enable, .-PWM_Enable
 151              		.section	.text.PWM_Start,"ax",%progbits
 152              		.align	2
 153              		.global	PWM_Start
 154              		.code	16
 155              		.thumb_func
 156              		.type	PWM_Start, %function
 157              	PWM_Start:
 158              	.LFB2:
 221:.\Generated_Source\PSoC4/PWM.c **** 
 222:.\Generated_Source\PSoC4/PWM.c **** 
 223:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 224:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Start
 225:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 226:.\Generated_Source\PSoC4/PWM.c **** *
 227:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 228:.\Generated_Source\PSoC4/PWM.c **** *  Initializes the PWM with default customizer
 229:.\Generated_Source\PSoC4/PWM.c **** *  values when called the first time and enables the PWM.
 230:.\Generated_Source\PSoC4/PWM.c **** *  For subsequent calls the configuration is left unchanged and the component is
 231:.\Generated_Source\PSoC4/PWM.c **** *  just enabled.
 232:.\Generated_Source\PSoC4/PWM.c **** *
 233:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 234:.\Generated_Source\PSoC4/PWM.c **** *  None
 235:.\Generated_Source\PSoC4/PWM.c **** *
 236:.\Generated_Source\PSoC4/PWM.c **** * Return:
 237:.\Generated_Source\PSoC4/PWM.c **** *  None
 238:.\Generated_Source\PSoC4/PWM.c **** *
 239:.\Generated_Source\PSoC4/PWM.c **** * Global variables:
 240:.\Generated_Source\PSoC4/PWM.c **** *  PWM_initVar: global variable is used to indicate initial
 241:.\Generated_Source\PSoC4/PWM.c **** *  configuration of this component.  The variable is initialized to zero and set
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 8


 242:.\Generated_Source\PSoC4/PWM.c **** *  to 1 the first time PWM_Start() is called. This allows
 243:.\Generated_Source\PSoC4/PWM.c **** *  enabling/disabling a component without re-initialization in all subsequent
 244:.\Generated_Source\PSoC4/PWM.c **** *  calls to the PWM_Start() routine.
 245:.\Generated_Source\PSoC4/PWM.c **** *
 246:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC4/PWM.c **** void PWM_Start(void)
 248:.\Generated_Source\PSoC4/PWM.c **** {
 159              		.loc 1 248 0
 160              		.cfi_startproc
 161 0000 80B5     		push	{r7, lr}
 162              	.LCFI5:
 163              		.cfi_def_cfa_offset 8
 164              		.cfi_offset 7, -8
 165              		.cfi_offset 14, -4
 166 0002 00AF     		add	r7, sp, #0
 167              	.LCFI6:
 168              		.cfi_def_cfa_register 7
 249:.\Generated_Source\PSoC4/PWM.c ****     if (0u == PWM_initVar)
 169              		.loc 1 249 0
 170 0004 064B     		ldr	r3, .L9
 171 0006 1B78     		ldrb	r3, [r3]
 172 0008 002B     		cmp	r3, #0
 173 000a 04D1     		bne	.L8
 250:.\Generated_Source\PSoC4/PWM.c ****     {
 251:.\Generated_Source\PSoC4/PWM.c ****         PWM_Init();
 174              		.loc 1 251 0
 175 000c FFF7FEFF 		bl	PWM_Init
 252:.\Generated_Source\PSoC4/PWM.c ****         PWM_initVar = 1u;
 176              		.loc 1 252 0
 177 0010 034B     		ldr	r3, .L9
 178 0012 0122     		mov	r2, #1
 179 0014 1A70     		strb	r2, [r3]
 180              	.L8:
 253:.\Generated_Source\PSoC4/PWM.c ****     }
 254:.\Generated_Source\PSoC4/PWM.c **** 
 255:.\Generated_Source\PSoC4/PWM.c ****     PWM_Enable();
 181              		.loc 1 255 0
 182 0016 FFF7FEFF 		bl	PWM_Enable
 256:.\Generated_Source\PSoC4/PWM.c **** }
 183              		.loc 1 256 0
 184 001a BD46     		mov	sp, r7
 185              		@ sp needed for prologue
 186 001c 80BD     		pop	{r7, pc}
 187              	.L10:
 188 001e C046     		.align	2
 189              	.L9:
 190 0020 00000000 		.word	PWM_initVar
 191              		.cfi_endproc
 192              	.LFE2:
 193              		.size	PWM_Start, .-PWM_Start
 194              		.section	.text.PWM_Stop,"ax",%progbits
 195              		.align	2
 196              		.global	PWM_Stop
 197              		.code	16
 198              		.thumb_func
 199              		.type	PWM_Stop, %function
 200              	PWM_Stop:
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 9


 201              	.LFB3:
 257:.\Generated_Source\PSoC4/PWM.c **** 
 258:.\Generated_Source\PSoC4/PWM.c **** 
 259:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 260:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_Stop
 261:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 262:.\Generated_Source\PSoC4/PWM.c **** *
 263:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 264:.\Generated_Source\PSoC4/PWM.c **** *  Disables the PWM.
 265:.\Generated_Source\PSoC4/PWM.c **** *
 266:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 267:.\Generated_Source\PSoC4/PWM.c **** *  None
 268:.\Generated_Source\PSoC4/PWM.c **** *
 269:.\Generated_Source\PSoC4/PWM.c **** * Return:
 270:.\Generated_Source\PSoC4/PWM.c **** *  None
 271:.\Generated_Source\PSoC4/PWM.c **** *
 272:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 273:.\Generated_Source\PSoC4/PWM.c **** void PWM_Stop(void)
 274:.\Generated_Source\PSoC4/PWM.c **** {
 202              		.loc 1 274 0
 203              		.cfi_startproc
 204 0000 90B5     		push	{r4, r7, lr}
 205              	.LCFI7:
 206              		.cfi_def_cfa_offset 12
 207              		.cfi_offset 4, -12
 208              		.cfi_offset 7, -8
 209              		.cfi_offset 14, -4
 210 0002 83B0     		sub	sp, sp, #12
 211              	.LCFI8:
 212              		.cfi_def_cfa_offset 24
 213 0004 00AF     		add	r7, sp, #0
 214              	.LCFI9:
 215              		.cfi_def_cfa_register 7
 275:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 276:.\Generated_Source\PSoC4/PWM.c **** 
 277:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 216              		.loc 1 277 0
 217 0006 FC1D     		add	r4, r7, #7
 218 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 219 000c 031C     		mov	r3, r0
 220 000e 2370     		strb	r3, [r4]
 278:.\Generated_Source\PSoC4/PWM.c **** 
 279:.\Generated_Source\PSoC4/PWM.c ****     PWM_BLOCK_CONTROL_REG &= (uint32)~PWM_MASK;
 221              		.loc 1 279 0
 222 0010 064B     		ldr	r3, .L12
 223 0012 064A     		ldr	r2, .L12
 224 0014 1268     		ldr	r2, [r2]
 225 0016 0121     		mov	r1, #1
 226 0018 8A43     		bic	r2, r1
 227 001a 1A60     		str	r2, [r3]
 280:.\Generated_Source\PSoC4/PWM.c **** 
 281:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 228              		.loc 1 281 0
 229 001c FB1D     		add	r3, r7, #7
 230 001e 1B78     		ldrb	r3, [r3]
 231 0020 181C     		mov	r0, r3
 232 0022 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 10


 282:.\Generated_Source\PSoC4/PWM.c **** }
 233              		.loc 1 282 0
 234 0026 BD46     		mov	sp, r7
 235 0028 03B0     		add	sp, sp, #12
 236              		@ sp needed for prologue
 237 002a 90BD     		pop	{r4, r7, pc}
 238              	.L13:
 239              		.align	2
 240              	.L12:
 241 002c 00000540 		.word	1074069504
 242              		.cfi_endproc
 243              	.LFE3:
 244              		.size	PWM_Stop, .-PWM_Stop
 245              		.section	.text.PWM_SetMode,"ax",%progbits
 246              		.align	2
 247              		.global	PWM_SetMode
 248              		.code	16
 249              		.thumb_func
 250              		.type	PWM_SetMode, %function
 251              	PWM_SetMode:
 252              	.LFB4:
 283:.\Generated_Source\PSoC4/PWM.c **** 
 284:.\Generated_Source\PSoC4/PWM.c **** 
 285:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetMode
 287:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/PWM.c **** *
 289:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 290:.\Generated_Source\PSoC4/PWM.c **** *  Sets the operation mode of the PWM. This function is used when
 291:.\Generated_Source\PSoC4/PWM.c **** *  configured as a generic PWM and the actual mode of operation is
 292:.\Generated_Source\PSoC4/PWM.c **** *  set at runtime. The mode must be set while the component is disabled.
 293:.\Generated_Source\PSoC4/PWM.c **** *
 294:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 295:.\Generated_Source\PSoC4/PWM.c **** *  mode: Mode for the PWM to operate in
 296:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 297:.\Generated_Source\PSoC4/PWM.c **** *   - PWM_MODE_TIMER_COMPARE - Timer / Counter with
 298:.\Generated_Source\PSoC4/PWM.c **** *                                                 compare capability
 299:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_TIMER_CAPTURE - Timer / Counter with
 300:.\Generated_Source\PSoC4/PWM.c **** *                                                 capture capability
 301:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_QUAD - Quadrature decoder
 302:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM - PWM
 303:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_DT - PWM with dead time
 304:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_PWM_PR - PWM with pseudo random capability
 305:.\Generated_Source\PSoC4/PWM.c **** *
 306:.\Generated_Source\PSoC4/PWM.c **** * Return:
 307:.\Generated_Source\PSoC4/PWM.c **** *  None
 308:.\Generated_Source\PSoC4/PWM.c **** *
 309:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 310:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetMode(uint32 mode)
 311:.\Generated_Source\PSoC4/PWM.c **** {
 253              		.loc 1 311 0
 254              		.cfi_startproc
 255 0000 90B5     		push	{r4, r7, lr}
 256              	.LCFI10:
 257              		.cfi_def_cfa_offset 12
 258              		.cfi_offset 4, -12
 259              		.cfi_offset 7, -8
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 11


 260              		.cfi_offset 14, -4
 261 0002 85B0     		sub	sp, sp, #20
 262              	.LCFI11:
 263              		.cfi_def_cfa_offset 32
 264 0004 00AF     		add	r7, sp, #0
 265              	.LCFI12:
 266              		.cfi_def_cfa_register 7
 267 0006 7860     		str	r0, [r7, #4]
 312:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 313:.\Generated_Source\PSoC4/PWM.c **** 
 314:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 268              		.loc 1 314 0
 269 0008 3C1C     		mov	r4, r7
 270 000a 0F34     		add	r4, r4, #15
 271 000c FFF7FEFF 		bl	CyEnterCriticalSection
 272 0010 031C     		mov	r3, r0
 273 0012 2370     		strb	r3, [r4]
 315:.\Generated_Source\PSoC4/PWM.c **** 
 316:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_MODE_MASK;
 274              		.loc 1 316 0
 275 0014 0A4B     		ldr	r3, .L15
 276 0016 0A4A     		ldr	r2, .L15
 277 0018 1168     		ldr	r1, [r2]
 278 001a 0A4A     		ldr	r2, .L15+4
 279 001c 0A40     		and	r2, r1
 280 001e 1A60     		str	r2, [r3]
 317:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mode;
 281              		.loc 1 317 0
 282 0020 074B     		ldr	r3, .L15
 283 0022 074A     		ldr	r2, .L15
 284 0024 1168     		ldr	r1, [r2]
 285 0026 7A68     		ldr	r2, [r7, #4]
 286 0028 0A43     		orr	r2, r1
 287 002a 1A60     		str	r2, [r3]
 318:.\Generated_Source\PSoC4/PWM.c **** 
 319:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 288              		.loc 1 319 0
 289 002c 3B1C     		mov	r3, r7
 290 002e 0F33     		add	r3, r3, #15
 291 0030 1B78     		ldrb	r3, [r3]
 292 0032 181C     		mov	r0, r3
 293 0034 FFF7FEFF 		bl	CyExitCriticalSection
 320:.\Generated_Source\PSoC4/PWM.c **** }
 294              		.loc 1 320 0
 295 0038 BD46     		mov	sp, r7
 296 003a 05B0     		add	sp, sp, #20
 297              		@ sp needed for prologue
 298 003c 90BD     		pop	{r4, r7, pc}
 299              	.L16:
 300 003e C046     		.align	2
 301              	.L15:
 302 0040 00010540 		.word	1074069760
 303 0044 FFFFFFF8 		.word	-117440513
 304              		.cfi_endproc
 305              	.LFE4:
 306              		.size	PWM_SetMode, .-PWM_SetMode
 307              		.section	.text.PWM_SetQDMode,"ax",%progbits
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 12


 308              		.align	2
 309              		.global	PWM_SetQDMode
 310              		.code	16
 311              		.thumb_func
 312              		.type	PWM_SetQDMode, %function
 313              	PWM_SetQDMode:
 314              	.LFB5:
 321:.\Generated_Source\PSoC4/PWM.c **** 
 322:.\Generated_Source\PSoC4/PWM.c **** 
 323:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 324:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetQDMode
 325:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 326:.\Generated_Source\PSoC4/PWM.c **** *
 327:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 328:.\Generated_Source\PSoC4/PWM.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 329:.\Generated_Source\PSoC4/PWM.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 330:.\Generated_Source\PSoC4/PWM.c **** *
 331:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 332:.\Generated_Source\PSoC4/PWM.c **** *  qdMode: Quadrature Decoder mode
 333:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 334:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X1 - Counts on phi 1 rising
 335:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X2 - Counts on both edges of phi1 (2x faster)
 336:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_MODE_X4 - Counts on both edges of phi1 and phi2
 337:.\Generated_Source\PSoC4/PWM.c **** *                                        (4x faster)
 338:.\Generated_Source\PSoC4/PWM.c **** *
 339:.\Generated_Source\PSoC4/PWM.c **** * Return:
 340:.\Generated_Source\PSoC4/PWM.c **** *  None
 341:.\Generated_Source\PSoC4/PWM.c **** *
 342:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 343:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetQDMode(uint32 qdMode)
 344:.\Generated_Source\PSoC4/PWM.c **** {
 315              		.loc 1 344 0
 316              		.cfi_startproc
 317 0000 90B5     		push	{r4, r7, lr}
 318              	.LCFI13:
 319              		.cfi_def_cfa_offset 12
 320              		.cfi_offset 4, -12
 321              		.cfi_offset 7, -8
 322              		.cfi_offset 14, -4
 323 0002 85B0     		sub	sp, sp, #20
 324              	.LCFI14:
 325              		.cfi_def_cfa_offset 32
 326 0004 00AF     		add	r7, sp, #0
 327              	.LCFI15:
 328              		.cfi_def_cfa_register 7
 329 0006 7860     		str	r0, [r7, #4]
 345:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 346:.\Generated_Source\PSoC4/PWM.c **** 
 347:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 330              		.loc 1 347 0
 331 0008 3C1C     		mov	r4, r7
 332 000a 0F34     		add	r4, r4, #15
 333 000c FFF7FEFF 		bl	CyEnterCriticalSection
 334 0010 031C     		mov	r3, r0
 335 0012 2370     		strb	r3, [r4]
 348:.\Generated_Source\PSoC4/PWM.c **** 
 349:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_QUAD_MODE_MASK;
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 13


 336              		.loc 1 349 0
 337 0014 0A4B     		ldr	r3, .L18
 338 0016 0A4A     		ldr	r2, .L18
 339 0018 1168     		ldr	r1, [r2]
 340 001a 0A4A     		ldr	r2, .L18+4
 341 001c 0A40     		and	r2, r1
 342 001e 1A60     		str	r2, [r3]
 350:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= qdMode;
 343              		.loc 1 350 0
 344 0020 074B     		ldr	r3, .L18
 345 0022 074A     		ldr	r2, .L18
 346 0024 1168     		ldr	r1, [r2]
 347 0026 7A68     		ldr	r2, [r7, #4]
 348 0028 0A43     		orr	r2, r1
 349 002a 1A60     		str	r2, [r3]
 351:.\Generated_Source\PSoC4/PWM.c **** 
 352:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 350              		.loc 1 352 0
 351 002c 3B1C     		mov	r3, r7
 352 002e 0F33     		add	r3, r3, #15
 353 0030 1B78     		ldrb	r3, [r3]
 354 0032 181C     		mov	r0, r3
 355 0034 FFF7FEFF 		bl	CyExitCriticalSection
 353:.\Generated_Source\PSoC4/PWM.c **** }
 356              		.loc 1 353 0
 357 0038 BD46     		mov	sp, r7
 358 003a 05B0     		add	sp, sp, #20
 359              		@ sp needed for prologue
 360 003c 90BD     		pop	{r4, r7, pc}
 361              	.L19:
 362 003e C046     		.align	2
 363              	.L18:
 364 0040 00010540 		.word	1074069760
 365 0044 FFFF8FFF 		.word	-7340033
 366              		.cfi_endproc
 367              	.LFE5:
 368              		.size	PWM_SetQDMode, .-PWM_SetQDMode
 369              		.section	.text.PWM_SetPrescaler,"ax",%progbits
 370              		.align	2
 371              		.global	PWM_SetPrescaler
 372              		.code	16
 373              		.thumb_func
 374              		.type	PWM_SetPrescaler, %function
 375              	PWM_SetPrescaler:
 376              	.LFB6:
 354:.\Generated_Source\PSoC4/PWM.c **** 
 355:.\Generated_Source\PSoC4/PWM.c **** 
 356:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 357:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPrescaler
 358:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 359:.\Generated_Source\PSoC4/PWM.c **** *
 360:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 361:.\Generated_Source\PSoC4/PWM.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 362:.\Generated_Source\PSoC4/PWM.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 363:.\Generated_Source\PSoC4/PWM.c **** *
 364:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 365:.\Generated_Source\PSoC4/PWM.c **** *  prescaler: Prescaler divider value
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 14


 366:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 367:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 368:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY2    - Divide by 2
 369:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY4    - Divide by 4
 370:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY8    - Divide by 8
 371:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY16   - Divide by 16
 372:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY32   - Divide by 32
 373:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY64   - Divide by 64
 374:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_PRESCALE_DIVBY128  - Divide by 128
 375:.\Generated_Source\PSoC4/PWM.c **** *
 376:.\Generated_Source\PSoC4/PWM.c **** * Return:
 377:.\Generated_Source\PSoC4/PWM.c **** *  None
 378:.\Generated_Source\PSoC4/PWM.c **** *
 379:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 380:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPrescaler(uint32 prescaler)
 381:.\Generated_Source\PSoC4/PWM.c **** {
 377              		.loc 1 381 0
 378              		.cfi_startproc
 379 0000 90B5     		push	{r4, r7, lr}
 380              	.LCFI16:
 381              		.cfi_def_cfa_offset 12
 382              		.cfi_offset 4, -12
 383              		.cfi_offset 7, -8
 384              		.cfi_offset 14, -4
 385 0002 85B0     		sub	sp, sp, #20
 386              	.LCFI17:
 387              		.cfi_def_cfa_offset 32
 388 0004 00AF     		add	r7, sp, #0
 389              	.LCFI18:
 390              		.cfi_def_cfa_register 7
 391 0006 7860     		str	r0, [r7, #4]
 382:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 383:.\Generated_Source\PSoC4/PWM.c **** 
 384:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 392              		.loc 1 384 0
 393 0008 3C1C     		mov	r4, r7
 394 000a 0F34     		add	r4, r4, #15
 395 000c FFF7FEFF 		bl	CyEnterCriticalSection
 396 0010 031C     		mov	r3, r0
 397 0012 2370     		strb	r3, [r4]
 385:.\Generated_Source\PSoC4/PWM.c **** 
 386:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 398              		.loc 1 386 0
 399 0014 0A4B     		ldr	r3, .L21
 400 0016 0A4A     		ldr	r2, .L21
 401 0018 1168     		ldr	r1, [r2]
 402 001a 0A4A     		ldr	r2, .L21+4
 403 001c 0A40     		and	r2, r1
 404 001e 1A60     		str	r2, [r3]
 387:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= prescaler;
 405              		.loc 1 387 0
 406 0020 074B     		ldr	r3, .L21
 407 0022 074A     		ldr	r2, .L21
 408 0024 1168     		ldr	r1, [r2]
 409 0026 7A68     		ldr	r2, [r7, #4]
 410 0028 0A43     		orr	r2, r1
 411 002a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 15


 388:.\Generated_Source\PSoC4/PWM.c **** 
 389:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 412              		.loc 1 389 0
 413 002c 3B1C     		mov	r3, r7
 414 002e 0F33     		add	r3, r3, #15
 415 0030 1B78     		ldrb	r3, [r3]
 416 0032 181C     		mov	r0, r3
 417 0034 FFF7FEFF 		bl	CyExitCriticalSection
 390:.\Generated_Source\PSoC4/PWM.c **** }
 418              		.loc 1 390 0
 419 0038 BD46     		mov	sp, r7
 420 003a 05B0     		add	sp, sp, #20
 421              		@ sp needed for prologue
 422 003c 90BD     		pop	{r4, r7, pc}
 423              	.L22:
 424 003e C046     		.align	2
 425              	.L21:
 426 0040 00010540 		.word	1074069760
 427 0044 FF00FFFF 		.word	-65281
 428              		.cfi_endproc
 429              	.LFE6:
 430              		.size	PWM_SetPrescaler, .-PWM_SetPrescaler
 431              		.section	.text.PWM_SetOneShot,"ax",%progbits
 432              		.align	2
 433              		.global	PWM_SetOneShot
 434              		.code	16
 435              		.thumb_func
 436              		.type	PWM_SetOneShot, %function
 437              	PWM_SetOneShot:
 438              	.LFB7:
 391:.\Generated_Source\PSoC4/PWM.c **** 
 392:.\Generated_Source\PSoC4/PWM.c **** 
 393:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 394:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetOneShot
 395:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 396:.\Generated_Source\PSoC4/PWM.c **** *
 397:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 398:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM runs
 399:.\Generated_Source\PSoC4/PWM.c **** *  continuously or stops when terminal count is reached.  By default the
 400:.\Generated_Source\PSoC4/PWM.c **** *  PWM operates in the continuous mode.
 401:.\Generated_Source\PSoC4/PWM.c **** *
 402:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 403:.\Generated_Source\PSoC4/PWM.c **** *  oneShotEnable
 404:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 405:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Continuous
 406:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable One Shot
 407:.\Generated_Source\PSoC4/PWM.c **** *
 408:.\Generated_Source\PSoC4/PWM.c **** * Return:
 409:.\Generated_Source\PSoC4/PWM.c **** *  None
 410:.\Generated_Source\PSoC4/PWM.c **** *
 411:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 412:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetOneShot(uint32 oneShotEnable)
 413:.\Generated_Source\PSoC4/PWM.c **** {
 439              		.loc 1 413 0
 440              		.cfi_startproc
 441 0000 90B5     		push	{r4, r7, lr}
 442              	.LCFI19:
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 16


 443              		.cfi_def_cfa_offset 12
 444              		.cfi_offset 4, -12
 445              		.cfi_offset 7, -8
 446              		.cfi_offset 14, -4
 447 0002 85B0     		sub	sp, sp, #20
 448              	.LCFI20:
 449              		.cfi_def_cfa_offset 32
 450 0004 00AF     		add	r7, sp, #0
 451              	.LCFI21:
 452              		.cfi_def_cfa_register 7
 453 0006 7860     		str	r0, [r7, #4]
 414:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 415:.\Generated_Source\PSoC4/PWM.c **** 
 416:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 454              		.loc 1 416 0
 455 0008 3C1C     		mov	r4, r7
 456 000a 0F34     		add	r4, r4, #15
 457 000c FFF7FEFF 		bl	CyEnterCriticalSection
 458 0010 031C     		mov	r3, r0
 459 0012 2370     		strb	r3, [r4]
 417:.\Generated_Source\PSoC4/PWM.c **** 
 418:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_ONESHOT_MASK;
 460              		.loc 1 418 0
 461 0014 0B4B     		ldr	r3, .L24
 462 0016 0B4A     		ldr	r2, .L24
 463 0018 1168     		ldr	r1, [r2]
 464 001a 0B4A     		ldr	r2, .L24+4
 465 001c 0A40     		and	r2, r1
 466 001e 1A60     		str	r2, [r3]
 419:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_1BIT_MASK) <<
 467              		.loc 1 419 0
 468 0020 084B     		ldr	r3, .L24
 469 0022 084A     		ldr	r2, .L24
 470 0024 1168     		ldr	r1, [r2]
 471 0026 7868     		ldr	r0, [r7, #4]
 472 0028 0122     		mov	r2, #1
 473 002a 0240     		and	r2, r0
 474 002c 9204     		lsl	r2, r2, #18
 475 002e 0A43     		orr	r2, r1
 476 0030 1A60     		str	r2, [r3]
 420:.\Generated_Source\PSoC4/PWM.c ****                                                                PWM_ONESHOT_SHIFT));
 421:.\Generated_Source\PSoC4/PWM.c **** 
 422:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 477              		.loc 1 422 0
 478 0032 3B1C     		mov	r3, r7
 479 0034 0F33     		add	r3, r3, #15
 480 0036 1B78     		ldrb	r3, [r3]
 481 0038 181C     		mov	r0, r3
 482 003a FFF7FEFF 		bl	CyExitCriticalSection
 423:.\Generated_Source\PSoC4/PWM.c **** }
 483              		.loc 1 423 0
 484 003e BD46     		mov	sp, r7
 485 0040 05B0     		add	sp, sp, #20
 486              		@ sp needed for prologue
 487 0042 90BD     		pop	{r4, r7, pc}
 488              	.L25:
 489              		.align	2
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 17


 490              	.L24:
 491 0044 00010540 		.word	1074069760
 492 0048 FFFFFBFF 		.word	-262145
 493              		.cfi_endproc
 494              	.LFE7:
 495              		.size	PWM_SetOneShot, .-PWM_SetOneShot
 496              		.section	.text.PWM_SetPWMMode,"ax",%progbits
 497              		.align	2
 498              		.global	PWM_SetPWMMode
 499              		.code	16
 500              		.thumb_func
 501              		.type	PWM_SetPWMMode, %function
 502              	PWM_SetPWMMode:
 503              	.LFB8:
 424:.\Generated_Source\PSoC4/PWM.c **** 
 425:.\Generated_Source\PSoC4/PWM.c **** 
 426:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 427:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMMode
 428:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 429:.\Generated_Source\PSoC4/PWM.c **** *
 430:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 431:.\Generated_Source\PSoC4/PWM.c **** *  Writes the control register that determines what mode of operation the PWM
 432:.\Generated_Source\PSoC4/PWM.c **** *  output lines are driven in.  There is a setting for what to do on a
 433:.\Generated_Source\PSoC4/PWM.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 434:.\Generated_Source\PSoC4/PWM.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 435:.\Generated_Source\PSoC4/PWM.c **** *  the mode.
 436:.\Generated_Source\PSoC4/PWM.c **** *
 437:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 438:.\Generated_Source\PSoC4/PWM.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 439:.\Generated_Source\PSoC4/PWM.c **** *  for each of the three or use one of the preconfigured PWM settings.
 440:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 441:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_SET        - Set on comparison match
 442:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 443:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 444:.\Generated_Source\PSoC4/PWM.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 445:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_SET         - Set on overflow
 446:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 447:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_INVERT      - Invert on overflow
 448:.\Generated_Source\PSoC4/PWM.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 449:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_SET       - Set on underflow
 450:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 451:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 452:.\Generated_Source\PSoC4/PWM.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 453:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 454:.\Generated_Source\PSoC4/PWM.c **** *                             with up counting mode
 455:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 456:.\Generated_Source\PSoC4/PWM.c **** *                             with down counting mode
 457:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 458:.\Generated_Source\PSoC4/PWM.c **** *                             combined with up/down 0 mode
 459:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 460:.\Generated_Source\PSoC4/PWM.c **** *                             with up/down 1 mode
 461:.\Generated_Source\PSoC4/PWM.c **** *
 462:.\Generated_Source\PSoC4/PWM.c **** * Return:
 463:.\Generated_Source\PSoC4/PWM.c **** *  None
 464:.\Generated_Source\PSoC4/PWM.c **** *
 465:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 466:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMMode(uint32 modeMask)
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 18


 467:.\Generated_Source\PSoC4/PWM.c **** {
 504              		.loc 1 467 0
 505              		.cfi_startproc
 506 0000 80B5     		push	{r7, lr}
 507              	.LCFI22:
 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 7, -8
 510              		.cfi_offset 14, -4
 511 0002 82B0     		sub	sp, sp, #8
 512              	.LCFI23:
 513              		.cfi_def_cfa_offset 16
 514 0004 00AF     		add	r7, sp, #0
 515              	.LCFI24:
 516              		.cfi_def_cfa_register 7
 517 0006 7860     		str	r0, [r7, #4]
 468:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL2_REG = (modeMask & PWM_6BIT_MASK);
 518              		.loc 1 468 0
 519 0008 034B     		ldr	r3, .L27
 520 000a 7968     		ldr	r1, [r7, #4]
 521 000c 3F22     		mov	r2, #63
 522 000e 0A40     		and	r2, r1
 523 0010 1A60     		str	r2, [r3]
 469:.\Generated_Source\PSoC4/PWM.c **** }
 524              		.loc 1 469 0
 525 0012 BD46     		mov	sp, r7
 526 0014 02B0     		add	sp, sp, #8
 527              		@ sp needed for prologue
 528 0016 80BD     		pop	{r7, pc}
 529              	.L28:
 530              		.align	2
 531              	.L27:
 532 0018 28010540 		.word	1074069800
 533              		.cfi_endproc
 534              	.LFE8:
 535              		.size	PWM_SetPWMMode, .-PWM_SetPWMMode
 536              		.section	.text.PWM_SetPWMSyncKill,"ax",%progbits
 537              		.align	2
 538              		.global	PWM_SetPWMSyncKill
 539              		.code	16
 540              		.thumb_func
 541              		.type	PWM_SetPWMSyncKill, %function
 542              	PWM_SetPWMSyncKill:
 543              	.LFB9:
 470:.\Generated_Source\PSoC4/PWM.c **** 
 471:.\Generated_Source\PSoC4/PWM.c **** 
 472:.\Generated_Source\PSoC4/PWM.c **** 
 473:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 474:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMSyncKill
 475:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 476:.\Generated_Source\PSoC4/PWM.c **** *
 477:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 478:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 479:.\Generated_Source\PSoC4/PWM.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 480:.\Generated_Source\PSoC4/PWM.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 481:.\Generated_Source\PSoC4/PWM.c **** *  and PWM with dead time modes.
 482:.\Generated_Source\PSoC4/PWM.c **** *
 483:.\Generated_Source\PSoC4/PWM.c **** *  For Synchronous mode the kill signal disables both the line and line_n
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 19


 484:.\Generated_Source\PSoC4/PWM.c **** *  signals until the next terminal count.
 485:.\Generated_Source\PSoC4/PWM.c **** *
 486:.\Generated_Source\PSoC4/PWM.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 487:.\Generated_Source\PSoC4/PWM.c **** *  signals when the kill signal is present.  This mode should only be used
 488:.\Generated_Source\PSoC4/PWM.c **** *  when the kill signal (stop input) is configured in the pass through mode
 489:.\Generated_Source\PSoC4/PWM.c **** *  (Level sensitive signal).
 490:.\Generated_Source\PSoC4/PWM.c **** 
 491:.\Generated_Source\PSoC4/PWM.c **** *
 492:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 493:.\Generated_Source\PSoC4/PWM.c **** *  syncKillEnable
 494:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 495:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Asynchronous
 496:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Synchronous
 497:.\Generated_Source\PSoC4/PWM.c **** *
 498:.\Generated_Source\PSoC4/PWM.c **** * Return:
 499:.\Generated_Source\PSoC4/PWM.c **** *  None
 500:.\Generated_Source\PSoC4/PWM.c **** *
 501:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 502:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMSyncKill(uint32 syncKillEnable)
 503:.\Generated_Source\PSoC4/PWM.c **** {
 544              		.loc 1 503 0
 545              		.cfi_startproc
 546 0000 90B5     		push	{r4, r7, lr}
 547              	.LCFI25:
 548              		.cfi_def_cfa_offset 12
 549              		.cfi_offset 4, -12
 550              		.cfi_offset 7, -8
 551              		.cfi_offset 14, -4
 552 0002 85B0     		sub	sp, sp, #20
 553              	.LCFI26:
 554              		.cfi_def_cfa_offset 32
 555 0004 00AF     		add	r7, sp, #0
 556              	.LCFI27:
 557              		.cfi_def_cfa_register 7
 558 0006 7860     		str	r0, [r7, #4]
 504:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 505:.\Generated_Source\PSoC4/PWM.c **** 
 506:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 559              		.loc 1 506 0
 560 0008 3C1C     		mov	r4, r7
 561 000a 0F34     		add	r4, r4, #15
 562 000c FFF7FEFF 		bl	CyEnterCriticalSection
 563 0010 031C     		mov	r3, r0
 564 0012 2370     		strb	r3, [r4]
 507:.\Generated_Source\PSoC4/PWM.c **** 
 508:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_SYNC_KILL_MASK;
 565              		.loc 1 508 0
 566 0014 0B4B     		ldr	r3, .L30
 567 0016 0B4A     		ldr	r2, .L30
 568 0018 1268     		ldr	r2, [r2]
 569 001a 0421     		mov	r1, #4
 570 001c 8A43     		bic	r2, r1
 571 001e 1A60     		str	r2, [r3]
 509:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_1BIT_MASK)  <<
 572              		.loc 1 509 0
 573 0020 084B     		ldr	r3, .L30
 574 0022 084A     		ldr	r2, .L30
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 20


 575 0024 1168     		ldr	r1, [r2]
 576 0026 7868     		ldr	r0, [r7, #4]
 577 0028 0122     		mov	r2, #1
 578 002a 0240     		and	r2, r0
 579 002c 9200     		lsl	r2, r2, #2
 580 002e 0A43     		orr	r2, r1
 581 0030 1A60     		str	r2, [r3]
 510:.\Generated_Source\PSoC4/PWM.c ****                                                PWM_PWM_SYNC_KILL_SHIFT));
 511:.\Generated_Source\PSoC4/PWM.c **** 
 512:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 582              		.loc 1 512 0
 583 0032 3B1C     		mov	r3, r7
 584 0034 0F33     		add	r3, r3, #15
 585 0036 1B78     		ldrb	r3, [r3]
 586 0038 181C     		mov	r0, r3
 587 003a FFF7FEFF 		bl	CyExitCriticalSection
 513:.\Generated_Source\PSoC4/PWM.c **** }
 588              		.loc 1 513 0
 589 003e BD46     		mov	sp, r7
 590 0040 05B0     		add	sp, sp, #20
 591              		@ sp needed for prologue
 592 0042 90BD     		pop	{r4, r7, pc}
 593              	.L31:
 594              		.align	2
 595              	.L30:
 596 0044 00010540 		.word	1074069760
 597              		.cfi_endproc
 598              	.LFE9:
 599              		.size	PWM_SetPWMSyncKill, .-PWM_SetPWMSyncKill
 600              		.section	.text.PWM_SetPWMStopOnKill,"ax",%progbits
 601              		.align	2
 602              		.global	PWM_SetPWMStopOnKill
 603              		.code	16
 604              		.thumb_func
 605              		.type	PWM_SetPWMStopOnKill, %function
 606              	PWM_SetPWMStopOnKill:
 607              	.LFB10:
 514:.\Generated_Source\PSoC4/PWM.c **** 
 515:.\Generated_Source\PSoC4/PWM.c **** 
 516:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 517:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMStopOnKill
 518:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 519:.\Generated_Source\PSoC4/PWM.c **** *
 520:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 521:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 522:.\Generated_Source\PSoC4/PWM.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 523:.\Generated_Source\PSoC4/PWM.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 524:.\Generated_Source\PSoC4/PWM.c **** *
 525:.\Generated_Source\PSoC4/PWM.c **** *
 526:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 527:.\Generated_Source\PSoC4/PWM.c **** *  stopOnKillEnable
 528:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 529:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Don't stop
 530:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Stop
 531:.\Generated_Source\PSoC4/PWM.c **** *
 532:.\Generated_Source\PSoC4/PWM.c **** * Return:
 533:.\Generated_Source\PSoC4/PWM.c **** *  None
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 21


 534:.\Generated_Source\PSoC4/PWM.c **** *
 535:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 536:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMStopOnKill(uint32 stopOnKillEnable)
 537:.\Generated_Source\PSoC4/PWM.c **** {
 608              		.loc 1 537 0
 609              		.cfi_startproc
 610 0000 90B5     		push	{r4, r7, lr}
 611              	.LCFI28:
 612              		.cfi_def_cfa_offset 12
 613              		.cfi_offset 4, -12
 614              		.cfi_offset 7, -8
 615              		.cfi_offset 14, -4
 616 0002 85B0     		sub	sp, sp, #20
 617              	.LCFI29:
 618              		.cfi_def_cfa_offset 32
 619 0004 00AF     		add	r7, sp, #0
 620              	.LCFI30:
 621              		.cfi_def_cfa_register 7
 622 0006 7860     		str	r0, [r7, #4]
 538:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 539:.\Generated_Source\PSoC4/PWM.c **** 
 540:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 623              		.loc 1 540 0
 624 0008 3C1C     		mov	r4, r7
 625 000a 0F34     		add	r4, r4, #15
 626 000c FFF7FEFF 		bl	CyEnterCriticalSection
 627 0010 031C     		mov	r3, r0
 628 0012 2370     		strb	r3, [r4]
 541:.\Generated_Source\PSoC4/PWM.c **** 
 542:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PWM_STOP_KILL_MASK;
 629              		.loc 1 542 0
 630 0014 0B4B     		ldr	r3, .L33
 631 0016 0B4A     		ldr	r2, .L33
 632 0018 1268     		ldr	r2, [r2]
 633 001a 0821     		mov	r1, #8
 634 001c 8A43     		bic	r2, r1
 635 001e 1A60     		str	r2, [r3]
 543:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_1BIT_MASK)  <<
 636              		.loc 1 543 0
 637 0020 084B     		ldr	r3, .L33
 638 0022 084A     		ldr	r2, .L33
 639 0024 1168     		ldr	r1, [r2]
 640 0026 7868     		ldr	r0, [r7, #4]
 641 0028 0122     		mov	r2, #1
 642 002a 0240     		and	r2, r0
 643 002c D200     		lsl	r2, r2, #3
 644 002e 0A43     		orr	r2, r1
 645 0030 1A60     		str	r2, [r3]
 544:.\Generated_Source\PSoC4/PWM.c ****                                                          PWM_PWM_STOP_KILL_SHIFT));
 545:.\Generated_Source\PSoC4/PWM.c **** 
 546:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 646              		.loc 1 546 0
 647 0032 3B1C     		mov	r3, r7
 648 0034 0F33     		add	r3, r3, #15
 649 0036 1B78     		ldrb	r3, [r3]
 650 0038 181C     		mov	r0, r3
 651 003a FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 22


 547:.\Generated_Source\PSoC4/PWM.c **** }
 652              		.loc 1 547 0
 653 003e BD46     		mov	sp, r7
 654 0040 05B0     		add	sp, sp, #20
 655              		@ sp needed for prologue
 656 0042 90BD     		pop	{r4, r7, pc}
 657              	.L34:
 658              		.align	2
 659              	.L33:
 660 0044 00010540 		.word	1074069760
 661              		.cfi_endproc
 662              	.LFE10:
 663              		.size	PWM_SetPWMStopOnKill, .-PWM_SetPWMStopOnKill
 664              		.section	.text.PWM_SetPWMDeadTime,"ax",%progbits
 665              		.align	2
 666              		.global	PWM_SetPWMDeadTime
 667              		.code	16
 668              		.thumb_func
 669              		.type	PWM_SetPWMDeadTime, %function
 670              	PWM_SetPWMDeadTime:
 671              	.LFB11:
 548:.\Generated_Source\PSoC4/PWM.c **** 
 549:.\Generated_Source\PSoC4/PWM.c **** 
 550:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 551:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMDeadTime
 552:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 553:.\Generated_Source\PSoC4/PWM.c **** *
 554:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 555:.\Generated_Source\PSoC4/PWM.c **** *  Writes the dead time control value.  This value delays the rising edge of
 556:.\Generated_Source\PSoC4/PWM.c **** *  both the line and line_n signals the designated number of cycles resulting
 557:.\Generated_Source\PSoC4/PWM.c **** *  in both signals being inactive for that many cycles.  This functionality is
 558:.\Generated_Source\PSoC4/PWM.c **** *  only applicable to the PWM in the dead time mode.
 559:.\Generated_Source\PSoC4/PWM.c **** 
 560:.\Generated_Source\PSoC4/PWM.c **** *
 561:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 562:.\Generated_Source\PSoC4/PWM.c **** *  Dead time to insert
 563:.\Generated_Source\PSoC4/PWM.c **** *   Values: 0 to 255
 564:.\Generated_Source\PSoC4/PWM.c **** *
 565:.\Generated_Source\PSoC4/PWM.c **** * Return:
 566:.\Generated_Source\PSoC4/PWM.c **** *  None
 567:.\Generated_Source\PSoC4/PWM.c **** *
 568:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 569:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMDeadTime(uint32 deadTime)
 570:.\Generated_Source\PSoC4/PWM.c **** {
 672              		.loc 1 570 0
 673              		.cfi_startproc
 674 0000 90B5     		push	{r4, r7, lr}
 675              	.LCFI31:
 676              		.cfi_def_cfa_offset 12
 677              		.cfi_offset 4, -12
 678              		.cfi_offset 7, -8
 679              		.cfi_offset 14, -4
 680 0002 85B0     		sub	sp, sp, #20
 681              	.LCFI32:
 682              		.cfi_def_cfa_offset 32
 683 0004 00AF     		add	r7, sp, #0
 684              	.LCFI33:
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 23


 685              		.cfi_def_cfa_register 7
 686 0006 7860     		str	r0, [r7, #4]
 571:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 572:.\Generated_Source\PSoC4/PWM.c **** 
 573:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 687              		.loc 1 573 0
 688 0008 3C1C     		mov	r4, r7
 689 000a 0F34     		add	r4, r4, #15
 690 000c FFF7FEFF 		bl	CyEnterCriticalSection
 691 0010 031C     		mov	r3, r0
 692 0012 2370     		strb	r3, [r4]
 574:.\Generated_Source\PSoC4/PWM.c **** 
 575:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_PRESCALER_MASK;
 693              		.loc 1 575 0
 694 0014 0B4B     		ldr	r3, .L36
 695 0016 0B4A     		ldr	r2, .L36
 696 0018 1168     		ldr	r1, [r2]
 697 001a 0B4A     		ldr	r2, .L36+4
 698 001c 0A40     		and	r2, r1
 699 001e 1A60     		str	r2, [r3]
 576:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((deadTime & PWM_8BIT_MASK) <<
 700              		.loc 1 576 0
 701 0020 084B     		ldr	r3, .L36
 702 0022 084A     		ldr	r2, .L36
 703 0024 1168     		ldr	r1, [r2]
 704 0026 7A68     		ldr	r2, [r7, #4]
 705 0028 1202     		lsl	r2, r2, #8
 706 002a 1204     		lsl	r2, r2, #16
 707 002c 120C     		lsr	r2, r2, #16
 708 002e 0A43     		orr	r2, r1
 709 0030 1A60     		str	r2, [r3]
 577:.\Generated_Source\PSoC4/PWM.c ****                                                           PWM_PRESCALER_SHIFT));
 578:.\Generated_Source\PSoC4/PWM.c **** 
 579:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 710              		.loc 1 579 0
 711 0032 3B1C     		mov	r3, r7
 712 0034 0F33     		add	r3, r3, #15
 713 0036 1B78     		ldrb	r3, [r3]
 714 0038 181C     		mov	r0, r3
 715 003a FFF7FEFF 		bl	CyExitCriticalSection
 580:.\Generated_Source\PSoC4/PWM.c **** }
 716              		.loc 1 580 0
 717 003e BD46     		mov	sp, r7
 718 0040 05B0     		add	sp, sp, #20
 719              		@ sp needed for prologue
 720 0042 90BD     		pop	{r4, r7, pc}
 721              	.L37:
 722              		.align	2
 723              	.L36:
 724 0044 00010540 		.word	1074069760
 725 0048 FF00FFFF 		.word	-65281
 726              		.cfi_endproc
 727              	.LFE11:
 728              		.size	PWM_SetPWMDeadTime, .-PWM_SetPWMDeadTime
 729              		.section	.text.PWM_SetPWMInvert,"ax",%progbits
 730              		.align	2
 731              		.global	PWM_SetPWMInvert
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 24


 732              		.code	16
 733              		.thumb_func
 734              		.type	PWM_SetPWMInvert, %function
 735              	PWM_SetPWMInvert:
 736              	.LFB12:
 581:.\Generated_Source\PSoC4/PWM.c **** 
 582:.\Generated_Source\PSoC4/PWM.c **** 
 583:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 584:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPWMInvert
 585:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 586:.\Generated_Source\PSoC4/PWM.c **** *
 587:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 588:.\Generated_Source\PSoC4/PWM.c **** *  Writes the bits that control whether the line and line_n outputs are
 589:.\Generated_Source\PSoC4/PWM.c **** *  inverted from their normal output values.  This functionality is only
 590:.\Generated_Source\PSoC4/PWM.c **** *  applicable to the three PWM modes.
 591:.\Generated_Source\PSoC4/PWM.c **** *
 592:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 593:.\Generated_Source\PSoC4/PWM.c **** *  mask: Mask of outputs to invert.
 594:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 595:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE   - Inverts the line output
 596:.\Generated_Source\PSoC4/PWM.c **** *         - PWM_INVERT_LINE_N - Inverts the line_n output
 597:.\Generated_Source\PSoC4/PWM.c **** *
 598:.\Generated_Source\PSoC4/PWM.c **** * Return:
 599:.\Generated_Source\PSoC4/PWM.c **** *  None
 600:.\Generated_Source\PSoC4/PWM.c **** *
 601:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 602:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPWMInvert(uint32 mask)
 603:.\Generated_Source\PSoC4/PWM.c **** {
 737              		.loc 1 603 0
 738              		.cfi_startproc
 739 0000 90B5     		push	{r4, r7, lr}
 740              	.LCFI34:
 741              		.cfi_def_cfa_offset 12
 742              		.cfi_offset 4, -12
 743              		.cfi_offset 7, -8
 744              		.cfi_offset 14, -4
 745 0002 85B0     		sub	sp, sp, #20
 746              	.LCFI35:
 747              		.cfi_def_cfa_offset 32
 748 0004 00AF     		add	r7, sp, #0
 749              	.LCFI36:
 750              		.cfi_def_cfa_register 7
 751 0006 7860     		str	r0, [r7, #4]
 604:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 605:.\Generated_Source\PSoC4/PWM.c **** 
 606:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 752              		.loc 1 606 0
 753 0008 3C1C     		mov	r4, r7
 754 000a 0F34     		add	r4, r4, #15
 755 000c FFF7FEFF 		bl	CyEnterCriticalSection
 756 0010 031C     		mov	r3, r0
 757 0012 2370     		strb	r3, [r4]
 607:.\Generated_Source\PSoC4/PWM.c **** 
 608:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_INV_OUT_MASK;
 758              		.loc 1 608 0
 759 0014 0A4B     		ldr	r3, .L39
 760 0016 0A4A     		ldr	r2, .L39
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 25


 761 0018 1168     		ldr	r1, [r2]
 762 001a 0A4A     		ldr	r2, .L39+4
 763 001c 0A40     		and	r2, r1
 764 001e 1A60     		str	r2, [r3]
 609:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= mask;
 765              		.loc 1 609 0
 766 0020 074B     		ldr	r3, .L39
 767 0022 074A     		ldr	r2, .L39
 768 0024 1168     		ldr	r1, [r2]
 769 0026 7A68     		ldr	r2, [r7, #4]
 770 0028 0A43     		orr	r2, r1
 771 002a 1A60     		str	r2, [r3]
 610:.\Generated_Source\PSoC4/PWM.c **** 
 611:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 772              		.loc 1 611 0
 773 002c 3B1C     		mov	r3, r7
 774 002e 0F33     		add	r3, r3, #15
 775 0030 1B78     		ldrb	r3, [r3]
 776 0032 181C     		mov	r0, r3
 777 0034 FFF7FEFF 		bl	CyExitCriticalSection
 612:.\Generated_Source\PSoC4/PWM.c **** }
 778              		.loc 1 612 0
 779 0038 BD46     		mov	sp, r7
 780 003a 05B0     		add	sp, sp, #20
 781              		@ sp needed for prologue
 782 003c 90BD     		pop	{r4, r7, pc}
 783              	.L40:
 784 003e C046     		.align	2
 785              	.L39:
 786 0040 00010540 		.word	1074069760
 787 0044 FFFFCFFF 		.word	-3145729
 788              		.cfi_endproc
 789              	.LFE12:
 790              		.size	PWM_SetPWMInvert, .-PWM_SetPWMInvert
 791              		.section	.text.PWM_WriteCounter,"ax",%progbits
 792              		.align	2
 793              		.global	PWM_WriteCounter
 794              		.code	16
 795              		.thumb_func
 796              		.type	PWM_WriteCounter, %function
 797              	PWM_WriteCounter:
 798              	.LFB13:
 613:.\Generated_Source\PSoC4/PWM.c **** 
 614:.\Generated_Source\PSoC4/PWM.c **** 
 615:.\Generated_Source\PSoC4/PWM.c **** 
 616:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 617:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCounter
 618:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 619:.\Generated_Source\PSoC4/PWM.c **** *
 620:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 621:.\Generated_Source\PSoC4/PWM.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 622:.\Generated_Source\PSoC4/PWM.c **** *  setting the counter (not the period) to the value written. It is not
 623:.\Generated_Source\PSoC4/PWM.c **** *  advised to write to this field when the counter is running.
 624:.\Generated_Source\PSoC4/PWM.c **** *
 625:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 626:.\Generated_Source\PSoC4/PWM.c **** *  count: value to write
 627:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 26


 628:.\Generated_Source\PSoC4/PWM.c **** * Return:
 629:.\Generated_Source\PSoC4/PWM.c **** *  None
 630:.\Generated_Source\PSoC4/PWM.c **** *
 631:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 632:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCounter(uint32 count)
 633:.\Generated_Source\PSoC4/PWM.c **** {
 799              		.loc 1 633 0
 800              		.cfi_startproc
 801 0000 80B5     		push	{r7, lr}
 802              	.LCFI37:
 803              		.cfi_def_cfa_offset 8
 804              		.cfi_offset 7, -8
 805              		.cfi_offset 14, -4
 806 0002 82B0     		sub	sp, sp, #8
 807              	.LCFI38:
 808              		.cfi_def_cfa_offset 16
 809 0004 00AF     		add	r7, sp, #0
 810              	.LCFI39:
 811              		.cfi_def_cfa_register 7
 812 0006 7860     		str	r0, [r7, #4]
 634:.\Generated_Source\PSoC4/PWM.c ****     PWM_COUNTER_REG = (count & PWM_16BIT_MASK);
 813              		.loc 1 634 0
 814 0008 034B     		ldr	r3, .L42
 815 000a 7A68     		ldr	r2, [r7, #4]
 816 000c 1204     		lsl	r2, r2, #16
 817 000e 120C     		lsr	r2, r2, #16
 818 0010 1A60     		str	r2, [r3]
 635:.\Generated_Source\PSoC4/PWM.c **** }
 819              		.loc 1 635 0
 820 0012 BD46     		mov	sp, r7
 821 0014 02B0     		add	sp, sp, #8
 822              		@ sp needed for prologue
 823 0016 80BD     		pop	{r7, pc}
 824              	.L43:
 825              		.align	2
 826              	.L42:
 827 0018 08010540 		.word	1074069768
 828              		.cfi_endproc
 829              	.LFE13:
 830              		.size	PWM_WriteCounter, .-PWM_WriteCounter
 831              		.section	.text.PWM_ReadCounter,"ax",%progbits
 832              		.align	2
 833              		.global	PWM_ReadCounter
 834              		.code	16
 835              		.thumb_func
 836              		.type	PWM_ReadCounter, %function
 837              	PWM_ReadCounter:
 838              	.LFB14:
 636:.\Generated_Source\PSoC4/PWM.c **** 
 637:.\Generated_Source\PSoC4/PWM.c **** 
 638:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 639:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCounter
 640:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 641:.\Generated_Source\PSoC4/PWM.c **** *
 642:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 643:.\Generated_Source\PSoC4/PWM.c **** *  Reads the current counter value.
 644:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 27


 645:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 646:.\Generated_Source\PSoC4/PWM.c **** *  None
 647:.\Generated_Source\PSoC4/PWM.c **** *
 648:.\Generated_Source\PSoC4/PWM.c **** * Return:
 649:.\Generated_Source\PSoC4/PWM.c **** *  Current counter value
 650:.\Generated_Source\PSoC4/PWM.c **** *
 651:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 652:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCounter(void)
 653:.\Generated_Source\PSoC4/PWM.c **** {
 839              		.loc 1 653 0
 840              		.cfi_startproc
 841 0000 80B5     		push	{r7, lr}
 842              	.LCFI40:
 843              		.cfi_def_cfa_offset 8
 844              		.cfi_offset 7, -8
 845              		.cfi_offset 14, -4
 846 0002 00AF     		add	r7, sp, #0
 847              	.LCFI41:
 848              		.cfi_def_cfa_register 7
 654:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COUNTER_REG & PWM_16BIT_MASK);
 849              		.loc 1 654 0
 850 0004 034B     		ldr	r3, .L46
 851 0006 1B68     		ldr	r3, [r3]
 852 0008 1B04     		lsl	r3, r3, #16
 853 000a 1B0C     		lsr	r3, r3, #16
 655:.\Generated_Source\PSoC4/PWM.c **** }
 854              		.loc 1 655 0
 855 000c 181C     		mov	r0, r3
 856 000e BD46     		mov	sp, r7
 857              		@ sp needed for prologue
 858 0010 80BD     		pop	{r7, pc}
 859              	.L47:
 860 0012 C046     		.align	2
 861              	.L46:
 862 0014 08010540 		.word	1074069768
 863              		.cfi_endproc
 864              	.LFE14:
 865              		.size	PWM_ReadCounter, .-PWM_ReadCounter
 866              		.section	.text.PWM_SetCounterMode,"ax",%progbits
 867              		.align	2
 868              		.global	PWM_SetCounterMode
 869              		.code	16
 870              		.thumb_func
 871              		.type	PWM_SetCounterMode, %function
 872              	PWM_SetCounterMode:
 873              	.LFB15:
 656:.\Generated_Source\PSoC4/PWM.c **** 
 657:.\Generated_Source\PSoC4/PWM.c **** 
 658:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 659:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCounterMode
 660:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 661:.\Generated_Source\PSoC4/PWM.c **** *
 662:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 663:.\Generated_Source\PSoC4/PWM.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 664:.\Generated_Source\PSoC4/PWM.c **** *  and the PWM with a pseudo random output.
 665:.\Generated_Source\PSoC4/PWM.c **** *
 666:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 28


 667:.\Generated_Source\PSoC4/PWM.c **** *  counterMode: Enumerated counter type values
 668:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 669:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UP       - Counts up
 670:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_DOWN     - Counts down
 671:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN0  - Counts up and down. Terminal count
 672:.\Generated_Source\PSoC4/PWM.c **** *                                         generated when counter reaches 0
 673:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_COUNT_UPDOWN1  - Counts up and down. Terminal count
 674:.\Generated_Source\PSoC4/PWM.c **** *                                         generated both when counter reaches 0
 675:.\Generated_Source\PSoC4/PWM.c **** *                                         and period
 676:.\Generated_Source\PSoC4/PWM.c **** *
 677:.\Generated_Source\PSoC4/PWM.c **** * Return:
 678:.\Generated_Source\PSoC4/PWM.c **** *  None
 679:.\Generated_Source\PSoC4/PWM.c **** *
 680:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 681:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCounterMode(uint32 counterMode)
 682:.\Generated_Source\PSoC4/PWM.c **** {
 874              		.loc 1 682 0
 875              		.cfi_startproc
 876 0000 90B5     		push	{r4, r7, lr}
 877              	.LCFI42:
 878              		.cfi_def_cfa_offset 12
 879              		.cfi_offset 4, -12
 880              		.cfi_offset 7, -8
 881              		.cfi_offset 14, -4
 882 0002 85B0     		sub	sp, sp, #20
 883              	.LCFI43:
 884              		.cfi_def_cfa_offset 32
 885 0004 00AF     		add	r7, sp, #0
 886              	.LCFI44:
 887              		.cfi_def_cfa_register 7
 888 0006 7860     		str	r0, [r7, #4]
 683:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 684:.\Generated_Source\PSoC4/PWM.c **** 
 685:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 889              		.loc 1 685 0
 890 0008 3C1C     		mov	r4, r7
 891 000a 0F34     		add	r4, r4, #15
 892 000c FFF7FEFF 		bl	CyEnterCriticalSection
 893 0010 031C     		mov	r3, r0
 894 0012 2370     		strb	r3, [r4]
 686:.\Generated_Source\PSoC4/PWM.c **** 
 687:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_UPDOWN_MASK;
 895              		.loc 1 687 0
 896 0014 0A4B     		ldr	r3, .L49
 897 0016 0A4A     		ldr	r2, .L49
 898 0018 1168     		ldr	r1, [r2]
 899 001a 0A4A     		ldr	r2, .L49+4
 900 001c 0A40     		and	r2, r1
 901 001e 1A60     		str	r2, [r3]
 688:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= counterMode;
 902              		.loc 1 688 0
 903 0020 074B     		ldr	r3, .L49
 904 0022 074A     		ldr	r2, .L49
 905 0024 1168     		ldr	r1, [r2]
 906 0026 7A68     		ldr	r2, [r7, #4]
 907 0028 0A43     		orr	r2, r1
 908 002a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 29


 689:.\Generated_Source\PSoC4/PWM.c **** 
 690:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 909              		.loc 1 690 0
 910 002c 3B1C     		mov	r3, r7
 911 002e 0F33     		add	r3, r3, #15
 912 0030 1B78     		ldrb	r3, [r3]
 913 0032 181C     		mov	r0, r3
 914 0034 FFF7FEFF 		bl	CyExitCriticalSection
 691:.\Generated_Source\PSoC4/PWM.c **** }
 915              		.loc 1 691 0
 916 0038 BD46     		mov	sp, r7
 917 003a 05B0     		add	sp, sp, #20
 918              		@ sp needed for prologue
 919 003c 90BD     		pop	{r4, r7, pc}
 920              	.L50:
 921 003e C046     		.align	2
 922              	.L49:
 923 0040 00010540 		.word	1074069760
 924 0044 FFFFFCFF 		.word	-196609
 925              		.cfi_endproc
 926              	.LFE15:
 927              		.size	PWM_SetCounterMode, .-PWM_SetCounterMode
 928              		.section	.text.PWM_WritePeriod,"ax",%progbits
 929              		.align	2
 930              		.global	PWM_WritePeriod
 931              		.code	16
 932              		.thumb_func
 933              		.type	PWM_WritePeriod, %function
 934              	PWM_WritePeriod:
 935              	.LFB16:
 692:.\Generated_Source\PSoC4/PWM.c **** 
 693:.\Generated_Source\PSoC4/PWM.c **** 
 694:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 695:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriod
 696:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 697:.\Generated_Source\PSoC4/PWM.c **** *
 698:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 699:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period register with the new period value.
 700:.\Generated_Source\PSoC4/PWM.c **** *  To cause the counter to count for N cycles this register should be written
 701:.\Generated_Source\PSoC4/PWM.c **** *  with N-1 (counts from 0 to period inclusive).
 702:.\Generated_Source\PSoC4/PWM.c **** *
 703:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 704:.\Generated_Source\PSoC4/PWM.c **** *  period: Period value
 705:.\Generated_Source\PSoC4/PWM.c **** *
 706:.\Generated_Source\PSoC4/PWM.c **** * Return:
 707:.\Generated_Source\PSoC4/PWM.c **** *  None
 708:.\Generated_Source\PSoC4/PWM.c **** *
 709:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 710:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriod(uint32 period)
 711:.\Generated_Source\PSoC4/PWM.c **** {
 936              		.loc 1 711 0
 937              		.cfi_startproc
 938 0000 80B5     		push	{r7, lr}
 939              	.LCFI45:
 940              		.cfi_def_cfa_offset 8
 941              		.cfi_offset 7, -8
 942              		.cfi_offset 14, -4
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 30


 943 0002 82B0     		sub	sp, sp, #8
 944              	.LCFI46:
 945              		.cfi_def_cfa_offset 16
 946 0004 00AF     		add	r7, sp, #0
 947              	.LCFI47:
 948              		.cfi_def_cfa_register 7
 949 0006 7860     		str	r0, [r7, #4]
 712:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_REG = (period & PWM_16BIT_MASK);
 950              		.loc 1 712 0
 951 0008 034B     		ldr	r3, .L52
 952 000a 7A68     		ldr	r2, [r7, #4]
 953 000c 1204     		lsl	r2, r2, #16
 954 000e 120C     		lsr	r2, r2, #16
 955 0010 1A60     		str	r2, [r3]
 713:.\Generated_Source\PSoC4/PWM.c **** }
 956              		.loc 1 713 0
 957 0012 BD46     		mov	sp, r7
 958 0014 02B0     		add	sp, sp, #8
 959              		@ sp needed for prologue
 960 0016 80BD     		pop	{r7, pc}
 961              	.L53:
 962              		.align	2
 963              	.L52:
 964 0018 14010540 		.word	1074069780
 965              		.cfi_endproc
 966              	.LFE16:
 967              		.size	PWM_WritePeriod, .-PWM_WritePeriod
 968              		.section	.text.PWM_ReadPeriod,"ax",%progbits
 969              		.align	2
 970              		.global	PWM_ReadPeriod
 971              		.code	16
 972              		.thumb_func
 973              		.type	PWM_ReadPeriod, %function
 974              	PWM_ReadPeriod:
 975              	.LFB17:
 714:.\Generated_Source\PSoC4/PWM.c **** 
 715:.\Generated_Source\PSoC4/PWM.c **** 
 716:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 717:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriod
 718:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 719:.\Generated_Source\PSoC4/PWM.c **** *
 720:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 721:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period register.
 722:.\Generated_Source\PSoC4/PWM.c **** *
 723:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 724:.\Generated_Source\PSoC4/PWM.c **** *  None
 725:.\Generated_Source\PSoC4/PWM.c **** *
 726:.\Generated_Source\PSoC4/PWM.c **** * Return:
 727:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 728:.\Generated_Source\PSoC4/PWM.c **** *
 729:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 730:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriod(void)
 731:.\Generated_Source\PSoC4/PWM.c **** {
 976              		.loc 1 731 0
 977              		.cfi_startproc
 978 0000 80B5     		push	{r7, lr}
 979              	.LCFI48:
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 31


 980              		.cfi_def_cfa_offset 8
 981              		.cfi_offset 7, -8
 982              		.cfi_offset 14, -4
 983 0002 00AF     		add	r7, sp, #0
 984              	.LCFI49:
 985              		.cfi_def_cfa_register 7
 732:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_REG & PWM_16BIT_MASK);
 986              		.loc 1 732 0
 987 0004 034B     		ldr	r3, .L56
 988 0006 1B68     		ldr	r3, [r3]
 989 0008 1B04     		lsl	r3, r3, #16
 990 000a 1B0C     		lsr	r3, r3, #16
 733:.\Generated_Source\PSoC4/PWM.c **** }
 991              		.loc 1 733 0
 992 000c 181C     		mov	r0, r3
 993 000e BD46     		mov	sp, r7
 994              		@ sp needed for prologue
 995 0010 80BD     		pop	{r7, pc}
 996              	.L57:
 997 0012 C046     		.align	2
 998              	.L56:
 999 0014 14010540 		.word	1074069780
 1000              		.cfi_endproc
 1001              	.LFE17:
 1002              		.size	PWM_ReadPeriod, .-PWM_ReadPeriod
 1003              		.section	.text.PWM_SetCompareSwap,"ax",%progbits
 1004              		.align	2
 1005              		.global	PWM_SetCompareSwap
 1006              		.code	16
 1007              		.thumb_func
 1008              		.type	PWM_SetCompareSwap, %function
 1009              	PWM_SetCompareSwap:
 1010              	.LFB18:
 734:.\Generated_Source\PSoC4/PWM.c **** 
 735:.\Generated_Source\PSoC4/PWM.c **** 
 736:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 737:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCompareSwap
 738:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 739:.\Generated_Source\PSoC4/PWM.c **** *
 740:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 741:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the compare registers are
 742:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 743:.\Generated_Source\PSoC4/PWM.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 744:.\Generated_Source\PSoC4/PWM.c **** *  following a hardware switch event.
 745:.\Generated_Source\PSoC4/PWM.c **** *
 746:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 747:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 748:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 749:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 750:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 751:.\Generated_Source\PSoC4/PWM.c **** *
 752:.\Generated_Source\PSoC4/PWM.c **** * Return:
 753:.\Generated_Source\PSoC4/PWM.c **** *  None
 754:.\Generated_Source\PSoC4/PWM.c **** *
 755:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 756:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCompareSwap(uint32 swapEnable)
 757:.\Generated_Source\PSoC4/PWM.c **** {
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 32


 1011              		.loc 1 757 0
 1012              		.cfi_startproc
 1013 0000 90B5     		push	{r4, r7, lr}
 1014              	.LCFI50:
 1015              		.cfi_def_cfa_offset 12
 1016              		.cfi_offset 4, -12
 1017              		.cfi_offset 7, -8
 1018              		.cfi_offset 14, -4
 1019 0002 85B0     		sub	sp, sp, #20
 1020              	.LCFI51:
 1021              		.cfi_def_cfa_offset 32
 1022 0004 00AF     		add	r7, sp, #0
 1023              	.LCFI52:
 1024              		.cfi_def_cfa_register 7
 1025 0006 7860     		str	r0, [r7, #4]
 758:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 759:.\Generated_Source\PSoC4/PWM.c **** 
 760:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1026              		.loc 1 760 0
 1027 0008 3C1C     		mov	r4, r7
 1028 000a 0F34     		add	r4, r4, #15
 1029 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1030 0010 031C     		mov	r3, r0
 1031 0012 2370     		strb	r3, [r4]
 761:.\Generated_Source\PSoC4/PWM.c **** 
 762:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_CC_MASK;
 1032              		.loc 1 762 0
 1033 0014 0B4B     		ldr	r3, .L59
 1034 0016 0B4A     		ldr	r2, .L59
 1035 0018 1268     		ldr	r2, [r2]
 1036 001a 0121     		mov	r1, #1
 1037 001c 8A43     		bic	r2, r1
 1038 001e 1A60     		str	r2, [r3]
 763:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= (swapEnable & PWM_1BIT_MASK);
 1039              		.loc 1 763 0
 1040 0020 084B     		ldr	r3, .L59
 1041 0022 084A     		ldr	r2, .L59
 1042 0024 1168     		ldr	r1, [r2]
 1043 0026 7868     		ldr	r0, [r7, #4]
 1044 0028 0122     		mov	r2, #1
 1045 002a 0240     		and	r2, r0
 1046 002c 0A43     		orr	r2, r1
 1047 002e 1A60     		str	r2, [r3]
 764:.\Generated_Source\PSoC4/PWM.c **** 
 765:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1048              		.loc 1 765 0
 1049 0030 3B1C     		mov	r3, r7
 1050 0032 0F33     		add	r3, r3, #15
 1051 0034 1B78     		ldrb	r3, [r3]
 1052 0036 181C     		mov	r0, r3
 1053 0038 FFF7FEFF 		bl	CyExitCriticalSection
 766:.\Generated_Source\PSoC4/PWM.c **** }
 1054              		.loc 1 766 0
 1055 003c BD46     		mov	sp, r7
 1056 003e 05B0     		add	sp, sp, #20
 1057              		@ sp needed for prologue
 1058 0040 90BD     		pop	{r4, r7, pc}
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 33


 1059              	.L60:
 1060 0042 C046     		.align	2
 1061              	.L59:
 1062 0044 00010540 		.word	1074069760
 1063              		.cfi_endproc
 1064              	.LFE18:
 1065              		.size	PWM_SetCompareSwap, .-PWM_SetCompareSwap
 1066              		.section	.text.PWM_WritePeriodBuf,"ax",%progbits
 1067              		.align	2
 1068              		.global	PWM_WritePeriodBuf
 1069              		.code	16
 1070              		.thumb_func
 1071              		.type	PWM_WritePeriodBuf, %function
 1072              	PWM_WritePeriodBuf:
 1073              	.LFB19:
 767:.\Generated_Source\PSoC4/PWM.c **** 
 768:.\Generated_Source\PSoC4/PWM.c **** 
 769:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 770:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WritePeriodBuf
 771:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 772:.\Generated_Source\PSoC4/PWM.c **** *
 773:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 774:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit period buf register with the new period value.
 775:.\Generated_Source\PSoC4/PWM.c **** *
 776:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 777:.\Generated_Source\PSoC4/PWM.c **** *  periodBuf: Period value
 778:.\Generated_Source\PSoC4/PWM.c **** *
 779:.\Generated_Source\PSoC4/PWM.c **** * Return:
 780:.\Generated_Source\PSoC4/PWM.c **** *  None
 781:.\Generated_Source\PSoC4/PWM.c **** *
 782:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 783:.\Generated_Source\PSoC4/PWM.c **** void PWM_WritePeriodBuf(uint32 periodBuf)
 784:.\Generated_Source\PSoC4/PWM.c **** {
 1074              		.loc 1 784 0
 1075              		.cfi_startproc
 1076 0000 80B5     		push	{r7, lr}
 1077              	.LCFI53:
 1078              		.cfi_def_cfa_offset 8
 1079              		.cfi_offset 7, -8
 1080              		.cfi_offset 14, -4
 1081 0002 82B0     		sub	sp, sp, #8
 1082              	.LCFI54:
 1083              		.cfi_def_cfa_offset 16
 1084 0004 00AF     		add	r7, sp, #0
 1085              	.LCFI55:
 1086              		.cfi_def_cfa_register 7
 1087 0006 7860     		str	r0, [r7, #4]
 785:.\Generated_Source\PSoC4/PWM.c ****     PWM_PERIOD_BUF_REG = (periodBuf & PWM_16BIT_MASK);
 1088              		.loc 1 785 0
 1089 0008 034B     		ldr	r3, .L62
 1090 000a 7A68     		ldr	r2, [r7, #4]
 1091 000c 1204     		lsl	r2, r2, #16
 1092 000e 120C     		lsr	r2, r2, #16
 1093 0010 1A60     		str	r2, [r3]
 786:.\Generated_Source\PSoC4/PWM.c **** }
 1094              		.loc 1 786 0
 1095 0012 BD46     		mov	sp, r7
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 34


 1096 0014 02B0     		add	sp, sp, #8
 1097              		@ sp needed for prologue
 1098 0016 80BD     		pop	{r7, pc}
 1099              	.L63:
 1100              		.align	2
 1101              	.L62:
 1102 0018 18010540 		.word	1074069784
 1103              		.cfi_endproc
 1104              	.LFE19:
 1105              		.size	PWM_WritePeriodBuf, .-PWM_WritePeriodBuf
 1106              		.section	.text.PWM_ReadPeriodBuf,"ax",%progbits
 1107              		.align	2
 1108              		.global	PWM_ReadPeriodBuf
 1109              		.code	16
 1110              		.thumb_func
 1111              		.type	PWM_ReadPeriodBuf, %function
 1112              	PWM_ReadPeriodBuf:
 1113              	.LFB20:
 787:.\Generated_Source\PSoC4/PWM.c **** 
 788:.\Generated_Source\PSoC4/PWM.c **** 
 789:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 790:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadPeriodBuf
 791:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 792:.\Generated_Source\PSoC4/PWM.c **** *
 793:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 794:.\Generated_Source\PSoC4/PWM.c **** *  Reads the 16 bit period buf register.
 795:.\Generated_Source\PSoC4/PWM.c **** *
 796:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 797:.\Generated_Source\PSoC4/PWM.c **** *  None
 798:.\Generated_Source\PSoC4/PWM.c **** *
 799:.\Generated_Source\PSoC4/PWM.c **** * Return:
 800:.\Generated_Source\PSoC4/PWM.c **** *  Period value
 801:.\Generated_Source\PSoC4/PWM.c **** *
 802:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 803:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadPeriodBuf(void)
 804:.\Generated_Source\PSoC4/PWM.c **** {
 1114              		.loc 1 804 0
 1115              		.cfi_startproc
 1116 0000 80B5     		push	{r7, lr}
 1117              	.LCFI56:
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 7, -8
 1120              		.cfi_offset 14, -4
 1121 0002 00AF     		add	r7, sp, #0
 1122              	.LCFI57:
 1123              		.cfi_def_cfa_register 7
 805:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_PERIOD_BUF_REG & PWM_16BIT_MASK);
 1124              		.loc 1 805 0
 1125 0004 034B     		ldr	r3, .L66
 1126 0006 1B68     		ldr	r3, [r3]
 1127 0008 1B04     		lsl	r3, r3, #16
 1128 000a 1B0C     		lsr	r3, r3, #16
 806:.\Generated_Source\PSoC4/PWM.c **** }
 1129              		.loc 1 806 0
 1130 000c 181C     		mov	r0, r3
 1131 000e BD46     		mov	sp, r7
 1132              		@ sp needed for prologue
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 35


 1133 0010 80BD     		pop	{r7, pc}
 1134              	.L67:
 1135 0012 C046     		.align	2
 1136              	.L66:
 1137 0014 18010540 		.word	1074069784
 1138              		.cfi_endproc
 1139              	.LFE20:
 1140              		.size	PWM_ReadPeriodBuf, .-PWM_ReadPeriodBuf
 1141              		.section	.text.PWM_SetPeriodSwap,"ax",%progbits
 1142              		.align	2
 1143              		.global	PWM_SetPeriodSwap
 1144              		.code	16
 1145              		.thumb_func
 1146              		.type	PWM_SetPeriodSwap, %function
 1147              	PWM_SetPeriodSwap:
 1148              	.LFB21:
 807:.\Generated_Source\PSoC4/PWM.c **** 
 808:.\Generated_Source\PSoC4/PWM.c **** 
 809:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 810:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetPeriodSwap
 811:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 812:.\Generated_Source\PSoC4/PWM.c **** *
 813:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 814:.\Generated_Source\PSoC4/PWM.c **** *  Writes the register that controls whether the period registers are
 815:.\Generated_Source\PSoC4/PWM.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 816:.\Generated_Source\PSoC4/PWM.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 817:.\Generated_Source\PSoC4/PWM.c **** *  switch event.
 818:.\Generated_Source\PSoC4/PWM.c **** *
 819:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 820:.\Generated_Source\PSoC4/PWM.c **** *  swapEnable
 821:.\Generated_Source\PSoC4/PWM.c **** *   Values:
 822:.\Generated_Source\PSoC4/PWM.c **** *     - 0 - Disable swap
 823:.\Generated_Source\PSoC4/PWM.c **** *     - 1 - Enable swap
 824:.\Generated_Source\PSoC4/PWM.c **** *
 825:.\Generated_Source\PSoC4/PWM.c **** * Return:
 826:.\Generated_Source\PSoC4/PWM.c **** *  None
 827:.\Generated_Source\PSoC4/PWM.c **** *
 828:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 829:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetPeriodSwap(uint32 swapEnable)
 830:.\Generated_Source\PSoC4/PWM.c **** {
 1149              		.loc 1 830 0
 1150              		.cfi_startproc
 1151 0000 90B5     		push	{r4, r7, lr}
 1152              	.LCFI58:
 1153              		.cfi_def_cfa_offset 12
 1154              		.cfi_offset 4, -12
 1155              		.cfi_offset 7, -8
 1156              		.cfi_offset 14, -4
 1157 0002 85B0     		sub	sp, sp, #20
 1158              	.LCFI59:
 1159              		.cfi_def_cfa_offset 32
 1160 0004 00AF     		add	r7, sp, #0
 1161              	.LCFI60:
 1162              		.cfi_def_cfa_register 7
 1163 0006 7860     		str	r0, [r7, #4]
 831:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
 832:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 36


 833:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1164              		.loc 1 833 0
 1165 0008 3C1C     		mov	r4, r7
 1166 000a 0F34     		add	r4, r4, #15
 1167 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1168 0010 031C     		mov	r3, r0
 1169 0012 2370     		strb	r3, [r4]
 834:.\Generated_Source\PSoC4/PWM.c **** 
 835:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG &= (uint32)~PWM_RELOAD_PERIOD_MASK;
 1170              		.loc 1 835 0
 1171 0014 0B4B     		ldr	r3, .L69
 1172 0016 0B4A     		ldr	r2, .L69
 1173 0018 1268     		ldr	r2, [r2]
 1174 001a 0221     		mov	r1, #2
 1175 001c 8A43     		bic	r2, r1
 1176 001e 1A60     		str	r2, [r3]
 836:.\Generated_Source\PSoC4/PWM.c ****     PWM_CONTROL_REG |= ((uint32)((swapEnable & PWM_1BIT_MASK) <<
 1177              		.loc 1 836 0
 1178 0020 084B     		ldr	r3, .L69
 1179 0022 084A     		ldr	r2, .L69
 1180 0024 1168     		ldr	r1, [r2]
 1181 0026 7868     		ldr	r0, [r7, #4]
 1182 0028 0122     		mov	r2, #1
 1183 002a 0240     		and	r2, r0
 1184 002c 5200     		lsl	r2, r2, #1
 1185 002e 0A43     		orr	r2, r1
 1186 0030 1A60     		str	r2, [r3]
 837:.\Generated_Source\PSoC4/PWM.c ****                                                             PWM_RELOAD_PERIOD_SHIFT));
 838:.\Generated_Source\PSoC4/PWM.c **** 
 839:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1187              		.loc 1 839 0
 1188 0032 3B1C     		mov	r3, r7
 1189 0034 0F33     		add	r3, r3, #15
 1190 0036 1B78     		ldrb	r3, [r3]
 1191 0038 181C     		mov	r0, r3
 1192 003a FFF7FEFF 		bl	CyExitCriticalSection
 840:.\Generated_Source\PSoC4/PWM.c **** }
 1193              		.loc 1 840 0
 1194 003e BD46     		mov	sp, r7
 1195 0040 05B0     		add	sp, sp, #20
 1196              		@ sp needed for prologue
 1197 0042 90BD     		pop	{r4, r7, pc}
 1198              	.L70:
 1199              		.align	2
 1200              	.L69:
 1201 0044 00010540 		.word	1074069760
 1202              		.cfi_endproc
 1203              	.LFE21:
 1204              		.size	PWM_SetPeriodSwap, .-PWM_SetPeriodSwap
 1205              		.section	.text.PWM_WriteCompare,"ax",%progbits
 1206              		.align	2
 1207              		.global	PWM_WriteCompare
 1208              		.code	16
 1209              		.thumb_func
 1210              		.type	PWM_WriteCompare, %function
 1211              	PWM_WriteCompare:
 1212              	.LFB22:
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 37


 841:.\Generated_Source\PSoC4/PWM.c **** 
 842:.\Generated_Source\PSoC4/PWM.c **** 
 843:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 844:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompare
 845:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 846:.\Generated_Source\PSoC4/PWM.c **** *
 847:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 848:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare register with the new compare value. Not
 849:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 850:.\Generated_Source\PSoC4/PWM.c **** *
 851:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 852:.\Generated_Source\PSoC4/PWM.c **** *  compare: Compare value
 853:.\Generated_Source\PSoC4/PWM.c **** *
 854:.\Generated_Source\PSoC4/PWM.c **** * Return:
 855:.\Generated_Source\PSoC4/PWM.c **** *  None
 856:.\Generated_Source\PSoC4/PWM.c **** *
 857:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 858:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompare(uint32 compare)
 859:.\Generated_Source\PSoC4/PWM.c **** {
 1213              		.loc 1 859 0
 1214              		.cfi_startproc
 1215 0000 80B5     		push	{r7, lr}
 1216              	.LCFI61:
 1217              		.cfi_def_cfa_offset 8
 1218              		.cfi_offset 7, -8
 1219              		.cfi_offset 14, -4
 1220 0002 82B0     		sub	sp, sp, #8
 1221              	.LCFI62:
 1222              		.cfi_def_cfa_offset 16
 1223 0004 00AF     		add	r7, sp, #0
 1224              	.LCFI63:
 1225              		.cfi_def_cfa_register 7
 1226 0006 7860     		str	r0, [r7, #4]
 860:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 861:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 862:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 863:.\Generated_Source\PSoC4/PWM.c **** 
 864:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 865:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 866:.\Generated_Source\PSoC4/PWM.c **** 
 867:.\Generated_Source\PSoC4/PWM.c ****         if (PWM__COUNT_DOWN == currentMode)
 868:.\Generated_Source\PSoC4/PWM.c ****         {
 869:.\Generated_Source\PSoC4/PWM.c ****             PWM_COMP_CAP_REG = ((compare + 1u) & PWM_16BIT_MASK);
 870:.\Generated_Source\PSoC4/PWM.c ****         }
 871:.\Generated_Source\PSoC4/PWM.c ****         else if (PWM__COUNT_UP == currentMode)
 872:.\Generated_Source\PSoC4/PWM.c ****         {
 873:.\Generated_Source\PSoC4/PWM.c ****             PWM_COMP_CAP_REG = ((compare - 1u) & PWM_16BIT_MASK);
 874:.\Generated_Source\PSoC4/PWM.c ****         }
 875:.\Generated_Source\PSoC4/PWM.c ****         else
 876:.\Generated_Source\PSoC4/PWM.c ****         {
 877:.\Generated_Source\PSoC4/PWM.c ****             PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 878:.\Generated_Source\PSoC4/PWM.c ****         }
 879:.\Generated_Source\PSoC4/PWM.c ****     #else
 880:.\Generated_Source\PSoC4/PWM.c ****         PWM_COMP_CAP_REG = (compare & PWM_16BIT_MASK);
 1227              		.loc 1 880 0
 1228 0008 034B     		ldr	r3, .L72
 1229 000a 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 38


 1230 000c 1204     		lsl	r2, r2, #16
 1231 000e 120C     		lsr	r2, r2, #16
 1232 0010 1A60     		str	r2, [r3]
 881:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 882:.\Generated_Source\PSoC4/PWM.c **** }
 1233              		.loc 1 882 0
 1234 0012 BD46     		mov	sp, r7
 1235 0014 02B0     		add	sp, sp, #8
 1236              		@ sp needed for prologue
 1237 0016 80BD     		pop	{r7, pc}
 1238              	.L73:
 1239              		.align	2
 1240              	.L72:
 1241 0018 0C010540 		.word	1074069772
 1242              		.cfi_endproc
 1243              	.LFE22:
 1244              		.size	PWM_WriteCompare, .-PWM_WriteCompare
 1245              		.section	.text.PWM_ReadCompare,"ax",%progbits
 1246              		.align	2
 1247              		.global	PWM_ReadCompare
 1248              		.code	16
 1249              		.thumb_func
 1250              		.type	PWM_ReadCompare, %function
 1251              	PWM_ReadCompare:
 1252              	.LFB23:
 883:.\Generated_Source\PSoC4/PWM.c **** 
 884:.\Generated_Source\PSoC4/PWM.c **** 
 885:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 886:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompare
 887:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 888:.\Generated_Source\PSoC4/PWM.c **** *
 889:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 890:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 891:.\Generated_Source\PSoC4/PWM.c **** *  or in Quadrature Decoder modes.
 892:.\Generated_Source\PSoC4/PWM.c **** *
 893:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 894:.\Generated_Source\PSoC4/PWM.c **** *  None
 895:.\Generated_Source\PSoC4/PWM.c **** *
 896:.\Generated_Source\PSoC4/PWM.c **** * Return:
 897:.\Generated_Source\PSoC4/PWM.c **** *  Compare value
 898:.\Generated_Source\PSoC4/PWM.c **** *
 899:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 900:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompare(void)
 901:.\Generated_Source\PSoC4/PWM.c **** {
 1253              		.loc 1 901 0
 1254              		.cfi_startproc
 1255 0000 80B5     		push	{r7, lr}
 1256              	.LCFI64:
 1257              		.cfi_def_cfa_offset 8
 1258              		.cfi_offset 7, -8
 1259              		.cfi_offset 14, -4
 1260 0002 00AF     		add	r7, sp, #0
 1261              	.LCFI65:
 1262              		.cfi_def_cfa_register 7
 902:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 903:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 904:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 39


 905:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 906:.\Generated_Source\PSoC4/PWM.c **** 
 907:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 908:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 909:.\Generated_Source\PSoC4/PWM.c **** 
 910:.\Generated_Source\PSoC4/PWM.c ****         if (PWM__COUNT_DOWN == currentMode)
 911:.\Generated_Source\PSoC4/PWM.c ****         {
 912:.\Generated_Source\PSoC4/PWM.c ****             regVal = ((PWM_COMP_CAP_REG - 1u) & PWM_16BIT_MASK);
 913:.\Generated_Source\PSoC4/PWM.c ****         }
 914:.\Generated_Source\PSoC4/PWM.c ****         else if (PWM__COUNT_UP == currentMode)
 915:.\Generated_Source\PSoC4/PWM.c ****         {
 916:.\Generated_Source\PSoC4/PWM.c ****             regVal = ((PWM_COMP_CAP_REG + 1u) & PWM_16BIT_MASK);
 917:.\Generated_Source\PSoC4/PWM.c ****         }
 918:.\Generated_Source\PSoC4/PWM.c ****         else
 919:.\Generated_Source\PSoC4/PWM.c ****         {
 920:.\Generated_Source\PSoC4/PWM.c ****             regVal = (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 921:.\Generated_Source\PSoC4/PWM.c ****         }
 922:.\Generated_Source\PSoC4/PWM.c ****         return (regVal);
 923:.\Generated_Source\PSoC4/PWM.c ****     #else
 924:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1263              		.loc 1 924 0
 1264 0004 034B     		ldr	r3, .L76
 1265 0006 1B68     		ldr	r3, [r3]
 1266 0008 1B04     		lsl	r3, r3, #16
 1267 000a 1B0C     		lsr	r3, r3, #16
 925:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 926:.\Generated_Source\PSoC4/PWM.c **** }
 1268              		.loc 1 926 0
 1269 000c 181C     		mov	r0, r3
 1270 000e BD46     		mov	sp, r7
 1271              		@ sp needed for prologue
 1272 0010 80BD     		pop	{r7, pc}
 1273              	.L77:
 1274 0012 C046     		.align	2
 1275              	.L76:
 1276 0014 0C010540 		.word	1074069772
 1277              		.cfi_endproc
 1278              	.LFE23:
 1279              		.size	PWM_ReadCompare, .-PWM_ReadCompare
 1280              		.section	.text.PWM_WriteCompareBuf,"ax",%progbits
 1281              		.align	2
 1282              		.global	PWM_WriteCompareBuf
 1283              		.code	16
 1284              		.thumb_func
 1285              		.type	PWM_WriteCompareBuf, %function
 1286              	PWM_WriteCompareBuf:
 1287              	.LFB24:
 927:.\Generated_Source\PSoC4/PWM.c **** 
 928:.\Generated_Source\PSoC4/PWM.c **** 
 929:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 930:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_WriteCompareBuf
 931:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 932:.\Generated_Source\PSoC4/PWM.c **** *
 933:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 934:.\Generated_Source\PSoC4/PWM.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 935:.\Generated_Source\PSoC4/PWM.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 936:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 40


 937:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 938:.\Generated_Source\PSoC4/PWM.c **** *  compareBuf: Compare value
 939:.\Generated_Source\PSoC4/PWM.c **** *
 940:.\Generated_Source\PSoC4/PWM.c **** * Return:
 941:.\Generated_Source\PSoC4/PWM.c **** *  None
 942:.\Generated_Source\PSoC4/PWM.c **** *
 943:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 944:.\Generated_Source\PSoC4/PWM.c **** void PWM_WriteCompareBuf(uint32 compareBuf)
 945:.\Generated_Source\PSoC4/PWM.c **** {
 1288              		.loc 1 945 0
 1289              		.cfi_startproc
 1290 0000 80B5     		push	{r7, lr}
 1291              	.LCFI66:
 1292              		.cfi_def_cfa_offset 8
 1293              		.cfi_offset 7, -8
 1294              		.cfi_offset 14, -4
 1295 0002 82B0     		sub	sp, sp, #8
 1296              	.LCFI67:
 1297              		.cfi_def_cfa_offset 16
 1298 0004 00AF     		add	r7, sp, #0
 1299              	.LCFI68:
 1300              		.cfi_def_cfa_register 7
 1301 0006 7860     		str	r0, [r7, #4]
 946:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 947:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 948:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 949:.\Generated_Source\PSoC4/PWM.c **** 
 950:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 951:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 952:.\Generated_Source\PSoC4/PWM.c **** 
 953:.\Generated_Source\PSoC4/PWM.c ****         if (PWM__COUNT_DOWN == currentMode)
 954:.\Generated_Source\PSoC4/PWM.c ****         {
 955:.\Generated_Source\PSoC4/PWM.c ****             PWM_COMP_CAP_BUF_REG = ((compareBuf + 1u) & PWM_16BIT_MASK);
 956:.\Generated_Source\PSoC4/PWM.c ****         }
 957:.\Generated_Source\PSoC4/PWM.c ****         else if (PWM__COUNT_UP == currentMode)
 958:.\Generated_Source\PSoC4/PWM.c ****         {
 959:.\Generated_Source\PSoC4/PWM.c ****             PWM_COMP_CAP_BUF_REG = ((compareBuf - 1u) & PWM_16BIT_MASK);
 960:.\Generated_Source\PSoC4/PWM.c ****         }
 961:.\Generated_Source\PSoC4/PWM.c ****         else
 962:.\Generated_Source\PSoC4/PWM.c ****         {
 963:.\Generated_Source\PSoC4/PWM.c ****             PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 964:.\Generated_Source\PSoC4/PWM.c ****         }
 965:.\Generated_Source\PSoC4/PWM.c ****     #else
 966:.\Generated_Source\PSoC4/PWM.c ****         PWM_COMP_CAP_BUF_REG = (compareBuf & PWM_16BIT_MASK);
 1302              		.loc 1 966 0
 1303 0008 034B     		ldr	r3, .L79
 1304 000a 7A68     		ldr	r2, [r7, #4]
 1305 000c 1204     		lsl	r2, r2, #16
 1306 000e 120C     		lsr	r2, r2, #16
 1307 0010 1A60     		str	r2, [r3]
 967:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 968:.\Generated_Source\PSoC4/PWM.c **** }
 1308              		.loc 1 968 0
 1309 0012 BD46     		mov	sp, r7
 1310 0014 02B0     		add	sp, sp, #8
 1311              		@ sp needed for prologue
 1312 0016 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 41


 1313              	.L80:
 1314              		.align	2
 1315              	.L79:
 1316 0018 10010540 		.word	1074069776
 1317              		.cfi_endproc
 1318              	.LFE24:
 1319              		.size	PWM_WriteCompareBuf, .-PWM_WriteCompareBuf
 1320              		.section	.text.PWM_ReadCompareBuf,"ax",%progbits
 1321              		.align	2
 1322              		.global	PWM_ReadCompareBuf
 1323              		.code	16
 1324              		.thumb_func
 1325              		.type	PWM_ReadCompareBuf, %function
 1326              	PWM_ReadCompareBuf:
 1327              	.LFB25:
 969:.\Generated_Source\PSoC4/PWM.c **** 
 970:.\Generated_Source\PSoC4/PWM.c **** 
 971:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
 972:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCompareBuf
 973:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
 974:.\Generated_Source\PSoC4/PWM.c **** *
 975:.\Generated_Source\PSoC4/PWM.c **** * Summary:
 976:.\Generated_Source\PSoC4/PWM.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 977:.\Generated_Source\PSoC4/PWM.c **** *  Capture or in Quadrature Decoder modes.
 978:.\Generated_Source\PSoC4/PWM.c **** *
 979:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
 980:.\Generated_Source\PSoC4/PWM.c **** *  None
 981:.\Generated_Source\PSoC4/PWM.c **** *
 982:.\Generated_Source\PSoC4/PWM.c **** * Return:
 983:.\Generated_Source\PSoC4/PWM.c **** *  Compare buffer value
 984:.\Generated_Source\PSoC4/PWM.c **** *
 985:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
 986:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCompareBuf(void)
 987:.\Generated_Source\PSoC4/PWM.c **** {
 1328              		.loc 1 987 0
 1329              		.cfi_startproc
 1330 0000 80B5     		push	{r7, lr}
 1331              	.LCFI69:
 1332              		.cfi_def_cfa_offset 8
 1333              		.cfi_offset 7, -8
 1334              		.cfi_offset 14, -4
 1335 0002 00AF     		add	r7, sp, #0
 1336              	.LCFI70:
 1337              		.cfi_def_cfa_register 7
 988:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 989:.\Generated_Source\PSoC4/PWM.c ****         uint32 currentMode;
 990:.\Generated_Source\PSoC4/PWM.c ****         uint32 regVal;
 991:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
 992:.\Generated_Source\PSoC4/PWM.c **** 
 993:.\Generated_Source\PSoC4/PWM.c ****     #if (PWM_CY_TCPWM_V2)
 994:.\Generated_Source\PSoC4/PWM.c ****         currentMode = ((PWM_CONTROL_REG & PWM_UPDOWN_MASK) >> PWM_UPDOWN_SHIFT);
 995:.\Generated_Source\PSoC4/PWM.c **** 
 996:.\Generated_Source\PSoC4/PWM.c ****         if (PWM__COUNT_DOWN == currentMode)
 997:.\Generated_Source\PSoC4/PWM.c ****         {
 998:.\Generated_Source\PSoC4/PWM.c ****             regVal = ((PWM_COMP_CAP_BUF_REG - 1u) & PWM_16BIT_MASK);
 999:.\Generated_Source\PSoC4/PWM.c ****         }
1000:.\Generated_Source\PSoC4/PWM.c ****         else if (PWM__COUNT_UP == currentMode)
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 42


1001:.\Generated_Source\PSoC4/PWM.c ****         {
1002:.\Generated_Source\PSoC4/PWM.c ****             regVal = ((PWM_COMP_CAP_BUF_REG + 1u) & PWM_16BIT_MASK);
1003:.\Generated_Source\PSoC4/PWM.c ****         }
1004:.\Generated_Source\PSoC4/PWM.c ****         else
1005:.\Generated_Source\PSoC4/PWM.c ****         {
1006:.\Generated_Source\PSoC4/PWM.c ****             regVal = (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
1007:.\Generated_Source\PSoC4/PWM.c ****         }
1008:.\Generated_Source\PSoC4/PWM.c ****         return (regVal);
1009:.\Generated_Source\PSoC4/PWM.c ****     #else
1010:.\Generated_Source\PSoC4/PWM.c ****         return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1338              		.loc 1 1010 0
 1339 0004 034B     		ldr	r3, .L83
 1340 0006 1B68     		ldr	r3, [r3]
 1341 0008 1B04     		lsl	r3, r3, #16
 1342 000a 1B0C     		lsr	r3, r3, #16
1011:.\Generated_Source\PSoC4/PWM.c ****     #endif /* (PWM_CY_TCPWM_V2) */
1012:.\Generated_Source\PSoC4/PWM.c **** }
 1343              		.loc 1 1012 0
 1344 000c 181C     		mov	r0, r3
 1345 000e BD46     		mov	sp, r7
 1346              		@ sp needed for prologue
 1347 0010 80BD     		pop	{r7, pc}
 1348              	.L84:
 1349 0012 C046     		.align	2
 1350              	.L83:
 1351 0014 10010540 		.word	1074069776
 1352              		.cfi_endproc
 1353              	.LFE25:
 1354              		.size	PWM_ReadCompareBuf, .-PWM_ReadCompareBuf
 1355              		.section	.text.PWM_ReadCapture,"ax",%progbits
 1356              		.align	2
 1357              		.global	PWM_ReadCapture
 1358              		.code	16
 1359              		.thumb_func
 1360              		.type	PWM_ReadCapture, %function
 1361              	PWM_ReadCapture:
 1362              	.LFB26:
1013:.\Generated_Source\PSoC4/PWM.c **** 
1014:.\Generated_Source\PSoC4/PWM.c **** 
1015:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1016:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCapture
1017:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1018:.\Generated_Source\PSoC4/PWM.c **** *
1019:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1020:.\Generated_Source\PSoC4/PWM.c **** *  Reads the captured counter value. This API is applicable only for
1021:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1022:.\Generated_Source\PSoC4/PWM.c **** *
1023:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1024:.\Generated_Source\PSoC4/PWM.c **** *  None
1025:.\Generated_Source\PSoC4/PWM.c **** *
1026:.\Generated_Source\PSoC4/PWM.c **** * Return:
1027:.\Generated_Source\PSoC4/PWM.c **** *  Capture value
1028:.\Generated_Source\PSoC4/PWM.c **** *
1029:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1030:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCapture(void)
1031:.\Generated_Source\PSoC4/PWM.c **** {
 1363              		.loc 1 1031 0
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 43


 1364              		.cfi_startproc
 1365 0000 80B5     		push	{r7, lr}
 1366              	.LCFI71:
 1367              		.cfi_def_cfa_offset 8
 1368              		.cfi_offset 7, -8
 1369              		.cfi_offset 14, -4
 1370 0002 00AF     		add	r7, sp, #0
 1371              	.LCFI72:
 1372              		.cfi_def_cfa_register 7
1032:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_REG & PWM_16BIT_MASK);
 1373              		.loc 1 1032 0
 1374 0004 034B     		ldr	r3, .L87
 1375 0006 1B68     		ldr	r3, [r3]
 1376 0008 1B04     		lsl	r3, r3, #16
 1377 000a 1B0C     		lsr	r3, r3, #16
1033:.\Generated_Source\PSoC4/PWM.c **** }
 1378              		.loc 1 1033 0
 1379 000c 181C     		mov	r0, r3
 1380 000e BD46     		mov	sp, r7
 1381              		@ sp needed for prologue
 1382 0010 80BD     		pop	{r7, pc}
 1383              	.L88:
 1384 0012 C046     		.align	2
 1385              	.L87:
 1386 0014 0C010540 		.word	1074069772
 1387              		.cfi_endproc
 1388              	.LFE26:
 1389              		.size	PWM_ReadCapture, .-PWM_ReadCapture
 1390              		.section	.text.PWM_ReadCaptureBuf,"ax",%progbits
 1391              		.align	2
 1392              		.global	PWM_ReadCaptureBuf
 1393              		.code	16
 1394              		.thumb_func
 1395              		.type	PWM_ReadCaptureBuf, %function
 1396              	PWM_ReadCaptureBuf:
 1397              	.LFB27:
1034:.\Generated_Source\PSoC4/PWM.c **** 
1035:.\Generated_Source\PSoC4/PWM.c **** 
1036:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1037:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadCaptureBuf
1038:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1039:.\Generated_Source\PSoC4/PWM.c **** *
1040:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1041:.\Generated_Source\PSoC4/PWM.c **** *  Reads the capture buffer register. This API is applicable only for
1042:.\Generated_Source\PSoC4/PWM.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1043:.\Generated_Source\PSoC4/PWM.c **** *
1044:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1045:.\Generated_Source\PSoC4/PWM.c **** *  None
1046:.\Generated_Source\PSoC4/PWM.c **** *
1047:.\Generated_Source\PSoC4/PWM.c **** * Return:
1048:.\Generated_Source\PSoC4/PWM.c **** *  Capture buffer value
1049:.\Generated_Source\PSoC4/PWM.c **** *
1050:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1051:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadCaptureBuf(void)
1052:.\Generated_Source\PSoC4/PWM.c **** {
 1398              		.loc 1 1052 0
 1399              		.cfi_startproc
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 44


 1400 0000 80B5     		push	{r7, lr}
 1401              	.LCFI73:
 1402              		.cfi_def_cfa_offset 8
 1403              		.cfi_offset 7, -8
 1404              		.cfi_offset 14, -4
 1405 0002 00AF     		add	r7, sp, #0
 1406              	.LCFI74:
 1407              		.cfi_def_cfa_register 7
1053:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_COMP_CAP_BUF_REG & PWM_16BIT_MASK);
 1408              		.loc 1 1053 0
 1409 0004 034B     		ldr	r3, .L91
 1410 0006 1B68     		ldr	r3, [r3]
 1411 0008 1B04     		lsl	r3, r3, #16
 1412 000a 1B0C     		lsr	r3, r3, #16
1054:.\Generated_Source\PSoC4/PWM.c **** }
 1413              		.loc 1 1054 0
 1414 000c 181C     		mov	r0, r3
 1415 000e BD46     		mov	sp, r7
 1416              		@ sp needed for prologue
 1417 0010 80BD     		pop	{r7, pc}
 1418              	.L92:
 1419 0012 C046     		.align	2
 1420              	.L91:
 1421 0014 10010540 		.word	1074069776
 1422              		.cfi_endproc
 1423              	.LFE27:
 1424              		.size	PWM_ReadCaptureBuf, .-PWM_ReadCaptureBuf
 1425              		.section	.text.PWM_SetCaptureMode,"ax",%progbits
 1426              		.align	2
 1427              		.global	PWM_SetCaptureMode
 1428              		.code	16
 1429              		.thumb_func
 1430              		.type	PWM_SetCaptureMode, %function
 1431              	PWM_SetCaptureMode:
 1432              	.LFB28:
1055:.\Generated_Source\PSoC4/PWM.c **** 
1056:.\Generated_Source\PSoC4/PWM.c **** 
1057:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1058:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCaptureMode
1059:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1060:.\Generated_Source\PSoC4/PWM.c **** *
1061:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1062:.\Generated_Source\PSoC4/PWM.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1063:.\Generated_Source\PSoC4/PWM.c **** *  This input is not applicable to the Timer/Counter without Capture and
1064:.\Generated_Source\PSoC4/PWM.c **** *  Quadrature Decoder modes.
1065:.\Generated_Source\PSoC4/PWM.c **** *
1066:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1067:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1068:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1069:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1070:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1071:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1072:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1073:.\Generated_Source\PSoC4/PWM.c **** *
1074:.\Generated_Source\PSoC4/PWM.c **** * Return:
1075:.\Generated_Source\PSoC4/PWM.c **** *  None
1076:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 45


1077:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1078:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCaptureMode(uint32 triggerMode)
1079:.\Generated_Source\PSoC4/PWM.c **** {
 1433              		.loc 1 1079 0
 1434              		.cfi_startproc
 1435 0000 90B5     		push	{r4, r7, lr}
 1436              	.LCFI75:
 1437              		.cfi_def_cfa_offset 12
 1438              		.cfi_offset 4, -12
 1439              		.cfi_offset 7, -8
 1440              		.cfi_offset 14, -4
 1441 0002 85B0     		sub	sp, sp, #20
 1442              	.LCFI76:
 1443              		.cfi_def_cfa_offset 32
 1444 0004 00AF     		add	r7, sp, #0
 1445              	.LCFI77:
 1446              		.cfi_def_cfa_register 7
 1447 0006 7860     		str	r0, [r7, #4]
1080:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1081:.\Generated_Source\PSoC4/PWM.c **** 
1082:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1448              		.loc 1 1082 0
 1449 0008 3C1C     		mov	r4, r7
 1450 000a 0F34     		add	r4, r4, #15
 1451 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1452 0010 031C     		mov	r3, r0
 1453 0012 2370     		strb	r3, [r4]
1083:.\Generated_Source\PSoC4/PWM.c **** 
1084:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_CAPTURE_MASK;
 1454              		.loc 1 1084 0
 1455 0014 0A4B     		ldr	r3, .L94
 1456 0016 0A4A     		ldr	r2, .L94
 1457 0018 1268     		ldr	r2, [r2]
 1458 001a 0321     		mov	r1, #3
 1459 001c 8A43     		bic	r2, r1
 1460 001e 1A60     		str	r2, [r3]
1085:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= triggerMode;
 1461              		.loc 1 1085 0
 1462 0020 074B     		ldr	r3, .L94
 1463 0022 074A     		ldr	r2, .L94
 1464 0024 1168     		ldr	r1, [r2]
 1465 0026 7A68     		ldr	r2, [r7, #4]
 1466 0028 0A43     		orr	r2, r1
 1467 002a 1A60     		str	r2, [r3]
1086:.\Generated_Source\PSoC4/PWM.c **** 
1087:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1468              		.loc 1 1087 0
 1469 002c 3B1C     		mov	r3, r7
 1470 002e 0F33     		add	r3, r3, #15
 1471 0030 1B78     		ldrb	r3, [r3]
 1472 0032 181C     		mov	r0, r3
 1473 0034 FFF7FEFF 		bl	CyExitCriticalSection
1088:.\Generated_Source\PSoC4/PWM.c **** }
 1474              		.loc 1 1088 0
 1475 0038 BD46     		mov	sp, r7
 1476 003a 05B0     		add	sp, sp, #20
 1477              		@ sp needed for prologue
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 46


 1478 003c 90BD     		pop	{r4, r7, pc}
 1479              	.L95:
 1480 003e C046     		.align	2
 1481              	.L94:
 1482 0040 24010540 		.word	1074069796
 1483              		.cfi_endproc
 1484              	.LFE28:
 1485              		.size	PWM_SetCaptureMode, .-PWM_SetCaptureMode
 1486              		.section	.text.PWM_SetReloadMode,"ax",%progbits
 1487              		.align	2
 1488              		.global	PWM_SetReloadMode
 1489              		.code	16
 1490              		.thumb_func
 1491              		.type	PWM_SetReloadMode, %function
 1492              	PWM_SetReloadMode:
 1493              	.LFB29:
1089:.\Generated_Source\PSoC4/PWM.c **** 
1090:.\Generated_Source\PSoC4/PWM.c **** 
1091:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1092:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetReloadMode
1093:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1094:.\Generated_Source\PSoC4/PWM.c **** *
1095:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1096:.\Generated_Source\PSoC4/PWM.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1097:.\Generated_Source\PSoC4/PWM.c **** *  input.
1098:.\Generated_Source\PSoC4/PWM.c **** *
1099:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1100:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1101:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1102:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1103:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1104:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1105:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1106:.\Generated_Source\PSoC4/PWM.c **** *
1107:.\Generated_Source\PSoC4/PWM.c **** * Return:
1108:.\Generated_Source\PSoC4/PWM.c **** *  None
1109:.\Generated_Source\PSoC4/PWM.c **** *
1110:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1111:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetReloadMode(uint32 triggerMode)
1112:.\Generated_Source\PSoC4/PWM.c **** {
 1494              		.loc 1 1112 0
 1495              		.cfi_startproc
 1496 0000 90B5     		push	{r4, r7, lr}
 1497              	.LCFI78:
 1498              		.cfi_def_cfa_offset 12
 1499              		.cfi_offset 4, -12
 1500              		.cfi_offset 7, -8
 1501              		.cfi_offset 14, -4
 1502 0002 85B0     		sub	sp, sp, #20
 1503              	.LCFI79:
 1504              		.cfi_def_cfa_offset 32
 1505 0004 00AF     		add	r7, sp, #0
 1506              	.LCFI80:
 1507              		.cfi_def_cfa_register 7
 1508 0006 7860     		str	r0, [r7, #4]
1113:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1114:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 47


1115:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1509              		.loc 1 1115 0
 1510 0008 3C1C     		mov	r4, r7
 1511 000a 0F34     		add	r4, r4, #15
 1512 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1513 0010 031C     		mov	r3, r0
 1514 0012 2370     		strb	r3, [r4]
1116:.\Generated_Source\PSoC4/PWM.c **** 
1117:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_RELOAD_MASK;
 1515              		.loc 1 1117 0
 1516 0014 0A4B     		ldr	r3, .L97
 1517 0016 0A4A     		ldr	r2, .L97
 1518 0018 1268     		ldr	r2, [r2]
 1519 001a 3021     		mov	r1, #48
 1520 001c 8A43     		bic	r2, r1
 1521 001e 1A60     		str	r2, [r3]
1118:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_RELOAD_SHIFT));
 1522              		.loc 1 1118 0
 1523 0020 074B     		ldr	r3, .L97
 1524 0022 074A     		ldr	r2, .L97
 1525 0024 1168     		ldr	r1, [r2]
 1526 0026 7A68     		ldr	r2, [r7, #4]
 1527 0028 1201     		lsl	r2, r2, #4
 1528 002a 0A43     		orr	r2, r1
 1529 002c 1A60     		str	r2, [r3]
1119:.\Generated_Source\PSoC4/PWM.c **** 
1120:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1530              		.loc 1 1120 0
 1531 002e 3B1C     		mov	r3, r7
 1532 0030 0F33     		add	r3, r3, #15
 1533 0032 1B78     		ldrb	r3, [r3]
 1534 0034 181C     		mov	r0, r3
 1535 0036 FFF7FEFF 		bl	CyExitCriticalSection
1121:.\Generated_Source\PSoC4/PWM.c **** }
 1536              		.loc 1 1121 0
 1537 003a BD46     		mov	sp, r7
 1538 003c 05B0     		add	sp, sp, #20
 1539              		@ sp needed for prologue
 1540 003e 90BD     		pop	{r4, r7, pc}
 1541              	.L98:
 1542              		.align	2
 1543              	.L97:
 1544 0040 24010540 		.word	1074069796
 1545              		.cfi_endproc
 1546              	.LFE29:
 1547              		.size	PWM_SetReloadMode, .-PWM_SetReloadMode
 1548              		.section	.text.PWM_SetStartMode,"ax",%progbits
 1549              		.align	2
 1550              		.global	PWM_SetStartMode
 1551              		.code	16
 1552              		.thumb_func
 1553              		.type	PWM_SetStartMode, %function
 1554              	PWM_SetStartMode:
 1555              	.LFB30:
1122:.\Generated_Source\PSoC4/PWM.c **** 
1123:.\Generated_Source\PSoC4/PWM.c **** 
1124:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 48


1125:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStartMode
1126:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1127:.\Generated_Source\PSoC4/PWM.c **** *
1128:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1129:.\Generated_Source\PSoC4/PWM.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1130:.\Generated_Source\PSoC4/PWM.c **** *  phiB input.
1131:.\Generated_Source\PSoC4/PWM.c **** *
1132:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1133:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1134:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1135:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1136:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1137:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1138:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1139:.\Generated_Source\PSoC4/PWM.c **** *
1140:.\Generated_Source\PSoC4/PWM.c **** * Return:
1141:.\Generated_Source\PSoC4/PWM.c **** *  None
1142:.\Generated_Source\PSoC4/PWM.c **** *
1143:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1144:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStartMode(uint32 triggerMode)
1145:.\Generated_Source\PSoC4/PWM.c **** {
 1556              		.loc 1 1145 0
 1557              		.cfi_startproc
 1558 0000 90B5     		push	{r4, r7, lr}
 1559              	.LCFI81:
 1560              		.cfi_def_cfa_offset 12
 1561              		.cfi_offset 4, -12
 1562              		.cfi_offset 7, -8
 1563              		.cfi_offset 14, -4
 1564 0002 85B0     		sub	sp, sp, #20
 1565              	.LCFI82:
 1566              		.cfi_def_cfa_offset 32
 1567 0004 00AF     		add	r7, sp, #0
 1568              	.LCFI83:
 1569              		.cfi_def_cfa_register 7
 1570 0006 7860     		str	r0, [r7, #4]
1146:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1147:.\Generated_Source\PSoC4/PWM.c **** 
1148:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1571              		.loc 1 1148 0
 1572 0008 3C1C     		mov	r4, r7
 1573 000a 0F34     		add	r4, r4, #15
 1574 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1575 0010 031C     		mov	r3, r0
 1576 0012 2370     		strb	r3, [r4]
1149:.\Generated_Source\PSoC4/PWM.c **** 
1150:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_START_MASK;
 1577              		.loc 1 1150 0
 1578 0014 0A4B     		ldr	r3, .L100
 1579 0016 0A4A     		ldr	r2, .L100
 1580 0018 1168     		ldr	r1, [r2]
 1581 001a 0A4A     		ldr	r2, .L100+4
 1582 001c 0A40     		and	r2, r1
 1583 001e 1A60     		str	r2, [r3]
1151:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_START_SHIFT));
 1584              		.loc 1 1151 0
 1585 0020 074B     		ldr	r3, .L100
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 49


 1586 0022 074A     		ldr	r2, .L100
 1587 0024 1168     		ldr	r1, [r2]
 1588 0026 7A68     		ldr	r2, [r7, #4]
 1589 0028 1202     		lsl	r2, r2, #8
 1590 002a 0A43     		orr	r2, r1
 1591 002c 1A60     		str	r2, [r3]
1152:.\Generated_Source\PSoC4/PWM.c **** 
1153:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1592              		.loc 1 1153 0
 1593 002e 3B1C     		mov	r3, r7
 1594 0030 0F33     		add	r3, r3, #15
 1595 0032 1B78     		ldrb	r3, [r3]
 1596 0034 181C     		mov	r0, r3
 1597 0036 FFF7FEFF 		bl	CyExitCriticalSection
1154:.\Generated_Source\PSoC4/PWM.c **** }
 1598              		.loc 1 1154 0
 1599 003a BD46     		mov	sp, r7
 1600 003c 05B0     		add	sp, sp, #20
 1601              		@ sp needed for prologue
 1602 003e 90BD     		pop	{r4, r7, pc}
 1603              	.L101:
 1604              		.align	2
 1605              	.L100:
 1606 0040 24010540 		.word	1074069796
 1607 0044 FFFCFFFF 		.word	-769
 1608              		.cfi_endproc
 1609              	.LFE30:
 1610              		.size	PWM_SetStartMode, .-PWM_SetStartMode
 1611              		.section	.text.PWM_SetStopMode,"ax",%progbits
 1612              		.align	2
 1613              		.global	PWM_SetStopMode
 1614              		.code	16
 1615              		.thumb_func
 1616              		.type	PWM_SetStopMode, %function
 1617              	PWM_SetStopMode:
 1618              	.LFB31:
1155:.\Generated_Source\PSoC4/PWM.c **** 
1156:.\Generated_Source\PSoC4/PWM.c **** 
1157:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1158:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetStopMode
1159:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1160:.\Generated_Source\PSoC4/PWM.c **** *
1161:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1162:.\Generated_Source\PSoC4/PWM.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1163:.\Generated_Source\PSoC4/PWM.c **** *
1164:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1165:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1166:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1167:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1168:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1169:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1170:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1171:.\Generated_Source\PSoC4/PWM.c **** *
1172:.\Generated_Source\PSoC4/PWM.c **** * Return:
1173:.\Generated_Source\PSoC4/PWM.c **** *  None
1174:.\Generated_Source\PSoC4/PWM.c **** *
1175:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 50


1176:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetStopMode(uint32 triggerMode)
1177:.\Generated_Source\PSoC4/PWM.c **** {
 1619              		.loc 1 1177 0
 1620              		.cfi_startproc
 1621 0000 90B5     		push	{r4, r7, lr}
 1622              	.LCFI84:
 1623              		.cfi_def_cfa_offset 12
 1624              		.cfi_offset 4, -12
 1625              		.cfi_offset 7, -8
 1626              		.cfi_offset 14, -4
 1627 0002 85B0     		sub	sp, sp, #20
 1628              	.LCFI85:
 1629              		.cfi_def_cfa_offset 32
 1630 0004 00AF     		add	r7, sp, #0
 1631              	.LCFI86:
 1632              		.cfi_def_cfa_register 7
 1633 0006 7860     		str	r0, [r7, #4]
1178:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1179:.\Generated_Source\PSoC4/PWM.c **** 
1180:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1634              		.loc 1 1180 0
 1635 0008 3C1C     		mov	r4, r7
 1636 000a 0F34     		add	r4, r4, #15
 1637 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1638 0010 031C     		mov	r3, r0
 1639 0012 2370     		strb	r3, [r4]
1181:.\Generated_Source\PSoC4/PWM.c **** 
1182:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_STOP_MASK;
 1640              		.loc 1 1182 0
 1641 0014 0A4B     		ldr	r3, .L103
 1642 0016 0A4A     		ldr	r2, .L103
 1643 0018 1268     		ldr	r2, [r2]
 1644 001a C021     		mov	r1, #192
 1645 001c 8A43     		bic	r2, r1
 1646 001e 1A60     		str	r2, [r3]
1183:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_STOP_SHIFT));
 1647              		.loc 1 1183 0
 1648 0020 074B     		ldr	r3, .L103
 1649 0022 074A     		ldr	r2, .L103
 1650 0024 1168     		ldr	r1, [r2]
 1651 0026 7A68     		ldr	r2, [r7, #4]
 1652 0028 9201     		lsl	r2, r2, #6
 1653 002a 0A43     		orr	r2, r1
 1654 002c 1A60     		str	r2, [r3]
1184:.\Generated_Source\PSoC4/PWM.c **** 
1185:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1655              		.loc 1 1185 0
 1656 002e 3B1C     		mov	r3, r7
 1657 0030 0F33     		add	r3, r3, #15
 1658 0032 1B78     		ldrb	r3, [r3]
 1659 0034 181C     		mov	r0, r3
 1660 0036 FFF7FEFF 		bl	CyExitCriticalSection
1186:.\Generated_Source\PSoC4/PWM.c **** }
 1661              		.loc 1 1186 0
 1662 003a BD46     		mov	sp, r7
 1663 003c 05B0     		add	sp, sp, #20
 1664              		@ sp needed for prologue
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 51


 1665 003e 90BD     		pop	{r4, r7, pc}
 1666              	.L104:
 1667              		.align	2
 1668              	.L103:
 1669 0040 24010540 		.word	1074069796
 1670              		.cfi_endproc
 1671              	.LFE31:
 1672              		.size	PWM_SetStopMode, .-PWM_SetStopMode
 1673              		.section	.text.PWM_SetCountMode,"ax",%progbits
 1674              		.align	2
 1675              		.global	PWM_SetCountMode
 1676              		.code	16
 1677              		.thumb_func
 1678              		.type	PWM_SetCountMode, %function
 1679              	PWM_SetCountMode:
 1680              	.LFB32:
1187:.\Generated_Source\PSoC4/PWM.c **** 
1188:.\Generated_Source\PSoC4/PWM.c **** 
1189:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1190:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetCountMode
1191:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1192:.\Generated_Source\PSoC4/PWM.c **** *
1193:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1194:.\Generated_Source\PSoC4/PWM.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1195:.\Generated_Source\PSoC4/PWM.c **** *  input.
1196:.\Generated_Source\PSoC4/PWM.c **** *
1197:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1198:.\Generated_Source\PSoC4/PWM.c **** *  triggerMode: Enumerated trigger mode value
1199:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1200:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_LEVEL     - Level
1201:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_RISING    - Rising edge
1202:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_FALLING   - Falling edge
1203:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_TRIG_BOTH      - Both rising and falling edge
1204:.\Generated_Source\PSoC4/PWM.c **** *
1205:.\Generated_Source\PSoC4/PWM.c **** * Return:
1206:.\Generated_Source\PSoC4/PWM.c **** *  None
1207:.\Generated_Source\PSoC4/PWM.c **** *
1208:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1209:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetCountMode(uint32 triggerMode)
1210:.\Generated_Source\PSoC4/PWM.c **** {
 1681              		.loc 1 1210 0
 1682              		.cfi_startproc
 1683 0000 90B5     		push	{r4, r7, lr}
 1684              	.LCFI87:
 1685              		.cfi_def_cfa_offset 12
 1686              		.cfi_offset 4, -12
 1687              		.cfi_offset 7, -8
 1688              		.cfi_offset 14, -4
 1689 0002 85B0     		sub	sp, sp, #20
 1690              	.LCFI88:
 1691              		.cfi_def_cfa_offset 32
 1692 0004 00AF     		add	r7, sp, #0
 1693              	.LCFI89:
 1694              		.cfi_def_cfa_register 7
 1695 0006 7860     		str	r0, [r7, #4]
1211:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1212:.\Generated_Source\PSoC4/PWM.c **** 
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 52


1213:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1696              		.loc 1 1213 0
 1697 0008 3C1C     		mov	r4, r7
 1698 000a 0F34     		add	r4, r4, #15
 1699 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1700 0010 031C     		mov	r3, r0
 1701 0012 2370     		strb	r3, [r4]
1214:.\Generated_Source\PSoC4/PWM.c **** 
1215:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG &= (uint32)~PWM_COUNT_MASK;
 1702              		.loc 1 1215 0
 1703 0014 0A4B     		ldr	r3, .L106
 1704 0016 0A4A     		ldr	r2, .L106
 1705 0018 1268     		ldr	r2, [r2]
 1706 001a 0C21     		mov	r1, #12
 1707 001c 8A43     		bic	r2, r1
 1708 001e 1A60     		str	r2, [r3]
1216:.\Generated_Source\PSoC4/PWM.c ****     PWM_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_COUNT_SHIFT));
 1709              		.loc 1 1216 0
 1710 0020 074B     		ldr	r3, .L106
 1711 0022 074A     		ldr	r2, .L106
 1712 0024 1168     		ldr	r1, [r2]
 1713 0026 7A68     		ldr	r2, [r7, #4]
 1714 0028 9200     		lsl	r2, r2, #2
 1715 002a 0A43     		orr	r2, r1
 1716 002c 1A60     		str	r2, [r3]
1217:.\Generated_Source\PSoC4/PWM.c **** 
1218:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1717              		.loc 1 1218 0
 1718 002e 3B1C     		mov	r3, r7
 1719 0030 0F33     		add	r3, r3, #15
 1720 0032 1B78     		ldrb	r3, [r3]
 1721 0034 181C     		mov	r0, r3
 1722 0036 FFF7FEFF 		bl	CyExitCriticalSection
1219:.\Generated_Source\PSoC4/PWM.c **** }
 1723              		.loc 1 1219 0
 1724 003a BD46     		mov	sp, r7
 1725 003c 05B0     		add	sp, sp, #20
 1726              		@ sp needed for prologue
 1727 003e 90BD     		pop	{r4, r7, pc}
 1728              	.L107:
 1729              		.align	2
 1730              	.L106:
 1731 0040 24010540 		.word	1074069796
 1732              		.cfi_endproc
 1733              	.LFE32:
 1734              		.size	PWM_SetCountMode, .-PWM_SetCountMode
 1735              		.section	.text.PWM_TriggerCommand,"ax",%progbits
 1736              		.align	2
 1737              		.global	PWM_TriggerCommand
 1738              		.code	16
 1739              		.thumb_func
 1740              		.type	PWM_TriggerCommand, %function
 1741              	PWM_TriggerCommand:
 1742              	.LFB33:
1220:.\Generated_Source\PSoC4/PWM.c **** 
1221:.\Generated_Source\PSoC4/PWM.c **** 
1222:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 53


1223:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_TriggerCommand
1224:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1225:.\Generated_Source\PSoC4/PWM.c **** *
1226:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1227:.\Generated_Source\PSoC4/PWM.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1228:.\Generated_Source\PSoC4/PWM.c **** *  The mask can be used to apply this command simultaneously to more than one
1229:.\Generated_Source\PSoC4/PWM.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1230:.\Generated_Source\PSoC4/PWM.c **** *
1231:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1232:.\Generated_Source\PSoC4/PWM.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1233:.\Generated_Source\PSoC4/PWM.c **** *        command should apply to.  This function from one instance can be used
1234:.\Generated_Source\PSoC4/PWM.c **** *        to apply the command to any of the instances in the design.
1235:.\Generated_Source\PSoC4/PWM.c **** *        The mask value for a specific instance is available with the MASK
1236:.\Generated_Source\PSoC4/PWM.c **** *        define.
1237:.\Generated_Source\PSoC4/PWM.c **** *  command: Enumerated command values. Capture command only applicable for
1238:.\Generated_Source\PSoC4/PWM.c **** *           Timer/Counter with Capture and PWM modes.
1239:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1240:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_CAPTURE    - Trigger Capture command
1241:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_RELOAD     - Trigger Reload command
1242:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_STOP       - Trigger Stop command
1243:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_CMD_START      - Trigger Start command
1244:.\Generated_Source\PSoC4/PWM.c **** *
1245:.\Generated_Source\PSoC4/PWM.c **** * Return:
1246:.\Generated_Source\PSoC4/PWM.c **** *  None
1247:.\Generated_Source\PSoC4/PWM.c **** *
1248:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1249:.\Generated_Source\PSoC4/PWM.c **** void PWM_TriggerCommand(uint32 mask, uint32 command)
1250:.\Generated_Source\PSoC4/PWM.c **** {
 1743              		.loc 1 1250 0
 1744              		.cfi_startproc
 1745 0000 90B5     		push	{r4, r7, lr}
 1746              	.LCFI90:
 1747              		.cfi_def_cfa_offset 12
 1748              		.cfi_offset 4, -12
 1749              		.cfi_offset 7, -8
 1750              		.cfi_offset 14, -4
 1751 0002 85B0     		sub	sp, sp, #20
 1752              	.LCFI91:
 1753              		.cfi_def_cfa_offset 32
 1754 0004 00AF     		add	r7, sp, #0
 1755              	.LCFI92:
 1756              		.cfi_def_cfa_register 7
 1757 0006 7860     		str	r0, [r7, #4]
 1758 0008 3960     		str	r1, [r7]
1251:.\Generated_Source\PSoC4/PWM.c ****     uint8 enableInterrupts;
1252:.\Generated_Source\PSoC4/PWM.c **** 
1253:.\Generated_Source\PSoC4/PWM.c ****     enableInterrupts = CyEnterCriticalSection();
 1759              		.loc 1 1253 0
 1760 000a 3C1C     		mov	r4, r7
 1761 000c 0F34     		add	r4, r4, #15
 1762 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1763 0012 031C     		mov	r3, r0
 1764 0014 2370     		strb	r3, [r4]
1254:.\Generated_Source\PSoC4/PWM.c **** 
1255:.\Generated_Source\PSoC4/PWM.c ****     PWM_COMMAND_REG = ((uint32)(mask << command));
 1765              		.loc 1 1255 0
 1766 0016 084B     		ldr	r3, .L109
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 54


 1767 0018 3A68     		ldr	r2, [r7]
 1768 001a 7968     		ldr	r1, [r7, #4]
 1769 001c 081C     		mov	r0, r1
 1770 001e 9040     		lsl	r0, r0, r2
 1771 0020 021C     		mov	r2, r0
 1772 0022 1A60     		str	r2, [r3]
1256:.\Generated_Source\PSoC4/PWM.c **** 
1257:.\Generated_Source\PSoC4/PWM.c ****     CyExitCriticalSection(enableInterrupts);
 1773              		.loc 1 1257 0
 1774 0024 3B1C     		mov	r3, r7
 1775 0026 0F33     		add	r3, r3, #15
 1776 0028 1B78     		ldrb	r3, [r3]
 1777 002a 181C     		mov	r0, r3
 1778 002c FFF7FEFF 		bl	CyExitCriticalSection
1258:.\Generated_Source\PSoC4/PWM.c **** }
 1779              		.loc 1 1258 0
 1780 0030 BD46     		mov	sp, r7
 1781 0032 05B0     		add	sp, sp, #20
 1782              		@ sp needed for prologue
 1783 0034 90BD     		pop	{r4, r7, pc}
 1784              	.L110:
 1785 0036 C046     		.align	2
 1786              	.L109:
 1787 0038 08000540 		.word	1074069512
 1788              		.cfi_endproc
 1789              	.LFE33:
 1790              		.size	PWM_TriggerCommand, .-PWM_TriggerCommand
 1791              		.section	.text.PWM_ReadStatus,"ax",%progbits
 1792              		.align	2
 1793              		.global	PWM_ReadStatus
 1794              		.code	16
 1795              		.thumb_func
 1796              		.type	PWM_ReadStatus, %function
 1797              	PWM_ReadStatus:
 1798              	.LFB34:
1259:.\Generated_Source\PSoC4/PWM.c **** 
1260:.\Generated_Source\PSoC4/PWM.c **** 
1261:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1262:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ReadStatus
1263:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1264:.\Generated_Source\PSoC4/PWM.c **** *
1265:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1266:.\Generated_Source\PSoC4/PWM.c **** *  Reads the status of the PWM.
1267:.\Generated_Source\PSoC4/PWM.c **** *
1268:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1269:.\Generated_Source\PSoC4/PWM.c **** *  None
1270:.\Generated_Source\PSoC4/PWM.c **** *
1271:.\Generated_Source\PSoC4/PWM.c **** * Return:
1272:.\Generated_Source\PSoC4/PWM.c **** *  Status
1273:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1274:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_DOWN    - Set if counting down
1275:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_STATUS_RUNNING - Set if counter is running
1276:.\Generated_Source\PSoC4/PWM.c **** *
1277:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1278:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_ReadStatus(void)
1279:.\Generated_Source\PSoC4/PWM.c **** {
 1799              		.loc 1 1279 0
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 55


 1800              		.cfi_startproc
 1801 0000 80B5     		push	{r7, lr}
 1802              	.LCFI93:
 1803              		.cfi_def_cfa_offset 8
 1804              		.cfi_offset 7, -8
 1805              		.cfi_offset 14, -4
 1806 0002 00AF     		add	r7, sp, #0
 1807              	.LCFI94:
 1808              		.cfi_def_cfa_register 7
1280:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1809              		.loc 1 1280 0
 1810 0004 054B     		ldr	r3, .L113
 1811 0006 1B68     		ldr	r3, [r3]
 1812 0008 9A0F     		lsr	r2, r3, #30
1281:.\Generated_Source\PSoC4/PWM.c ****             (PWM_STATUS_REG & PWM_STATUS_DOWN));
 1813              		.loc 1 1281 0
 1814 000a 044B     		ldr	r3, .L113
 1815 000c 1968     		ldr	r1, [r3]
 1816 000e 0123     		mov	r3, #1
 1817 0010 0B40     		and	r3, r1
1280:.\Generated_Source\PSoC4/PWM.c ****     return ((PWM_STATUS_REG >> PWM_RUNNING_STATUS_SHIFT) |
 1818              		.loc 1 1280 0
 1819 0012 1343     		orr	r3, r2
1282:.\Generated_Source\PSoC4/PWM.c **** }
 1820              		.loc 1 1282 0
 1821 0014 181C     		mov	r0, r3
 1822 0016 BD46     		mov	sp, r7
 1823              		@ sp needed for prologue
 1824 0018 80BD     		pop	{r7, pc}
 1825              	.L114:
 1826 001a C046     		.align	2
 1827              	.L113:
 1828 001c 04010540 		.word	1074069764
 1829              		.cfi_endproc
 1830              	.LFE34:
 1831              		.size	PWM_ReadStatus, .-PWM_ReadStatus
 1832              		.section	.text.PWM_SetInterruptMode,"ax",%progbits
 1833              		.align	2
 1834              		.global	PWM_SetInterruptMode
 1835              		.code	16
 1836              		.thumb_func
 1837              		.type	PWM_SetInterruptMode, %function
 1838              	PWM_SetInterruptMode:
 1839              	.LFB35:
1283:.\Generated_Source\PSoC4/PWM.c **** 
1284:.\Generated_Source\PSoC4/PWM.c **** 
1285:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1286:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterruptMode
1287:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1288:.\Generated_Source\PSoC4/PWM.c **** *
1289:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1290:.\Generated_Source\PSoC4/PWM.c **** *  Sets the interrupt mask to control which interrupt
1291:.\Generated_Source\PSoC4/PWM.c **** *  requests generate the interrupt signal.
1292:.\Generated_Source\PSoC4/PWM.c **** *
1293:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1294:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of bits to be enabled
1295:.\Generated_Source\PSoC4/PWM.c **** *   Values:
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 56


1296:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1297:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1298:.\Generated_Source\PSoC4/PWM.c **** *
1299:.\Generated_Source\PSoC4/PWM.c **** * Return:
1300:.\Generated_Source\PSoC4/PWM.c **** *  None
1301:.\Generated_Source\PSoC4/PWM.c **** *
1302:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1303:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterruptMode(uint32 interruptMask)
1304:.\Generated_Source\PSoC4/PWM.c **** {
 1840              		.loc 1 1304 0
 1841              		.cfi_startproc
 1842 0000 80B5     		push	{r7, lr}
 1843              	.LCFI95:
 1844              		.cfi_def_cfa_offset 8
 1845              		.cfi_offset 7, -8
 1846              		.cfi_offset 14, -4
 1847 0002 82B0     		sub	sp, sp, #8
 1848              	.LCFI96:
 1849              		.cfi_def_cfa_offset 16
 1850 0004 00AF     		add	r7, sp, #0
 1851              	.LCFI97:
 1852              		.cfi_def_cfa_register 7
 1853 0006 7860     		str	r0, [r7, #4]
1305:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_MASK_REG =  interruptMask;
 1854              		.loc 1 1305 0
 1855 0008 024B     		ldr	r3, .L116
 1856 000a 7A68     		ldr	r2, [r7, #4]
 1857 000c 1A60     		str	r2, [r3]
1306:.\Generated_Source\PSoC4/PWM.c **** }
 1858              		.loc 1 1306 0
 1859 000e BD46     		mov	sp, r7
 1860 0010 02B0     		add	sp, sp, #8
 1861              		@ sp needed for prologue
 1862 0012 80BD     		pop	{r7, pc}
 1863              	.L117:
 1864              		.align	2
 1865              	.L116:
 1866 0014 38010540 		.word	1074069816
 1867              		.cfi_endproc
 1868              	.LFE35:
 1869              		.size	PWM_SetInterruptMode, .-PWM_SetInterruptMode
 1870              		.section	.text.PWM_GetInterruptSourceMasked,"ax",%progbits
 1871              		.align	2
 1872              		.global	PWM_GetInterruptSourceMasked
 1873              		.code	16
 1874              		.thumb_func
 1875              		.type	PWM_GetInterruptSourceMasked, %function
 1876              	PWM_GetInterruptSourceMasked:
 1877              	.LFB36:
1307:.\Generated_Source\PSoC4/PWM.c **** 
1308:.\Generated_Source\PSoC4/PWM.c **** 
1309:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1310:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSourceMasked
1311:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1312:.\Generated_Source\PSoC4/PWM.c **** *
1313:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1314:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests masked by the interrupt mask.
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 57


1315:.\Generated_Source\PSoC4/PWM.c **** *
1316:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1317:.\Generated_Source\PSoC4/PWM.c **** *   None
1318:.\Generated_Source\PSoC4/PWM.c **** *
1319:.\Generated_Source\PSoC4/PWM.c **** * Return:
1320:.\Generated_Source\PSoC4/PWM.c **** *  Masked interrupt source
1321:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1322:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1323:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1324:.\Generated_Source\PSoC4/PWM.c **** *
1325:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1326:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSourceMasked(void)
1327:.\Generated_Source\PSoC4/PWM.c **** {
 1878              		.loc 1 1327 0
 1879              		.cfi_startproc
 1880 0000 80B5     		push	{r7, lr}
 1881              	.LCFI98:
 1882              		.cfi_def_cfa_offset 8
 1883              		.cfi_offset 7, -8
 1884              		.cfi_offset 14, -4
 1885 0002 00AF     		add	r7, sp, #0
 1886              	.LCFI99:
 1887              		.cfi_def_cfa_register 7
1328:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_MASKED_REG);
 1888              		.loc 1 1328 0
 1889 0004 024B     		ldr	r3, .L120
 1890 0006 1B68     		ldr	r3, [r3]
1329:.\Generated_Source\PSoC4/PWM.c **** }
 1891              		.loc 1 1329 0
 1892 0008 181C     		mov	r0, r3
 1893 000a BD46     		mov	sp, r7
 1894              		@ sp needed for prologue
 1895 000c 80BD     		pop	{r7, pc}
 1896              	.L121:
 1897 000e C046     		.align	2
 1898              	.L120:
 1899 0010 3C010540 		.word	1074069820
 1900              		.cfi_endproc
 1901              	.LFE36:
 1902              		.size	PWM_GetInterruptSourceMasked, .-PWM_GetInterruptSourceMasked
 1903              		.section	.text.PWM_GetInterruptSource,"ax",%progbits
 1904              		.align	2
 1905              		.global	PWM_GetInterruptSource
 1906              		.code	16
 1907              		.thumb_func
 1908              		.type	PWM_GetInterruptSource, %function
 1909              	PWM_GetInterruptSource:
 1910              	.LFB37:
1330:.\Generated_Source\PSoC4/PWM.c **** 
1331:.\Generated_Source\PSoC4/PWM.c **** 
1332:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1333:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_GetInterruptSource
1334:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1335:.\Generated_Source\PSoC4/PWM.c **** *
1336:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1337:.\Generated_Source\PSoC4/PWM.c **** *  Gets the interrupt requests (without masking).
1338:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 58


1339:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1340:.\Generated_Source\PSoC4/PWM.c **** *  None
1341:.\Generated_Source\PSoC4/PWM.c **** *
1342:.\Generated_Source\PSoC4/PWM.c **** * Return:
1343:.\Generated_Source\PSoC4/PWM.c **** *  Interrupt request value
1344:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1345:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1346:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1347:.\Generated_Source\PSoC4/PWM.c **** *
1348:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1349:.\Generated_Source\PSoC4/PWM.c **** uint32 PWM_GetInterruptSource(void)
1350:.\Generated_Source\PSoC4/PWM.c **** {
 1911              		.loc 1 1350 0
 1912              		.cfi_startproc
 1913 0000 80B5     		push	{r7, lr}
 1914              	.LCFI100:
 1915              		.cfi_def_cfa_offset 8
 1916              		.cfi_offset 7, -8
 1917              		.cfi_offset 14, -4
 1918 0002 00AF     		add	r7, sp, #0
 1919              	.LCFI101:
 1920              		.cfi_def_cfa_register 7
1351:.\Generated_Source\PSoC4/PWM.c ****     return (PWM_INTERRUPT_REQ_REG);
 1921              		.loc 1 1351 0
 1922 0004 024B     		ldr	r3, .L124
 1923 0006 1B68     		ldr	r3, [r3]
1352:.\Generated_Source\PSoC4/PWM.c **** }
 1924              		.loc 1 1352 0
 1925 0008 181C     		mov	r0, r3
 1926 000a BD46     		mov	sp, r7
 1927              		@ sp needed for prologue
 1928 000c 80BD     		pop	{r7, pc}
 1929              	.L125:
 1930 000e C046     		.align	2
 1931              	.L124:
 1932 0010 30010540 		.word	1074069808
 1933              		.cfi_endproc
 1934              	.LFE37:
 1935              		.size	PWM_GetInterruptSource, .-PWM_GetInterruptSource
 1936              		.section	.text.PWM_ClearInterrupt,"ax",%progbits
 1937              		.align	2
 1938              		.global	PWM_ClearInterrupt
 1939              		.code	16
 1940              		.thumb_func
 1941              		.type	PWM_ClearInterrupt, %function
 1942              	PWM_ClearInterrupt:
 1943              	.LFB38:
1353:.\Generated_Source\PSoC4/PWM.c **** 
1354:.\Generated_Source\PSoC4/PWM.c **** 
1355:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1356:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_ClearInterrupt
1357:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1358:.\Generated_Source\PSoC4/PWM.c **** *
1359:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1360:.\Generated_Source\PSoC4/PWM.c **** *  Clears the interrupt request.
1361:.\Generated_Source\PSoC4/PWM.c **** *
1362:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 59


1363:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to clear
1364:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1365:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1366:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1367:.\Generated_Source\PSoC4/PWM.c **** *
1368:.\Generated_Source\PSoC4/PWM.c **** * Return:
1369:.\Generated_Source\PSoC4/PWM.c **** *  None
1370:.\Generated_Source\PSoC4/PWM.c **** *
1371:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1372:.\Generated_Source\PSoC4/PWM.c **** void PWM_ClearInterrupt(uint32 interruptMask)
1373:.\Generated_Source\PSoC4/PWM.c **** {
 1944              		.loc 1 1373 0
 1945              		.cfi_startproc
 1946 0000 80B5     		push	{r7, lr}
 1947              	.LCFI102:
 1948              		.cfi_def_cfa_offset 8
 1949              		.cfi_offset 7, -8
 1950              		.cfi_offset 14, -4
 1951 0002 82B0     		sub	sp, sp, #8
 1952              	.LCFI103:
 1953              		.cfi_def_cfa_offset 16
 1954 0004 00AF     		add	r7, sp, #0
 1955              	.LCFI104:
 1956              		.cfi_def_cfa_register 7
 1957 0006 7860     		str	r0, [r7, #4]
1374:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_REQ_REG = interruptMask;
 1958              		.loc 1 1374 0
 1959 0008 024B     		ldr	r3, .L127
 1960 000a 7A68     		ldr	r2, [r7, #4]
 1961 000c 1A60     		str	r2, [r3]
1375:.\Generated_Source\PSoC4/PWM.c **** }
 1962              		.loc 1 1375 0
 1963 000e BD46     		mov	sp, r7
 1964 0010 02B0     		add	sp, sp, #8
 1965              		@ sp needed for prologue
 1966 0012 80BD     		pop	{r7, pc}
 1967              	.L128:
 1968              		.align	2
 1969              	.L127:
 1970 0014 30010540 		.word	1074069808
 1971              		.cfi_endproc
 1972              	.LFE38:
 1973              		.size	PWM_ClearInterrupt, .-PWM_ClearInterrupt
 1974              		.section	.text.PWM_SetInterrupt,"ax",%progbits
 1975              		.align	2
 1976              		.global	PWM_SetInterrupt
 1977              		.code	16
 1978              		.thumb_func
 1979              		.type	PWM_SetInterrupt, %function
 1980              	PWM_SetInterrupt:
 1981              	.LFB39:
1376:.\Generated_Source\PSoC4/PWM.c **** 
1377:.\Generated_Source\PSoC4/PWM.c **** 
1378:.\Generated_Source\PSoC4/PWM.c **** /*******************************************************************************
1379:.\Generated_Source\PSoC4/PWM.c **** * Function Name: PWM_SetInterrupt
1380:.\Generated_Source\PSoC4/PWM.c **** ********************************************************************************
1381:.\Generated_Source\PSoC4/PWM.c **** *
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 60


1382:.\Generated_Source\PSoC4/PWM.c **** * Summary:
1383:.\Generated_Source\PSoC4/PWM.c **** *  Sets a software interrupt request.
1384:.\Generated_Source\PSoC4/PWM.c **** *
1385:.\Generated_Source\PSoC4/PWM.c **** * Parameters:
1386:.\Generated_Source\PSoC4/PWM.c **** *   interruptMask: Mask of interrupts to set
1387:.\Generated_Source\PSoC4/PWM.c **** *   Values:
1388:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_TC       - Terminal count mask
1389:.\Generated_Source\PSoC4/PWM.c **** *     - PWM_INTR_MASK_CC_MATCH - Compare count / capture mask
1390:.\Generated_Source\PSoC4/PWM.c **** *
1391:.\Generated_Source\PSoC4/PWM.c **** * Return:
1392:.\Generated_Source\PSoC4/PWM.c **** *  None
1393:.\Generated_Source\PSoC4/PWM.c **** *
1394:.\Generated_Source\PSoC4/PWM.c **** *******************************************************************************/
1395:.\Generated_Source\PSoC4/PWM.c **** void PWM_SetInterrupt(uint32 interruptMask)
1396:.\Generated_Source\PSoC4/PWM.c **** {
 1982              		.loc 1 1396 0
 1983              		.cfi_startproc
 1984 0000 80B5     		push	{r7, lr}
 1985              	.LCFI105:
 1986              		.cfi_def_cfa_offset 8
 1987              		.cfi_offset 7, -8
 1988              		.cfi_offset 14, -4
 1989 0002 82B0     		sub	sp, sp, #8
 1990              	.LCFI106:
 1991              		.cfi_def_cfa_offset 16
 1992 0004 00AF     		add	r7, sp, #0
 1993              	.LCFI107:
 1994              		.cfi_def_cfa_register 7
 1995 0006 7860     		str	r0, [r7, #4]
1397:.\Generated_Source\PSoC4/PWM.c ****     PWM_INTERRUPT_SET_REG = interruptMask;
 1996              		.loc 1 1397 0
 1997 0008 024B     		ldr	r3, .L130
 1998 000a 7A68     		ldr	r2, [r7, #4]
 1999 000c 1A60     		str	r2, [r3]
1398:.\Generated_Source\PSoC4/PWM.c **** }
 2000              		.loc 1 1398 0
 2001 000e BD46     		mov	sp, r7
 2002 0010 02B0     		add	sp, sp, #8
 2003              		@ sp needed for prologue
 2004 0012 80BD     		pop	{r7, pc}
 2005              	.L131:
 2006              		.align	2
 2007              	.L130:
 2008 0014 34010540 		.word	1074069812
 2009              		.cfi_endproc
 2010              	.LFE39:
 2011              		.size	PWM_SetInterrupt, .-PWM_SetInterrupt
 2012              		.text
 2013              	.Letext0:
 2014              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 2015              		.section	.debug_info,"",%progbits
 2016              	.Ldebug_info0:
 2017 0000 BA070000 		.4byte	0x7ba
 2018 0004 0200     		.2byte	0x2
 2019 0006 00000000 		.4byte	.Ldebug_abbrev0
 2020 000a 04       		.byte	0x4
 2021 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 61


 2022 000c D2020000 		.4byte	.LASF76
 2023 0010 01       		.byte	0x1
 2024 0011 D3000000 		.4byte	.LASF77
 2025 0015 B2030000 		.4byte	.LASF78
 2026 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2027 001d 00000000 		.4byte	0
 2028 0021 00000000 		.4byte	0
 2029 0025 00000000 		.4byte	.Ldebug_line0
 2030 0029 02       		.uleb128 0x2
 2031 002a 01       		.byte	0x1
 2032 002b 06       		.byte	0x6
 2033 002c 8B000000 		.4byte	.LASF0
 2034 0030 02       		.uleb128 0x2
 2035 0031 01       		.byte	0x1
 2036 0032 08       		.byte	0x8
 2037 0033 1B030000 		.4byte	.LASF1
 2038 0037 02       		.uleb128 0x2
 2039 0038 02       		.byte	0x2
 2040 0039 05       		.byte	0x5
 2041 003a 52030000 		.4byte	.LASF2
 2042 003e 02       		.uleb128 0x2
 2043 003f 02       		.byte	0x2
 2044 0040 07       		.byte	0x7
 2045 0041 DC010000 		.4byte	.LASF3
 2046 0045 02       		.uleb128 0x2
 2047 0046 04       		.byte	0x4
 2048 0047 05       		.byte	0x5
 2049 0048 F2000000 		.4byte	.LASF4
 2050 004c 02       		.uleb128 0x2
 2051 004d 04       		.byte	0x4
 2052 004e 07       		.byte	0x7
 2053 004f C1010000 		.4byte	.LASF5
 2054 0053 02       		.uleb128 0x2
 2055 0054 08       		.byte	0x8
 2056 0055 05       		.byte	0x5
 2057 0056 7D000000 		.4byte	.LASF6
 2058 005a 02       		.uleb128 0x2
 2059 005b 08       		.byte	0x8
 2060 005c 07       		.byte	0x7
 2061 005d 2B000000 		.4byte	.LASF7
 2062 0061 03       		.uleb128 0x3
 2063 0062 04       		.byte	0x4
 2064 0063 05       		.byte	0x5
 2065 0064 696E7400 		.ascii	"int\000"
 2066 0068 02       		.uleb128 0x2
 2067 0069 04       		.byte	0x4
 2068 006a 07       		.byte	0x7
 2069 006b 99010000 		.4byte	.LASF8
 2070 006f 04       		.uleb128 0x4
 2071 0070 FB000000 		.4byte	.LASF9
 2072 0074 02       		.byte	0x2
 2073 0075 5B       		.byte	0x5b
 2074 0076 30000000 		.4byte	0x30
 2075 007a 04       		.uleb128 0x4
 2076 007b 48010000 		.4byte	.LASF10
 2077 007f 02       		.byte	0x2
 2078 0080 5D       		.byte	0x5d
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 62


 2079 0081 4C000000 		.4byte	0x4c
 2080 0085 02       		.uleb128 0x2
 2081 0086 04       		.byte	0x4
 2082 0087 04       		.byte	0x4
 2083 0088 A0020000 		.4byte	.LASF11
 2084 008c 02       		.uleb128 0x2
 2085 008d 08       		.byte	0x8
 2086 008e 04       		.byte	0x4
 2087 008f 01010000 		.4byte	.LASF12
 2088 0093 02       		.uleb128 0x2
 2089 0094 01       		.byte	0x1
 2090 0095 08       		.byte	0x8
 2091 0096 A8030000 		.4byte	.LASF13
 2092 009a 04       		.uleb128 0x4
 2093 009b 3E020000 		.4byte	.LASF14
 2094 009f 02       		.byte	0x2
 2095 00a0 F2       		.byte	0xf2
 2096 00a1 A5000000 		.4byte	0xa5
 2097 00a5 05       		.uleb128 0x5
 2098 00a6 7A000000 		.4byte	0x7a
 2099 00aa 02       		.uleb128 0x2
 2100 00ab 04       		.byte	0x4
 2101 00ac 07       		.byte	0x7
 2102 00ad 5F020000 		.4byte	.LASF15
 2103 00b1 06       		.uleb128 0x6
 2104 00b2 01       		.byte	0x1
 2105 00b3 29030000 		.4byte	.LASF16
 2106 00b7 01       		.byte	0x1
 2107 00b8 27       		.byte	0x27
 2108 00b9 01       		.byte	0x1
 2109 00ba 00000000 		.4byte	.LFB0
 2110 00be 64000000 		.4byte	.LFE0
 2111 00c2 00000000 		.4byte	.LLST0
 2112 00c6 01       		.byte	0x1
 2113 00c7 07       		.uleb128 0x7
 2114 00c8 01       		.byte	0x1
 2115 00c9 06000000 		.4byte	.LASF18
 2116 00cd 01       		.byte	0x1
 2117 00ce C8       		.byte	0xc8
 2118 00cf 01       		.byte	0x1
 2119 00d0 00000000 		.4byte	.LFB1
 2120 00d4 30000000 		.4byte	.LFE1
 2121 00d8 2C000000 		.4byte	.LLST1
 2122 00dc 01       		.byte	0x1
 2123 00dd F0000000 		.4byte	0xf0
 2124 00e1 08       		.uleb128 0x8
 2125 00e2 66040000 		.4byte	.LASF20
 2126 00e6 01       		.byte	0x1
 2127 00e7 CA       		.byte	0xca
 2128 00e8 6F000000 		.4byte	0x6f
 2129 00ec 02       		.byte	0x2
 2130 00ed 91       		.byte	0x91
 2131 00ee 6F       		.sleb128 -17
 2132 00ef 00       		.byte	0
 2133 00f0 06       		.uleb128 0x6
 2134 00f1 01       		.byte	0x1
 2135 00f2 00020000 		.4byte	.LASF17
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 63


 2136 00f6 01       		.byte	0x1
 2137 00f7 F7       		.byte	0xf7
 2138 00f8 01       		.byte	0x1
 2139 00f9 00000000 		.4byte	.LFB2
 2140 00fd 24000000 		.4byte	.LFE2
 2141 0101 64000000 		.4byte	.LLST2
 2142 0105 01       		.byte	0x1
 2143 0106 09       		.uleb128 0x9
 2144 0107 01       		.byte	0x1
 2145 0108 2E010000 		.4byte	.LASF19
 2146 010c 01       		.byte	0x1
 2147 010d 1101     		.2byte	0x111
 2148 010f 01       		.byte	0x1
 2149 0110 00000000 		.4byte	.LFB3
 2150 0114 30000000 		.4byte	.LFE3
 2151 0118 90000000 		.4byte	.LLST3
 2152 011c 01       		.byte	0x1
 2153 011d 31010000 		.4byte	0x131
 2154 0121 0A       		.uleb128 0xa
 2155 0122 66040000 		.4byte	.LASF20
 2156 0126 01       		.byte	0x1
 2157 0127 1301     		.2byte	0x113
 2158 0129 6F000000 		.4byte	0x6f
 2159 012d 02       		.byte	0x2
 2160 012e 91       		.byte	0x91
 2161 012f 6F       		.sleb128 -17
 2162 0130 00       		.byte	0
 2163 0131 09       		.uleb128 0x9
 2164 0132 01       		.byte	0x1
 2165 0133 96040000 		.4byte	.LASF21
 2166 0137 01       		.byte	0x1
 2167 0138 3601     		.2byte	0x136
 2168 013a 01       		.byte	0x1
 2169 013b 00000000 		.4byte	.LFB4
 2170 013f 48000000 		.4byte	.LFE4
 2171 0143 C8000000 		.4byte	.LLST4
 2172 0147 01       		.byte	0x1
 2173 0148 6B010000 		.4byte	0x16b
 2174 014c 0B       		.uleb128 0xb
 2175 014d AD030000 		.4byte	.LASF23
 2176 0151 01       		.byte	0x1
 2177 0152 3601     		.2byte	0x136
 2178 0154 7A000000 		.4byte	0x7a
 2179 0158 02       		.byte	0x2
 2180 0159 91       		.byte	0x91
 2181 015a 64       		.sleb128 -28
 2182 015b 0A       		.uleb128 0xa
 2183 015c 66040000 		.4byte	.LASF20
 2184 0160 01       		.byte	0x1
 2185 0161 3801     		.2byte	0x138
 2186 0163 6F000000 		.4byte	0x6f
 2187 0167 02       		.byte	0x2
 2188 0168 91       		.byte	0x91
 2189 0169 6F       		.sleb128 -17
 2190 016a 00       		.byte	0
 2191 016b 09       		.uleb128 0x9
 2192 016c 01       		.byte	0x1
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 64


 2193 016d 9A030000 		.4byte	.LASF22
 2194 0171 01       		.byte	0x1
 2195 0172 5701     		.2byte	0x157
 2196 0174 01       		.byte	0x1
 2197 0175 00000000 		.4byte	.LFB5
 2198 0179 48000000 		.4byte	.LFE5
 2199 017d 00010000 		.4byte	.LLST5
 2200 0181 01       		.byte	0x1
 2201 0182 A5010000 		.4byte	0x1a5
 2202 0186 0B       		.uleb128 0xb
 2203 0187 55000000 		.4byte	.LASF24
 2204 018b 01       		.byte	0x1
 2205 018c 5701     		.2byte	0x157
 2206 018e 7A000000 		.4byte	0x7a
 2207 0192 02       		.byte	0x2
 2208 0193 91       		.byte	0x91
 2209 0194 64       		.sleb128 -28
 2210 0195 0A       		.uleb128 0xa
 2211 0196 66040000 		.4byte	.LASF20
 2212 019a 01       		.byte	0x1
 2213 019b 5901     		.2byte	0x159
 2214 019d 6F000000 		.4byte	0x6f
 2215 01a1 02       		.byte	0x2
 2216 01a2 91       		.byte	0x91
 2217 01a3 6F       		.sleb128 -17
 2218 01a4 00       		.byte	0
 2219 01a5 09       		.uleb128 0x9
 2220 01a6 01       		.byte	0x1
 2221 01a7 EF010000 		.4byte	.LASF25
 2222 01ab 01       		.byte	0x1
 2223 01ac 7C01     		.2byte	0x17c
 2224 01ae 01       		.byte	0x1
 2225 01af 00000000 		.4byte	.LFB6
 2226 01b3 48000000 		.4byte	.LFE6
 2227 01b7 38010000 		.4byte	.LLST6
 2228 01bb 01       		.byte	0x1
 2229 01bc DF010000 		.4byte	0x1df
 2230 01c0 0B       		.uleb128 0xb
 2231 01c1 A6020000 		.4byte	.LASF26
 2232 01c5 01       		.byte	0x1
 2233 01c6 7C01     		.2byte	0x17c
 2234 01c8 7A000000 		.4byte	0x7a
 2235 01cc 02       		.byte	0x2
 2236 01cd 91       		.byte	0x91
 2237 01ce 64       		.sleb128 -28
 2238 01cf 0A       		.uleb128 0xa
 2239 01d0 66040000 		.4byte	.LASF20
 2240 01d4 01       		.byte	0x1
 2241 01d5 7E01     		.2byte	0x17e
 2242 01d7 6F000000 		.4byte	0x6f
 2243 01db 02       		.byte	0x2
 2244 01dc 91       		.byte	0x91
 2245 01dd 6F       		.sleb128 -17
 2246 01de 00       		.byte	0
 2247 01df 09       		.uleb128 0x9
 2248 01e0 01       		.byte	0x1
 2249 01e1 7F020000 		.4byte	.LASF27
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 65


 2250 01e5 01       		.byte	0x1
 2251 01e6 9C01     		.2byte	0x19c
 2252 01e8 01       		.byte	0x1
 2253 01e9 00000000 		.4byte	.LFB7
 2254 01ed 4C000000 		.4byte	.LFE7
 2255 01f1 70010000 		.4byte	.LLST7
 2256 01f5 01       		.byte	0x1
 2257 01f6 19020000 		.4byte	0x219
 2258 01fa 0B       		.uleb128 0xb
 2259 01fb 88040000 		.4byte	.LASF28
 2260 01ff 01       		.byte	0x1
 2261 0200 9C01     		.2byte	0x19c
 2262 0202 7A000000 		.4byte	0x7a
 2263 0206 02       		.byte	0x2
 2264 0207 91       		.byte	0x91
 2265 0208 64       		.sleb128 -28
 2266 0209 0A       		.uleb128 0xa
 2267 020a 66040000 		.4byte	.LASF20
 2268 020e 01       		.byte	0x1
 2269 020f 9E01     		.2byte	0x19e
 2270 0211 6F000000 		.4byte	0x6f
 2271 0215 02       		.byte	0x2
 2272 0216 91       		.byte	0x91
 2273 0217 6F       		.sleb128 -17
 2274 0218 00       		.byte	0
 2275 0219 0C       		.uleb128 0xc
 2276 021a 01       		.byte	0x1
 2277 021b 43030000 		.4byte	.LASF29
 2278 021f 01       		.byte	0x1
 2279 0220 D201     		.2byte	0x1d2
 2280 0222 01       		.byte	0x1
 2281 0223 00000000 		.4byte	.LFB8
 2282 0227 1C000000 		.4byte	.LFE8
 2283 022b A8010000 		.4byte	.LLST8
 2284 022f 01       		.byte	0x1
 2285 0230 44020000 		.4byte	0x244
 2286 0234 0B       		.uleb128 0xb
 2287 0235 D3010000 		.4byte	.LASF30
 2288 0239 01       		.byte	0x1
 2289 023a D201     		.2byte	0x1d2
 2290 023c 7A000000 		.4byte	0x7a
 2291 0240 02       		.byte	0x2
 2292 0241 91       		.byte	0x91
 2293 0242 74       		.sleb128 -12
 2294 0243 00       		.byte	0
 2295 0244 09       		.uleb128 0x9
 2296 0245 01       		.byte	0x1
 2297 0246 11000000 		.4byte	.LASF31
 2298 024a 01       		.byte	0x1
 2299 024b F601     		.2byte	0x1f6
 2300 024d 01       		.byte	0x1
 2301 024e 00000000 		.4byte	.LFB9
 2302 0252 48000000 		.4byte	.LFE9
 2303 0256 E0010000 		.4byte	.LLST9
 2304 025a 01       		.byte	0x1
 2305 025b 7E020000 		.4byte	0x27e
 2306 025f 0B       		.uleb128 0xb
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 66


 2307 0260 68020000 		.4byte	.LASF32
 2308 0264 01       		.byte	0x1
 2309 0265 F601     		.2byte	0x1f6
 2310 0267 7A000000 		.4byte	0x7a
 2311 026b 02       		.byte	0x2
 2312 026c 91       		.byte	0x91
 2313 026d 64       		.sleb128 -28
 2314 026e 0A       		.uleb128 0xa
 2315 026f 66040000 		.4byte	.LASF20
 2316 0273 01       		.byte	0x1
 2317 0274 F801     		.2byte	0x1f8
 2318 0276 6F000000 		.4byte	0x6f
 2319 027a 02       		.byte	0x2
 2320 027b 91       		.byte	0x91
 2321 027c 6F       		.sleb128 -17
 2322 027d 00       		.byte	0
 2323 027e 09       		.uleb128 0x9
 2324 027f 01       		.byte	0x1
 2325 0280 A2040000 		.4byte	.LASF33
 2326 0284 01       		.byte	0x1
 2327 0285 1802     		.2byte	0x218
 2328 0287 01       		.byte	0x1
 2329 0288 00000000 		.4byte	.LFB10
 2330 028c 48000000 		.4byte	.LFE10
 2331 0290 18020000 		.4byte	.LLST10
 2332 0294 01       		.byte	0x1
 2333 0295 B8020000 		.4byte	0x2b8
 2334 0299 0B       		.uleb128 0xb
 2335 029a 32030000 		.4byte	.LASF34
 2336 029e 01       		.byte	0x1
 2337 029f 1802     		.2byte	0x218
 2338 02a1 7A000000 		.4byte	0x7a
 2339 02a5 02       		.byte	0x2
 2340 02a6 91       		.byte	0x91
 2341 02a7 64       		.sleb128 -28
 2342 02a8 0A       		.uleb128 0xa
 2343 02a9 66040000 		.4byte	.LASF20
 2344 02ad 01       		.byte	0x1
 2345 02ae 1A02     		.2byte	0x21a
 2346 02b0 6F000000 		.4byte	0x6f
 2347 02b4 02       		.byte	0x2
 2348 02b5 91       		.byte	0x91
 2349 02b6 6F       		.sleb128 -17
 2350 02b7 00       		.byte	0
 2351 02b8 09       		.uleb128 0x9
 2352 02b9 01       		.byte	0x1
 2353 02ba A6010000 		.4byte	.LASF35
 2354 02be 01       		.byte	0x1
 2355 02bf 3902     		.2byte	0x239
 2356 02c1 01       		.byte	0x1
 2357 02c2 00000000 		.4byte	.LFB11
 2358 02c6 4C000000 		.4byte	.LFE11
 2359 02ca 50020000 		.4byte	.LLST11
 2360 02ce 01       		.byte	0x1
 2361 02cf F2020000 		.4byte	0x2f2
 2362 02d3 0B       		.uleb128 0xb
 2363 02d4 80010000 		.4byte	.LASF36
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 67


 2364 02d8 01       		.byte	0x1
 2365 02d9 3902     		.2byte	0x239
 2366 02db 7A000000 		.4byte	0x7a
 2367 02df 02       		.byte	0x2
 2368 02e0 91       		.byte	0x91
 2369 02e1 64       		.sleb128 -28
 2370 02e2 0A       		.uleb128 0xa
 2371 02e3 66040000 		.4byte	.LASF20
 2372 02e7 01       		.byte	0x1
 2373 02e8 3B02     		.2byte	0x23b
 2374 02ea 6F000000 		.4byte	0x6f
 2375 02ee 02       		.byte	0x2
 2376 02ef 91       		.byte	0x91
 2377 02f0 6F       		.sleb128 -17
 2378 02f1 00       		.byte	0
 2379 02f2 09       		.uleb128 0x9
 2380 02f3 01       		.byte	0x1
 2381 02f4 37010000 		.4byte	.LASF37
 2382 02f8 01       		.byte	0x1
 2383 02f9 5A02     		.2byte	0x25a
 2384 02fb 01       		.byte	0x1
 2385 02fc 00000000 		.4byte	.LFB12
 2386 0300 48000000 		.4byte	.LFE12
 2387 0304 88020000 		.4byte	.LLST12
 2388 0308 01       		.byte	0x1
 2389 0309 2C030000 		.4byte	0x32c
 2390 030d 0B       		.uleb128 0xb
 2391 030e 6C010000 		.4byte	.LASF38
 2392 0312 01       		.byte	0x1
 2393 0313 5A02     		.2byte	0x25a
 2394 0315 7A000000 		.4byte	0x7a
 2395 0319 02       		.byte	0x2
 2396 031a 91       		.byte	0x91
 2397 031b 64       		.sleb128 -28
 2398 031c 0A       		.uleb128 0xa
 2399 031d 66040000 		.4byte	.LASF20
 2400 0321 01       		.byte	0x1
 2401 0322 5C02     		.2byte	0x25c
 2402 0324 6F000000 		.4byte	0x6f
 2403 0328 02       		.byte	0x2
 2404 0329 91       		.byte	0x91
 2405 032a 6F       		.sleb128 -17
 2406 032b 00       		.byte	0
 2407 032c 0C       		.uleb128 0xc
 2408 032d 01       		.byte	0x1
 2409 032e 5C000000 		.4byte	.LASF39
 2410 0332 01       		.byte	0x1
 2411 0333 7802     		.2byte	0x278
 2412 0335 01       		.byte	0x1
 2413 0336 00000000 		.4byte	.LFB13
 2414 033a 1C000000 		.4byte	.LFE13
 2415 033e C0020000 		.4byte	.LLST13
 2416 0342 01       		.byte	0x1
 2417 0343 57030000 		.4byte	0x357
 2418 0347 0B       		.uleb128 0xb
 2419 0348 00000000 		.4byte	.LASF40
 2420 034c 01       		.byte	0x1
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 68


 2421 034d 7802     		.2byte	0x278
 2422 034f 7A000000 		.4byte	0x7a
 2423 0353 02       		.byte	0x2
 2424 0354 91       		.byte	0x91
 2425 0355 74       		.sleb128 -12
 2426 0356 00       		.byte	0
 2427 0357 0D       		.uleb128 0xd
 2428 0358 01       		.byte	0x1
 2429 0359 6D000000 		.4byte	.LASF45
 2430 035d 01       		.byte	0x1
 2431 035e 8C02     		.2byte	0x28c
 2432 0360 01       		.byte	0x1
 2433 0361 7A000000 		.4byte	0x7a
 2434 0365 00000000 		.4byte	.LFB14
 2435 0369 18000000 		.4byte	.LFE14
 2436 036d F8020000 		.4byte	.LLST14
 2437 0371 01       		.byte	0x1
 2438 0372 09       		.uleb128 0x9
 2439 0373 01       		.byte	0x1
 2440 0374 D9040000 		.4byte	.LASF41
 2441 0378 01       		.byte	0x1
 2442 0379 A902     		.2byte	0x2a9
 2443 037b 01       		.byte	0x1
 2444 037c 00000000 		.4byte	.LFB15
 2445 0380 48000000 		.4byte	.LFE15
 2446 0384 24030000 		.4byte	.LLST15
 2447 0388 01       		.byte	0x1
 2448 0389 AC030000 		.4byte	0x3ac
 2449 038d 0B       		.uleb128 0xb
 2450 038e 21040000 		.4byte	.LASF42
 2451 0392 01       		.byte	0x1
 2452 0393 A902     		.2byte	0x2a9
 2453 0395 7A000000 		.4byte	0x7a
 2454 0399 02       		.byte	0x2
 2455 039a 91       		.byte	0x91
 2456 039b 64       		.sleb128 -28
 2457 039c 0A       		.uleb128 0xa
 2458 039d 66040000 		.4byte	.LASF20
 2459 03a1 01       		.byte	0x1
 2460 03a2 AB02     		.2byte	0x2ab
 2461 03a4 6F000000 		.4byte	0x6f
 2462 03a8 02       		.byte	0x2
 2463 03a9 91       		.byte	0x91
 2464 03aa 6F       		.sleb128 -17
 2465 03ab 00       		.byte	0
 2466 03ac 0C       		.uleb128 0xc
 2467 03ad 01       		.byte	0x1
 2468 03ae 2E020000 		.4byte	.LASF43
 2469 03b2 01       		.byte	0x1
 2470 03b3 C602     		.2byte	0x2c6
 2471 03b5 01       		.byte	0x1
 2472 03b6 00000000 		.4byte	.LFB16
 2473 03ba 1C000000 		.4byte	.LFE16
 2474 03be 5C030000 		.4byte	.LLST16
 2475 03c2 01       		.byte	0x1
 2476 03c3 D7030000 		.4byte	0x3d7
 2477 03c7 0B       		.uleb128 0xb
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 69


 2478 03c8 24000000 		.4byte	.LASF44
 2479 03cc 01       		.byte	0x1
 2480 03cd C602     		.2byte	0x2c6
 2481 03cf 7A000000 		.4byte	0x7a
 2482 03d3 02       		.byte	0x2
 2483 03d4 91       		.byte	0x91
 2484 03d5 74       		.sleb128 -12
 2485 03d6 00       		.byte	0
 2486 03d7 0D       		.uleb128 0xd
 2487 03d8 01       		.byte	0x1
 2488 03d9 50020000 		.4byte	.LASF46
 2489 03dd 01       		.byte	0x1
 2490 03de DA02     		.2byte	0x2da
 2491 03e0 01       		.byte	0x1
 2492 03e1 7A000000 		.4byte	0x7a
 2493 03e5 00000000 		.4byte	.LFB17
 2494 03e9 18000000 		.4byte	.LFE17
 2495 03ed 94030000 		.4byte	.LLST17
 2496 03f1 01       		.byte	0x1
 2497 03f2 09       		.uleb128 0x9
 2498 03f3 01       		.byte	0x1
 2499 03f4 1B010000 		.4byte	.LASF47
 2500 03f8 01       		.byte	0x1
 2501 03f9 F402     		.2byte	0x2f4
 2502 03fb 01       		.byte	0x1
 2503 03fc 00000000 		.4byte	.LFB18
 2504 0400 48000000 		.4byte	.LFE18
 2505 0404 C0030000 		.4byte	.LLST18
 2506 0408 01       		.byte	0x1
 2507 0409 2C040000 		.4byte	0x42c
 2508 040d 0B       		.uleb128 0xb
 2509 040e B7040000 		.4byte	.LASF48
 2510 0412 01       		.byte	0x1
 2511 0413 F402     		.2byte	0x2f4
 2512 0415 7A000000 		.4byte	0x7a
 2513 0419 02       		.byte	0x2
 2514 041a 91       		.byte	0x91
 2515 041b 64       		.sleb128 -28
 2516 041c 0A       		.uleb128 0xa
 2517 041d 66040000 		.4byte	.LASF20
 2518 0421 01       		.byte	0x1
 2519 0422 F602     		.2byte	0x2f6
 2520 0424 6F000000 		.4byte	0x6f
 2521 0428 02       		.byte	0x2
 2522 0429 91       		.byte	0x91
 2523 042a 6F       		.sleb128 -17
 2524 042b 00       		.byte	0
 2525 042c 0C       		.uleb128 0xc
 2526 042d 01       		.byte	0x1
 2527 042e 87030000 		.4byte	.LASF49
 2528 0432 01       		.byte	0x1
 2529 0433 0F03     		.2byte	0x30f
 2530 0435 01       		.byte	0x1
 2531 0436 00000000 		.4byte	.LFB19
 2532 043a 1C000000 		.4byte	.LFE19
 2533 043e F8030000 		.4byte	.LLST19
 2534 0442 01       		.byte	0x1
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 70


 2535 0443 57040000 		.4byte	0x457
 2536 0447 0B       		.uleb128 0xb
 2537 0448 49040000 		.4byte	.LASF50
 2538 044c 01       		.byte	0x1
 2539 044d 0F03     		.2byte	0x30f
 2540 044f 7A000000 		.4byte	0x7a
 2541 0453 02       		.byte	0x2
 2542 0454 91       		.byte	0x91
 2543 0455 74       		.sleb128 -12
 2544 0456 00       		.byte	0
 2545 0457 0D       		.uleb128 0xd
 2546 0458 01       		.byte	0x1
 2547 0459 8E020000 		.4byte	.LASF51
 2548 045d 01       		.byte	0x1
 2549 045e 2303     		.2byte	0x323
 2550 0460 01       		.byte	0x1
 2551 0461 7A000000 		.4byte	0x7a
 2552 0465 00000000 		.4byte	.LFB20
 2553 0469 18000000 		.4byte	.LFE20
 2554 046d 30040000 		.4byte	.LLST20
 2555 0471 01       		.byte	0x1
 2556 0472 09       		.uleb128 0x9
 2557 0473 01       		.byte	0x1
 2558 0474 C0020000 		.4byte	.LASF52
 2559 0478 01       		.byte	0x1
 2560 0479 3D03     		.2byte	0x33d
 2561 047b 01       		.byte	0x1
 2562 047c 00000000 		.4byte	.LFB21
 2563 0480 48000000 		.4byte	.LFE21
 2564 0484 5C040000 		.4byte	.LLST21
 2565 0488 01       		.byte	0x1
 2566 0489 AC040000 		.4byte	0x4ac
 2567 048d 0B       		.uleb128 0xb
 2568 048e B7040000 		.4byte	.LASF48
 2569 0492 01       		.byte	0x1
 2570 0493 3D03     		.2byte	0x33d
 2571 0495 7A000000 		.4byte	0x7a
 2572 0499 02       		.byte	0x2
 2573 049a 91       		.byte	0x91
 2574 049b 64       		.sleb128 -28
 2575 049c 0A       		.uleb128 0xa
 2576 049d 66040000 		.4byte	.LASF20
 2577 04a1 01       		.byte	0x1
 2578 04a2 3F03     		.2byte	0x33f
 2579 04a4 6F000000 		.4byte	0x6f
 2580 04a8 02       		.byte	0x2
 2581 04a9 91       		.byte	0x91
 2582 04aa 6F       		.sleb128 -17
 2583 04ab 00       		.byte	0
 2584 04ac 0C       		.uleb128 0xc
 2585 04ad 01       		.byte	0x1
 2586 04ae 1D020000 		.4byte	.LASF53
 2587 04b2 01       		.byte	0x1
 2588 04b3 5A03     		.2byte	0x35a
 2589 04b5 01       		.byte	0x1
 2590 04b6 00000000 		.4byte	.LFB22
 2591 04ba 1C000000 		.4byte	.LFE22
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 71


 2592 04be 94040000 		.4byte	.LLST22
 2593 04c2 01       		.byte	0x1
 2594 04c3 D7040000 		.4byte	0x4d7
 2595 04c7 0B       		.uleb128 0xb
 2596 04c8 77020000 		.4byte	.LASF54
 2597 04cc 01       		.byte	0x1
 2598 04cd 5A03     		.2byte	0x35a
 2599 04cf 7A000000 		.4byte	0x7a
 2600 04d3 02       		.byte	0x2
 2601 04d4 91       		.byte	0x91
 2602 04d5 74       		.sleb128 -12
 2603 04d6 00       		.byte	0
 2604 04d7 0D       		.uleb128 0xd
 2605 04d8 01       		.byte	0x1
 2606 04d9 EC040000 		.4byte	.LASF55
 2607 04dd 01       		.byte	0x1
 2608 04de 8403     		.2byte	0x384
 2609 04e0 01       		.byte	0x1
 2610 04e1 7A000000 		.4byte	0x7a
 2611 04e5 00000000 		.4byte	.LFB23
 2612 04e9 18000000 		.4byte	.LFE23
 2613 04ed CC040000 		.4byte	.LLST23
 2614 04f1 01       		.byte	0x1
 2615 04f2 0C       		.uleb128 0xc
 2616 04f3 01       		.byte	0x1
 2617 04f4 97000000 		.4byte	.LASF56
 2618 04f8 01       		.byte	0x1
 2619 04f9 B003     		.2byte	0x3b0
 2620 04fb 01       		.byte	0x1
 2621 04fc 00000000 		.4byte	.LFB24
 2622 0500 1C000000 		.4byte	.LFE24
 2623 0504 F8040000 		.4byte	.LLST24
 2624 0508 01       		.byte	0x1
 2625 0509 1D050000 		.4byte	0x51d
 2626 050d 0B       		.uleb128 0xb
 2627 050e 3E040000 		.4byte	.LASF57
 2628 0512 01       		.byte	0x1
 2629 0513 B003     		.2byte	0x3b0
 2630 0515 7A000000 		.4byte	0x7a
 2631 0519 02       		.byte	0x2
 2632 051a 91       		.byte	0x91
 2633 051b 74       		.sleb128 -12
 2634 051c 00       		.byte	0
 2635 051d 0D       		.uleb128 0xd
 2636 051e 01       		.byte	0x1
 2637 051f 08010000 		.4byte	.LASF58
 2638 0523 01       		.byte	0x1
 2639 0524 DA03     		.2byte	0x3da
 2640 0526 01       		.byte	0x1
 2641 0527 7A000000 		.4byte	0x7a
 2642 052b 00000000 		.4byte	.LFB25
 2643 052f 18000000 		.4byte	.LFE25
 2644 0533 30050000 		.4byte	.LLST25
 2645 0537 01       		.byte	0x1
 2646 0538 0D       		.uleb128 0xd
 2647 0539 01       		.byte	0x1
 2648 053a B0020000 		.4byte	.LASF59
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 72


 2649 053e 01       		.byte	0x1
 2650 053f 0604     		.2byte	0x406
 2651 0541 01       		.byte	0x1
 2652 0542 7A000000 		.4byte	0x7a
 2653 0546 00000000 		.4byte	.LFB26
 2654 054a 18000000 		.4byte	.LFE26
 2655 054e 5C050000 		.4byte	.LLST26
 2656 0552 01       		.byte	0x1
 2657 0553 0D       		.uleb128 0xd
 2658 0554 01       		.byte	0x1
 2659 0555 53040000 		.4byte	.LASF60
 2660 0559 01       		.byte	0x1
 2661 055a 1B04     		.2byte	0x41b
 2662 055c 01       		.byte	0x1
 2663 055d 7A000000 		.4byte	0x7a
 2664 0561 00000000 		.4byte	.LFB27
 2665 0565 18000000 		.4byte	.LFE27
 2666 0569 88050000 		.4byte	.LLST27
 2667 056d 01       		.byte	0x1
 2668 056e 09       		.uleb128 0x9
 2669 056f 01       		.byte	0x1
 2670 0570 42000000 		.4byte	.LASF61
 2671 0574 01       		.byte	0x1
 2672 0575 3604     		.2byte	0x436
 2673 0577 01       		.byte	0x1
 2674 0578 00000000 		.4byte	.LFB28
 2675 057c 44000000 		.4byte	.LFE28
 2676 0580 B4050000 		.4byte	.LLST28
 2677 0584 01       		.byte	0x1
 2678 0585 A8050000 		.4byte	0x5a8
 2679 0589 0B       		.uleb128 0xb
 2680 058a 60010000 		.4byte	.LASF62
 2681 058e 01       		.byte	0x1
 2682 058f 3604     		.2byte	0x436
 2683 0591 7A000000 		.4byte	0x7a
 2684 0595 02       		.byte	0x2
 2685 0596 91       		.byte	0x91
 2686 0597 64       		.sleb128 -28
 2687 0598 0A       		.uleb128 0xa
 2688 0599 66040000 		.4byte	.LASF20
 2689 059d 01       		.byte	0x1
 2690 059e 3804     		.2byte	0x438
 2691 05a0 6F000000 		.4byte	0x6f
 2692 05a4 02       		.byte	0x2
 2693 05a5 91       		.byte	0x91
 2694 05a6 6F       		.sleb128 -17
 2695 05a7 00       		.byte	0
 2696 05a8 09       		.uleb128 0x9
 2697 05a9 01       		.byte	0x1
 2698 05aa 0F040000 		.4byte	.LASF63
 2699 05ae 01       		.byte	0x1
 2700 05af 5704     		.2byte	0x457
 2701 05b1 01       		.byte	0x1
 2702 05b2 00000000 		.4byte	.LFB29
 2703 05b6 44000000 		.4byte	.LFE29
 2704 05ba EC050000 		.4byte	.LLST29
 2705 05be 01       		.byte	0x1
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 73


 2706 05bf E2050000 		.4byte	0x5e2
 2707 05c3 0B       		.uleb128 0xb
 2708 05c4 60010000 		.4byte	.LASF62
 2709 05c8 01       		.byte	0x1
 2710 05c9 5704     		.2byte	0x457
 2711 05cb 7A000000 		.4byte	0x7a
 2712 05cf 02       		.byte	0x2
 2713 05d0 91       		.byte	0x91
 2714 05d1 64       		.sleb128 -28
 2715 05d2 0A       		.uleb128 0xa
 2716 05d3 66040000 		.4byte	.LASF20
 2717 05d7 01       		.byte	0x1
 2718 05d8 5904     		.2byte	0x459
 2719 05da 6F000000 		.4byte	0x6f
 2720 05de 02       		.byte	0x2
 2721 05df 91       		.byte	0x91
 2722 05e0 6F       		.sleb128 -17
 2723 05e1 00       		.byte	0
 2724 05e2 09       		.uleb128 0x9
 2725 05e3 01       		.byte	0x1
 2726 05e4 4F010000 		.4byte	.LASF64
 2727 05e8 01       		.byte	0x1
 2728 05e9 7804     		.2byte	0x478
 2729 05eb 01       		.byte	0x1
 2730 05ec 00000000 		.4byte	.LFB30
 2731 05f0 48000000 		.4byte	.LFE30
 2732 05f4 24060000 		.4byte	.LLST30
 2733 05f8 01       		.byte	0x1
 2734 05f9 1C060000 		.4byte	0x61c
 2735 05fd 0B       		.uleb128 0xb
 2736 05fe 60010000 		.4byte	.LASF62
 2737 0602 01       		.byte	0x1
 2738 0603 7804     		.2byte	0x478
 2739 0605 7A000000 		.4byte	0x7a
 2740 0609 02       		.byte	0x2
 2741 060a 91       		.byte	0x91
 2742 060b 64       		.sleb128 -28
 2743 060c 0A       		.uleb128 0xa
 2744 060d 66040000 		.4byte	.LASF20
 2745 0611 01       		.byte	0x1
 2746 0612 7A04     		.2byte	0x47a
 2747 0614 6F000000 		.4byte	0x6f
 2748 0618 02       		.byte	0x2
 2749 0619 91       		.byte	0x91
 2750 061a 6F       		.sleb128 -17
 2751 061b 00       		.byte	0
 2752 061c 09       		.uleb128 0x9
 2753 061d 01       		.byte	0x1
 2754 061e 89010000 		.4byte	.LASF65
 2755 0622 01       		.byte	0x1
 2756 0623 9804     		.2byte	0x498
 2757 0625 01       		.byte	0x1
 2758 0626 00000000 		.4byte	.LFB31
 2759 062a 44000000 		.4byte	.LFE31
 2760 062e 5C060000 		.4byte	.LLST31
 2761 0632 01       		.byte	0x1
 2762 0633 56060000 		.4byte	0x656
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 74


 2763 0637 0B       		.uleb128 0xb
 2764 0638 60010000 		.4byte	.LASF62
 2765 063c 01       		.byte	0x1
 2766 063d 9804     		.2byte	0x498
 2767 063f 7A000000 		.4byte	0x7a
 2768 0643 02       		.byte	0x2
 2769 0644 91       		.byte	0x91
 2770 0645 64       		.sleb128 -28
 2771 0646 0A       		.uleb128 0xa
 2772 0647 66040000 		.4byte	.LASF20
 2773 064b 01       		.byte	0x1
 2774 064c 9A04     		.2byte	0x49a
 2775 064e 6F000000 		.4byte	0x6f
 2776 0652 02       		.byte	0x2
 2777 0653 91       		.byte	0x91
 2778 0654 6F       		.sleb128 -17
 2779 0655 00       		.byte	0
 2780 0656 09       		.uleb128 0x9
 2781 0657 01       		.byte	0x1
 2782 0658 77040000 		.4byte	.LASF66
 2783 065c 01       		.byte	0x1
 2784 065d B904     		.2byte	0x4b9
 2785 065f 01       		.byte	0x1
 2786 0660 00000000 		.4byte	.LFB32
 2787 0664 44000000 		.4byte	.LFE32
 2788 0668 94060000 		.4byte	.LLST32
 2789 066c 01       		.byte	0x1
 2790 066d 90060000 		.4byte	0x690
 2791 0671 0B       		.uleb128 0xb
 2792 0672 60010000 		.4byte	.LASF62
 2793 0676 01       		.byte	0x1
 2794 0677 B904     		.2byte	0x4b9
 2795 0679 7A000000 		.4byte	0x7a
 2796 067d 02       		.byte	0x2
 2797 067e 91       		.byte	0x91
 2798 067f 64       		.sleb128 -28
 2799 0680 0A       		.uleb128 0xa
 2800 0681 66040000 		.4byte	.LASF20
 2801 0685 01       		.byte	0x1
 2802 0686 BB04     		.2byte	0x4bb
 2803 0688 6F000000 		.4byte	0x6f
 2804 068c 02       		.byte	0x2
 2805 068d 91       		.byte	0x91
 2806 068e 6F       		.sleb128 -17
 2807 068f 00       		.byte	0
 2808 0690 09       		.uleb128 0x9
 2809 0691 01       		.byte	0x1
 2810 0692 0A020000 		.4byte	.LASF67
 2811 0696 01       		.byte	0x1
 2812 0697 E104     		.2byte	0x4e1
 2813 0699 01       		.byte	0x1
 2814 069a 00000000 		.4byte	.LFB33
 2815 069e 3C000000 		.4byte	.LFE33
 2816 06a2 CC060000 		.4byte	.LLST33
 2817 06a6 01       		.byte	0x1
 2818 06a7 D9060000 		.4byte	0x6d9
 2819 06ab 0B       		.uleb128 0xb
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 75


 2820 06ac 6C010000 		.4byte	.LASF38
 2821 06b0 01       		.byte	0x1
 2822 06b1 E104     		.2byte	0x4e1
 2823 06b3 7A000000 		.4byte	0x7a
 2824 06b7 02       		.byte	0x2
 2825 06b8 91       		.byte	0x91
 2826 06b9 64       		.sleb128 -28
 2827 06ba 0B       		.uleb128 0xb
 2828 06bb B9010000 		.4byte	.LASF68
 2829 06bf 01       		.byte	0x1
 2830 06c0 E104     		.2byte	0x4e1
 2831 06c2 7A000000 		.4byte	0x7a
 2832 06c6 02       		.byte	0x2
 2833 06c7 91       		.byte	0x91
 2834 06c8 60       		.sleb128 -32
 2835 06c9 0A       		.uleb128 0xa
 2836 06ca 66040000 		.4byte	.LASF20
 2837 06ce 01       		.byte	0x1
 2838 06cf E304     		.2byte	0x4e3
 2839 06d1 6F000000 		.4byte	0x6f
 2840 06d5 02       		.byte	0x2
 2841 06d6 91       		.byte	0x91
 2842 06d7 6F       		.sleb128 -17
 2843 06d8 00       		.byte	0
 2844 06d9 0D       		.uleb128 0xd
 2845 06da 01       		.byte	0x1
 2846 06db 71010000 		.4byte	.LASF69
 2847 06df 01       		.byte	0x1
 2848 06e0 FE04     		.2byte	0x4fe
 2849 06e2 01       		.byte	0x1
 2850 06e3 7A000000 		.4byte	0x7a
 2851 06e7 00000000 		.4byte	.LFB34
 2852 06eb 20000000 		.4byte	.LFE34
 2853 06ef 04070000 		.4byte	.LLST34
 2854 06f3 01       		.byte	0x1
 2855 06f4 0C       		.uleb128 0xc
 2856 06f5 01       		.byte	0x1
 2857 06f6 AB000000 		.4byte	.LASF70
 2858 06fa 01       		.byte	0x1
 2859 06fb 1705     		.2byte	0x517
 2860 06fd 01       		.byte	0x1
 2861 06fe 00000000 		.4byte	.LFB35
 2862 0702 18000000 		.4byte	.LFE35
 2863 0706 30070000 		.4byte	.LLST35
 2864 070a 01       		.byte	0x1
 2865 070b 1F070000 		.4byte	0x71f
 2866 070f 0B       		.uleb128 0xb
 2867 0710 79030000 		.4byte	.LASF71
 2868 0714 01       		.byte	0x1
 2869 0715 1705     		.2byte	0x517
 2870 0717 7A000000 		.4byte	0x7a
 2871 071b 02       		.byte	0x2
 2872 071c 91       		.byte	0x91
 2873 071d 74       		.sleb128 -12
 2874 071e 00       		.byte	0
 2875 071f 0D       		.uleb128 0xd
 2876 0720 01       		.byte	0x1
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 76


 2877 0721 5C030000 		.4byte	.LASF72
 2878 0725 01       		.byte	0x1
 2879 0726 2E05     		.2byte	0x52e
 2880 0728 01       		.byte	0x1
 2881 0729 7A000000 		.4byte	0x7a
 2882 072d 00000000 		.4byte	.LFB36
 2883 0731 14000000 		.4byte	.LFE36
 2884 0735 68070000 		.4byte	.LLST36
 2885 0739 01       		.byte	0x1
 2886 073a 0D       		.uleb128 0xd
 2887 073b 01       		.byte	0x1
 2888 073c C2040000 		.4byte	.LASF73
 2889 0740 01       		.byte	0x1
 2890 0741 4505     		.2byte	0x545
 2891 0743 01       		.byte	0x1
 2892 0744 7A000000 		.4byte	0x7a
 2893 0748 00000000 		.4byte	.LFB37
 2894 074c 14000000 		.4byte	.LFE37
 2895 0750 94070000 		.4byte	.LLST37
 2896 0754 01       		.byte	0x1
 2897 0755 0C       		.uleb128 0xc
 2898 0756 01       		.byte	0x1
 2899 0757 C0000000 		.4byte	.LASF74
 2900 075b 01       		.byte	0x1
 2901 075c 5C05     		.2byte	0x55c
 2902 075e 01       		.byte	0x1
 2903 075f 00000000 		.4byte	.LFB38
 2904 0763 18000000 		.4byte	.LFE38
 2905 0767 C0070000 		.4byte	.LLST38
 2906 076b 01       		.byte	0x1
 2907 076c 80070000 		.4byte	0x780
 2908 0770 0B       		.uleb128 0xb
 2909 0771 79030000 		.4byte	.LASF71
 2910 0775 01       		.byte	0x1
 2911 0776 5C05     		.2byte	0x55c
 2912 0778 7A000000 		.4byte	0x7a
 2913 077c 02       		.byte	0x2
 2914 077d 91       		.byte	0x91
 2915 077e 74       		.sleb128 -12
 2916 077f 00       		.byte	0
 2917 0780 0C       		.uleb128 0xc
 2918 0781 01       		.byte	0x1
 2919 0782 2D040000 		.4byte	.LASF75
 2920 0786 01       		.byte	0x1
 2921 0787 7305     		.2byte	0x573
 2922 0789 01       		.byte	0x1
 2923 078a 00000000 		.4byte	.LFB39
 2924 078e 18000000 		.4byte	.LFE39
 2925 0792 F8070000 		.4byte	.LLST39
 2926 0796 01       		.byte	0x1
 2927 0797 AB070000 		.4byte	0x7ab
 2928 079b 0B       		.uleb128 0xb
 2929 079c 79030000 		.4byte	.LASF71
 2930 07a0 01       		.byte	0x1
 2931 07a1 7305     		.2byte	0x573
 2932 07a3 7A000000 		.4byte	0x7a
 2933 07a7 02       		.byte	0x2
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 77


 2934 07a8 91       		.byte	0x91
 2935 07a9 74       		.sleb128 -12
 2936 07aa 00       		.byte	0
 2937 07ab 0E       		.uleb128 0xe
 2938 07ac 44020000 		.4byte	.LASF79
 2939 07b0 01       		.byte	0x1
 2940 07b1 16       		.byte	0x16
 2941 07b2 6F000000 		.4byte	0x6f
 2942 07b6 01       		.byte	0x1
 2943 07b7 05       		.byte	0x5
 2944 07b8 03       		.byte	0x3
 2945 07b9 00000000 		.4byte	PWM_initVar
 2946 07bd 00       		.byte	0
 2947              		.section	.debug_abbrev,"",%progbits
 2948              	.Ldebug_abbrev0:
 2949 0000 01       		.uleb128 0x1
 2950 0001 11       		.uleb128 0x11
 2951 0002 01       		.byte	0x1
 2952 0003 25       		.uleb128 0x25
 2953 0004 0E       		.uleb128 0xe
 2954 0005 13       		.uleb128 0x13
 2955 0006 0B       		.uleb128 0xb
 2956 0007 03       		.uleb128 0x3
 2957 0008 0E       		.uleb128 0xe
 2958 0009 1B       		.uleb128 0x1b
 2959 000a 0E       		.uleb128 0xe
 2960 000b 55       		.uleb128 0x55
 2961 000c 06       		.uleb128 0x6
 2962 000d 11       		.uleb128 0x11
 2963 000e 01       		.uleb128 0x1
 2964 000f 52       		.uleb128 0x52
 2965 0010 01       		.uleb128 0x1
 2966 0011 10       		.uleb128 0x10
 2967 0012 06       		.uleb128 0x6
 2968 0013 00       		.byte	0
 2969 0014 00       		.byte	0
 2970 0015 02       		.uleb128 0x2
 2971 0016 24       		.uleb128 0x24
 2972 0017 00       		.byte	0
 2973 0018 0B       		.uleb128 0xb
 2974 0019 0B       		.uleb128 0xb
 2975 001a 3E       		.uleb128 0x3e
 2976 001b 0B       		.uleb128 0xb
 2977 001c 03       		.uleb128 0x3
 2978 001d 0E       		.uleb128 0xe
 2979 001e 00       		.byte	0
 2980 001f 00       		.byte	0
 2981 0020 03       		.uleb128 0x3
 2982 0021 24       		.uleb128 0x24
 2983 0022 00       		.byte	0
 2984 0023 0B       		.uleb128 0xb
 2985 0024 0B       		.uleb128 0xb
 2986 0025 3E       		.uleb128 0x3e
 2987 0026 0B       		.uleb128 0xb
 2988 0027 03       		.uleb128 0x3
 2989 0028 08       		.uleb128 0x8
 2990 0029 00       		.byte	0
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 78


 2991 002a 00       		.byte	0
 2992 002b 04       		.uleb128 0x4
 2993 002c 16       		.uleb128 0x16
 2994 002d 00       		.byte	0
 2995 002e 03       		.uleb128 0x3
 2996 002f 0E       		.uleb128 0xe
 2997 0030 3A       		.uleb128 0x3a
 2998 0031 0B       		.uleb128 0xb
 2999 0032 3B       		.uleb128 0x3b
 3000 0033 0B       		.uleb128 0xb
 3001 0034 49       		.uleb128 0x49
 3002 0035 13       		.uleb128 0x13
 3003 0036 00       		.byte	0
 3004 0037 00       		.byte	0
 3005 0038 05       		.uleb128 0x5
 3006 0039 35       		.uleb128 0x35
 3007 003a 00       		.byte	0
 3008 003b 49       		.uleb128 0x49
 3009 003c 13       		.uleb128 0x13
 3010 003d 00       		.byte	0
 3011 003e 00       		.byte	0
 3012 003f 06       		.uleb128 0x6
 3013 0040 2E       		.uleb128 0x2e
 3014 0041 00       		.byte	0
 3015 0042 3F       		.uleb128 0x3f
 3016 0043 0C       		.uleb128 0xc
 3017 0044 03       		.uleb128 0x3
 3018 0045 0E       		.uleb128 0xe
 3019 0046 3A       		.uleb128 0x3a
 3020 0047 0B       		.uleb128 0xb
 3021 0048 3B       		.uleb128 0x3b
 3022 0049 0B       		.uleb128 0xb
 3023 004a 27       		.uleb128 0x27
 3024 004b 0C       		.uleb128 0xc
 3025 004c 11       		.uleb128 0x11
 3026 004d 01       		.uleb128 0x1
 3027 004e 12       		.uleb128 0x12
 3028 004f 01       		.uleb128 0x1
 3029 0050 40       		.uleb128 0x40
 3030 0051 06       		.uleb128 0x6
 3031 0052 9642     		.uleb128 0x2116
 3032 0054 0C       		.uleb128 0xc
 3033 0055 00       		.byte	0
 3034 0056 00       		.byte	0
 3035 0057 07       		.uleb128 0x7
 3036 0058 2E       		.uleb128 0x2e
 3037 0059 01       		.byte	0x1
 3038 005a 3F       		.uleb128 0x3f
 3039 005b 0C       		.uleb128 0xc
 3040 005c 03       		.uleb128 0x3
 3041 005d 0E       		.uleb128 0xe
 3042 005e 3A       		.uleb128 0x3a
 3043 005f 0B       		.uleb128 0xb
 3044 0060 3B       		.uleb128 0x3b
 3045 0061 0B       		.uleb128 0xb
 3046 0062 27       		.uleb128 0x27
 3047 0063 0C       		.uleb128 0xc
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 79


 3048 0064 11       		.uleb128 0x11
 3049 0065 01       		.uleb128 0x1
 3050 0066 12       		.uleb128 0x12
 3051 0067 01       		.uleb128 0x1
 3052 0068 40       		.uleb128 0x40
 3053 0069 06       		.uleb128 0x6
 3054 006a 9642     		.uleb128 0x2116
 3055 006c 0C       		.uleb128 0xc
 3056 006d 01       		.uleb128 0x1
 3057 006e 13       		.uleb128 0x13
 3058 006f 00       		.byte	0
 3059 0070 00       		.byte	0
 3060 0071 08       		.uleb128 0x8
 3061 0072 34       		.uleb128 0x34
 3062 0073 00       		.byte	0
 3063 0074 03       		.uleb128 0x3
 3064 0075 0E       		.uleb128 0xe
 3065 0076 3A       		.uleb128 0x3a
 3066 0077 0B       		.uleb128 0xb
 3067 0078 3B       		.uleb128 0x3b
 3068 0079 0B       		.uleb128 0xb
 3069 007a 49       		.uleb128 0x49
 3070 007b 13       		.uleb128 0x13
 3071 007c 02       		.uleb128 0x2
 3072 007d 0A       		.uleb128 0xa
 3073 007e 00       		.byte	0
 3074 007f 00       		.byte	0
 3075 0080 09       		.uleb128 0x9
 3076 0081 2E       		.uleb128 0x2e
 3077 0082 01       		.byte	0x1
 3078 0083 3F       		.uleb128 0x3f
 3079 0084 0C       		.uleb128 0xc
 3080 0085 03       		.uleb128 0x3
 3081 0086 0E       		.uleb128 0xe
 3082 0087 3A       		.uleb128 0x3a
 3083 0088 0B       		.uleb128 0xb
 3084 0089 3B       		.uleb128 0x3b
 3085 008a 05       		.uleb128 0x5
 3086 008b 27       		.uleb128 0x27
 3087 008c 0C       		.uleb128 0xc
 3088 008d 11       		.uleb128 0x11
 3089 008e 01       		.uleb128 0x1
 3090 008f 12       		.uleb128 0x12
 3091 0090 01       		.uleb128 0x1
 3092 0091 40       		.uleb128 0x40
 3093 0092 06       		.uleb128 0x6
 3094 0093 9642     		.uleb128 0x2116
 3095 0095 0C       		.uleb128 0xc
 3096 0096 01       		.uleb128 0x1
 3097 0097 13       		.uleb128 0x13
 3098 0098 00       		.byte	0
 3099 0099 00       		.byte	0
 3100 009a 0A       		.uleb128 0xa
 3101 009b 34       		.uleb128 0x34
 3102 009c 00       		.byte	0
 3103 009d 03       		.uleb128 0x3
 3104 009e 0E       		.uleb128 0xe
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 80


 3105 009f 3A       		.uleb128 0x3a
 3106 00a0 0B       		.uleb128 0xb
 3107 00a1 3B       		.uleb128 0x3b
 3108 00a2 05       		.uleb128 0x5
 3109 00a3 49       		.uleb128 0x49
 3110 00a4 13       		.uleb128 0x13
 3111 00a5 02       		.uleb128 0x2
 3112 00a6 0A       		.uleb128 0xa
 3113 00a7 00       		.byte	0
 3114 00a8 00       		.byte	0
 3115 00a9 0B       		.uleb128 0xb
 3116 00aa 05       		.uleb128 0x5
 3117 00ab 00       		.byte	0
 3118 00ac 03       		.uleb128 0x3
 3119 00ad 0E       		.uleb128 0xe
 3120 00ae 3A       		.uleb128 0x3a
 3121 00af 0B       		.uleb128 0xb
 3122 00b0 3B       		.uleb128 0x3b
 3123 00b1 05       		.uleb128 0x5
 3124 00b2 49       		.uleb128 0x49
 3125 00b3 13       		.uleb128 0x13
 3126 00b4 02       		.uleb128 0x2
 3127 00b5 0A       		.uleb128 0xa
 3128 00b6 00       		.byte	0
 3129 00b7 00       		.byte	0
 3130 00b8 0C       		.uleb128 0xc
 3131 00b9 2E       		.uleb128 0x2e
 3132 00ba 01       		.byte	0x1
 3133 00bb 3F       		.uleb128 0x3f
 3134 00bc 0C       		.uleb128 0xc
 3135 00bd 03       		.uleb128 0x3
 3136 00be 0E       		.uleb128 0xe
 3137 00bf 3A       		.uleb128 0x3a
 3138 00c0 0B       		.uleb128 0xb
 3139 00c1 3B       		.uleb128 0x3b
 3140 00c2 05       		.uleb128 0x5
 3141 00c3 27       		.uleb128 0x27
 3142 00c4 0C       		.uleb128 0xc
 3143 00c5 11       		.uleb128 0x11
 3144 00c6 01       		.uleb128 0x1
 3145 00c7 12       		.uleb128 0x12
 3146 00c8 01       		.uleb128 0x1
 3147 00c9 40       		.uleb128 0x40
 3148 00ca 06       		.uleb128 0x6
 3149 00cb 9742     		.uleb128 0x2117
 3150 00cd 0C       		.uleb128 0xc
 3151 00ce 01       		.uleb128 0x1
 3152 00cf 13       		.uleb128 0x13
 3153 00d0 00       		.byte	0
 3154 00d1 00       		.byte	0
 3155 00d2 0D       		.uleb128 0xd
 3156 00d3 2E       		.uleb128 0x2e
 3157 00d4 00       		.byte	0
 3158 00d5 3F       		.uleb128 0x3f
 3159 00d6 0C       		.uleb128 0xc
 3160 00d7 03       		.uleb128 0x3
 3161 00d8 0E       		.uleb128 0xe
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 81


 3162 00d9 3A       		.uleb128 0x3a
 3163 00da 0B       		.uleb128 0xb
 3164 00db 3B       		.uleb128 0x3b
 3165 00dc 05       		.uleb128 0x5
 3166 00dd 27       		.uleb128 0x27
 3167 00de 0C       		.uleb128 0xc
 3168 00df 49       		.uleb128 0x49
 3169 00e0 13       		.uleb128 0x13
 3170 00e1 11       		.uleb128 0x11
 3171 00e2 01       		.uleb128 0x1
 3172 00e3 12       		.uleb128 0x12
 3173 00e4 01       		.uleb128 0x1
 3174 00e5 40       		.uleb128 0x40
 3175 00e6 06       		.uleb128 0x6
 3176 00e7 9742     		.uleb128 0x2117
 3177 00e9 0C       		.uleb128 0xc
 3178 00ea 00       		.byte	0
 3179 00eb 00       		.byte	0
 3180 00ec 0E       		.uleb128 0xe
 3181 00ed 34       		.uleb128 0x34
 3182 00ee 00       		.byte	0
 3183 00ef 03       		.uleb128 0x3
 3184 00f0 0E       		.uleb128 0xe
 3185 00f1 3A       		.uleb128 0x3a
 3186 00f2 0B       		.uleb128 0xb
 3187 00f3 3B       		.uleb128 0x3b
 3188 00f4 0B       		.uleb128 0xb
 3189 00f5 49       		.uleb128 0x49
 3190 00f6 13       		.uleb128 0x13
 3191 00f7 3F       		.uleb128 0x3f
 3192 00f8 0C       		.uleb128 0xc
 3193 00f9 02       		.uleb128 0x2
 3194 00fa 0A       		.uleb128 0xa
 3195 00fb 00       		.byte	0
 3196 00fc 00       		.byte	0
 3197 00fd 00       		.byte	0
 3198              		.section	.debug_loc,"",%progbits
 3199              	.Ldebug_loc0:
 3200              	.LLST0:
 3201 0000 00000000 		.4byte	.LFB0
 3202 0004 02000000 		.4byte	.LCFI0
 3203 0008 0200     		.2byte	0x2
 3204 000a 7D       		.byte	0x7d
 3205 000b 00       		.sleb128 0
 3206 000c 02000000 		.4byte	.LCFI0
 3207 0010 04000000 		.4byte	.LCFI1
 3208 0014 0200     		.2byte	0x2
 3209 0016 7D       		.byte	0x7d
 3210 0017 08       		.sleb128 8
 3211 0018 04000000 		.4byte	.LCFI1
 3212 001c 64000000 		.4byte	.LFE0
 3213 0020 0200     		.2byte	0x2
 3214 0022 77       		.byte	0x77
 3215 0023 08       		.sleb128 8
 3216 0024 00000000 		.4byte	0
 3217 0028 00000000 		.4byte	0
 3218              	.LLST1:
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 82


 3219 002c 00000000 		.4byte	.LFB1
 3220 0030 02000000 		.4byte	.LCFI2
 3221 0034 0200     		.2byte	0x2
 3222 0036 7D       		.byte	0x7d
 3223 0037 00       		.sleb128 0
 3224 0038 02000000 		.4byte	.LCFI2
 3225 003c 04000000 		.4byte	.LCFI3
 3226 0040 0200     		.2byte	0x2
 3227 0042 7D       		.byte	0x7d
 3228 0043 0C       		.sleb128 12
 3229 0044 04000000 		.4byte	.LCFI3
 3230 0048 06000000 		.4byte	.LCFI4
 3231 004c 0200     		.2byte	0x2
 3232 004e 7D       		.byte	0x7d
 3233 004f 18       		.sleb128 24
 3234 0050 06000000 		.4byte	.LCFI4
 3235 0054 30000000 		.4byte	.LFE1
 3236 0058 0200     		.2byte	0x2
 3237 005a 77       		.byte	0x77
 3238 005b 18       		.sleb128 24
 3239 005c 00000000 		.4byte	0
 3240 0060 00000000 		.4byte	0
 3241              	.LLST2:
 3242 0064 00000000 		.4byte	.LFB2
 3243 0068 02000000 		.4byte	.LCFI5
 3244 006c 0200     		.2byte	0x2
 3245 006e 7D       		.byte	0x7d
 3246 006f 00       		.sleb128 0
 3247 0070 02000000 		.4byte	.LCFI5
 3248 0074 04000000 		.4byte	.LCFI6
 3249 0078 0200     		.2byte	0x2
 3250 007a 7D       		.byte	0x7d
 3251 007b 08       		.sleb128 8
 3252 007c 04000000 		.4byte	.LCFI6
 3253 0080 24000000 		.4byte	.LFE2
 3254 0084 0200     		.2byte	0x2
 3255 0086 77       		.byte	0x77
 3256 0087 08       		.sleb128 8
 3257 0088 00000000 		.4byte	0
 3258 008c 00000000 		.4byte	0
 3259              	.LLST3:
 3260 0090 00000000 		.4byte	.LFB3
 3261 0094 02000000 		.4byte	.LCFI7
 3262 0098 0200     		.2byte	0x2
 3263 009a 7D       		.byte	0x7d
 3264 009b 00       		.sleb128 0
 3265 009c 02000000 		.4byte	.LCFI7
 3266 00a0 04000000 		.4byte	.LCFI8
 3267 00a4 0200     		.2byte	0x2
 3268 00a6 7D       		.byte	0x7d
 3269 00a7 0C       		.sleb128 12
 3270 00a8 04000000 		.4byte	.LCFI8
 3271 00ac 06000000 		.4byte	.LCFI9
 3272 00b0 0200     		.2byte	0x2
 3273 00b2 7D       		.byte	0x7d
 3274 00b3 18       		.sleb128 24
 3275 00b4 06000000 		.4byte	.LCFI9
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 83


 3276 00b8 30000000 		.4byte	.LFE3
 3277 00bc 0200     		.2byte	0x2
 3278 00be 77       		.byte	0x77
 3279 00bf 18       		.sleb128 24
 3280 00c0 00000000 		.4byte	0
 3281 00c4 00000000 		.4byte	0
 3282              	.LLST4:
 3283 00c8 00000000 		.4byte	.LFB4
 3284 00cc 02000000 		.4byte	.LCFI10
 3285 00d0 0200     		.2byte	0x2
 3286 00d2 7D       		.byte	0x7d
 3287 00d3 00       		.sleb128 0
 3288 00d4 02000000 		.4byte	.LCFI10
 3289 00d8 04000000 		.4byte	.LCFI11
 3290 00dc 0200     		.2byte	0x2
 3291 00de 7D       		.byte	0x7d
 3292 00df 0C       		.sleb128 12
 3293 00e0 04000000 		.4byte	.LCFI11
 3294 00e4 06000000 		.4byte	.LCFI12
 3295 00e8 0200     		.2byte	0x2
 3296 00ea 7D       		.byte	0x7d
 3297 00eb 20       		.sleb128 32
 3298 00ec 06000000 		.4byte	.LCFI12
 3299 00f0 48000000 		.4byte	.LFE4
 3300 00f4 0200     		.2byte	0x2
 3301 00f6 77       		.byte	0x77
 3302 00f7 20       		.sleb128 32
 3303 00f8 00000000 		.4byte	0
 3304 00fc 00000000 		.4byte	0
 3305              	.LLST5:
 3306 0100 00000000 		.4byte	.LFB5
 3307 0104 02000000 		.4byte	.LCFI13
 3308 0108 0200     		.2byte	0x2
 3309 010a 7D       		.byte	0x7d
 3310 010b 00       		.sleb128 0
 3311 010c 02000000 		.4byte	.LCFI13
 3312 0110 04000000 		.4byte	.LCFI14
 3313 0114 0200     		.2byte	0x2
 3314 0116 7D       		.byte	0x7d
 3315 0117 0C       		.sleb128 12
 3316 0118 04000000 		.4byte	.LCFI14
 3317 011c 06000000 		.4byte	.LCFI15
 3318 0120 0200     		.2byte	0x2
 3319 0122 7D       		.byte	0x7d
 3320 0123 20       		.sleb128 32
 3321 0124 06000000 		.4byte	.LCFI15
 3322 0128 48000000 		.4byte	.LFE5
 3323 012c 0200     		.2byte	0x2
 3324 012e 77       		.byte	0x77
 3325 012f 20       		.sleb128 32
 3326 0130 00000000 		.4byte	0
 3327 0134 00000000 		.4byte	0
 3328              	.LLST6:
 3329 0138 00000000 		.4byte	.LFB6
 3330 013c 02000000 		.4byte	.LCFI16
 3331 0140 0200     		.2byte	0x2
 3332 0142 7D       		.byte	0x7d
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 84


 3333 0143 00       		.sleb128 0
 3334 0144 02000000 		.4byte	.LCFI16
 3335 0148 04000000 		.4byte	.LCFI17
 3336 014c 0200     		.2byte	0x2
 3337 014e 7D       		.byte	0x7d
 3338 014f 0C       		.sleb128 12
 3339 0150 04000000 		.4byte	.LCFI17
 3340 0154 06000000 		.4byte	.LCFI18
 3341 0158 0200     		.2byte	0x2
 3342 015a 7D       		.byte	0x7d
 3343 015b 20       		.sleb128 32
 3344 015c 06000000 		.4byte	.LCFI18
 3345 0160 48000000 		.4byte	.LFE6
 3346 0164 0200     		.2byte	0x2
 3347 0166 77       		.byte	0x77
 3348 0167 20       		.sleb128 32
 3349 0168 00000000 		.4byte	0
 3350 016c 00000000 		.4byte	0
 3351              	.LLST7:
 3352 0170 00000000 		.4byte	.LFB7
 3353 0174 02000000 		.4byte	.LCFI19
 3354 0178 0200     		.2byte	0x2
 3355 017a 7D       		.byte	0x7d
 3356 017b 00       		.sleb128 0
 3357 017c 02000000 		.4byte	.LCFI19
 3358 0180 04000000 		.4byte	.LCFI20
 3359 0184 0200     		.2byte	0x2
 3360 0186 7D       		.byte	0x7d
 3361 0187 0C       		.sleb128 12
 3362 0188 04000000 		.4byte	.LCFI20
 3363 018c 06000000 		.4byte	.LCFI21
 3364 0190 0200     		.2byte	0x2
 3365 0192 7D       		.byte	0x7d
 3366 0193 20       		.sleb128 32
 3367 0194 06000000 		.4byte	.LCFI21
 3368 0198 4C000000 		.4byte	.LFE7
 3369 019c 0200     		.2byte	0x2
 3370 019e 77       		.byte	0x77
 3371 019f 20       		.sleb128 32
 3372 01a0 00000000 		.4byte	0
 3373 01a4 00000000 		.4byte	0
 3374              	.LLST8:
 3375 01a8 00000000 		.4byte	.LFB8
 3376 01ac 02000000 		.4byte	.LCFI22
 3377 01b0 0200     		.2byte	0x2
 3378 01b2 7D       		.byte	0x7d
 3379 01b3 00       		.sleb128 0
 3380 01b4 02000000 		.4byte	.LCFI22
 3381 01b8 04000000 		.4byte	.LCFI23
 3382 01bc 0200     		.2byte	0x2
 3383 01be 7D       		.byte	0x7d
 3384 01bf 08       		.sleb128 8
 3385 01c0 04000000 		.4byte	.LCFI23
 3386 01c4 06000000 		.4byte	.LCFI24
 3387 01c8 0200     		.2byte	0x2
 3388 01ca 7D       		.byte	0x7d
 3389 01cb 10       		.sleb128 16
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 85


 3390 01cc 06000000 		.4byte	.LCFI24
 3391 01d0 1C000000 		.4byte	.LFE8
 3392 01d4 0200     		.2byte	0x2
 3393 01d6 77       		.byte	0x77
 3394 01d7 10       		.sleb128 16
 3395 01d8 00000000 		.4byte	0
 3396 01dc 00000000 		.4byte	0
 3397              	.LLST9:
 3398 01e0 00000000 		.4byte	.LFB9
 3399 01e4 02000000 		.4byte	.LCFI25
 3400 01e8 0200     		.2byte	0x2
 3401 01ea 7D       		.byte	0x7d
 3402 01eb 00       		.sleb128 0
 3403 01ec 02000000 		.4byte	.LCFI25
 3404 01f0 04000000 		.4byte	.LCFI26
 3405 01f4 0200     		.2byte	0x2
 3406 01f6 7D       		.byte	0x7d
 3407 01f7 0C       		.sleb128 12
 3408 01f8 04000000 		.4byte	.LCFI26
 3409 01fc 06000000 		.4byte	.LCFI27
 3410 0200 0200     		.2byte	0x2
 3411 0202 7D       		.byte	0x7d
 3412 0203 20       		.sleb128 32
 3413 0204 06000000 		.4byte	.LCFI27
 3414 0208 48000000 		.4byte	.LFE9
 3415 020c 0200     		.2byte	0x2
 3416 020e 77       		.byte	0x77
 3417 020f 20       		.sleb128 32
 3418 0210 00000000 		.4byte	0
 3419 0214 00000000 		.4byte	0
 3420              	.LLST10:
 3421 0218 00000000 		.4byte	.LFB10
 3422 021c 02000000 		.4byte	.LCFI28
 3423 0220 0200     		.2byte	0x2
 3424 0222 7D       		.byte	0x7d
 3425 0223 00       		.sleb128 0
 3426 0224 02000000 		.4byte	.LCFI28
 3427 0228 04000000 		.4byte	.LCFI29
 3428 022c 0200     		.2byte	0x2
 3429 022e 7D       		.byte	0x7d
 3430 022f 0C       		.sleb128 12
 3431 0230 04000000 		.4byte	.LCFI29
 3432 0234 06000000 		.4byte	.LCFI30
 3433 0238 0200     		.2byte	0x2
 3434 023a 7D       		.byte	0x7d
 3435 023b 20       		.sleb128 32
 3436 023c 06000000 		.4byte	.LCFI30
 3437 0240 48000000 		.4byte	.LFE10
 3438 0244 0200     		.2byte	0x2
 3439 0246 77       		.byte	0x77
 3440 0247 20       		.sleb128 32
 3441 0248 00000000 		.4byte	0
 3442 024c 00000000 		.4byte	0
 3443              	.LLST11:
 3444 0250 00000000 		.4byte	.LFB11
 3445 0254 02000000 		.4byte	.LCFI31
 3446 0258 0200     		.2byte	0x2
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 86


 3447 025a 7D       		.byte	0x7d
 3448 025b 00       		.sleb128 0
 3449 025c 02000000 		.4byte	.LCFI31
 3450 0260 04000000 		.4byte	.LCFI32
 3451 0264 0200     		.2byte	0x2
 3452 0266 7D       		.byte	0x7d
 3453 0267 0C       		.sleb128 12
 3454 0268 04000000 		.4byte	.LCFI32
 3455 026c 06000000 		.4byte	.LCFI33
 3456 0270 0200     		.2byte	0x2
 3457 0272 7D       		.byte	0x7d
 3458 0273 20       		.sleb128 32
 3459 0274 06000000 		.4byte	.LCFI33
 3460 0278 4C000000 		.4byte	.LFE11
 3461 027c 0200     		.2byte	0x2
 3462 027e 77       		.byte	0x77
 3463 027f 20       		.sleb128 32
 3464 0280 00000000 		.4byte	0
 3465 0284 00000000 		.4byte	0
 3466              	.LLST12:
 3467 0288 00000000 		.4byte	.LFB12
 3468 028c 02000000 		.4byte	.LCFI34
 3469 0290 0200     		.2byte	0x2
 3470 0292 7D       		.byte	0x7d
 3471 0293 00       		.sleb128 0
 3472 0294 02000000 		.4byte	.LCFI34
 3473 0298 04000000 		.4byte	.LCFI35
 3474 029c 0200     		.2byte	0x2
 3475 029e 7D       		.byte	0x7d
 3476 029f 0C       		.sleb128 12
 3477 02a0 04000000 		.4byte	.LCFI35
 3478 02a4 06000000 		.4byte	.LCFI36
 3479 02a8 0200     		.2byte	0x2
 3480 02aa 7D       		.byte	0x7d
 3481 02ab 20       		.sleb128 32
 3482 02ac 06000000 		.4byte	.LCFI36
 3483 02b0 48000000 		.4byte	.LFE12
 3484 02b4 0200     		.2byte	0x2
 3485 02b6 77       		.byte	0x77
 3486 02b7 20       		.sleb128 32
 3487 02b8 00000000 		.4byte	0
 3488 02bc 00000000 		.4byte	0
 3489              	.LLST13:
 3490 02c0 00000000 		.4byte	.LFB13
 3491 02c4 02000000 		.4byte	.LCFI37
 3492 02c8 0200     		.2byte	0x2
 3493 02ca 7D       		.byte	0x7d
 3494 02cb 00       		.sleb128 0
 3495 02cc 02000000 		.4byte	.LCFI37
 3496 02d0 04000000 		.4byte	.LCFI38
 3497 02d4 0200     		.2byte	0x2
 3498 02d6 7D       		.byte	0x7d
 3499 02d7 08       		.sleb128 8
 3500 02d8 04000000 		.4byte	.LCFI38
 3501 02dc 06000000 		.4byte	.LCFI39
 3502 02e0 0200     		.2byte	0x2
 3503 02e2 7D       		.byte	0x7d
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 87


 3504 02e3 10       		.sleb128 16
 3505 02e4 06000000 		.4byte	.LCFI39
 3506 02e8 1C000000 		.4byte	.LFE13
 3507 02ec 0200     		.2byte	0x2
 3508 02ee 77       		.byte	0x77
 3509 02ef 10       		.sleb128 16
 3510 02f0 00000000 		.4byte	0
 3511 02f4 00000000 		.4byte	0
 3512              	.LLST14:
 3513 02f8 00000000 		.4byte	.LFB14
 3514 02fc 02000000 		.4byte	.LCFI40
 3515 0300 0200     		.2byte	0x2
 3516 0302 7D       		.byte	0x7d
 3517 0303 00       		.sleb128 0
 3518 0304 02000000 		.4byte	.LCFI40
 3519 0308 04000000 		.4byte	.LCFI41
 3520 030c 0200     		.2byte	0x2
 3521 030e 7D       		.byte	0x7d
 3522 030f 08       		.sleb128 8
 3523 0310 04000000 		.4byte	.LCFI41
 3524 0314 18000000 		.4byte	.LFE14
 3525 0318 0200     		.2byte	0x2
 3526 031a 77       		.byte	0x77
 3527 031b 08       		.sleb128 8
 3528 031c 00000000 		.4byte	0
 3529 0320 00000000 		.4byte	0
 3530              	.LLST15:
 3531 0324 00000000 		.4byte	.LFB15
 3532 0328 02000000 		.4byte	.LCFI42
 3533 032c 0200     		.2byte	0x2
 3534 032e 7D       		.byte	0x7d
 3535 032f 00       		.sleb128 0
 3536 0330 02000000 		.4byte	.LCFI42
 3537 0334 04000000 		.4byte	.LCFI43
 3538 0338 0200     		.2byte	0x2
 3539 033a 7D       		.byte	0x7d
 3540 033b 0C       		.sleb128 12
 3541 033c 04000000 		.4byte	.LCFI43
 3542 0340 06000000 		.4byte	.LCFI44
 3543 0344 0200     		.2byte	0x2
 3544 0346 7D       		.byte	0x7d
 3545 0347 20       		.sleb128 32
 3546 0348 06000000 		.4byte	.LCFI44
 3547 034c 48000000 		.4byte	.LFE15
 3548 0350 0200     		.2byte	0x2
 3549 0352 77       		.byte	0x77
 3550 0353 20       		.sleb128 32
 3551 0354 00000000 		.4byte	0
 3552 0358 00000000 		.4byte	0
 3553              	.LLST16:
 3554 035c 00000000 		.4byte	.LFB16
 3555 0360 02000000 		.4byte	.LCFI45
 3556 0364 0200     		.2byte	0x2
 3557 0366 7D       		.byte	0x7d
 3558 0367 00       		.sleb128 0
 3559 0368 02000000 		.4byte	.LCFI45
 3560 036c 04000000 		.4byte	.LCFI46
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 88


 3561 0370 0200     		.2byte	0x2
 3562 0372 7D       		.byte	0x7d
 3563 0373 08       		.sleb128 8
 3564 0374 04000000 		.4byte	.LCFI46
 3565 0378 06000000 		.4byte	.LCFI47
 3566 037c 0200     		.2byte	0x2
 3567 037e 7D       		.byte	0x7d
 3568 037f 10       		.sleb128 16
 3569 0380 06000000 		.4byte	.LCFI47
 3570 0384 1C000000 		.4byte	.LFE16
 3571 0388 0200     		.2byte	0x2
 3572 038a 77       		.byte	0x77
 3573 038b 10       		.sleb128 16
 3574 038c 00000000 		.4byte	0
 3575 0390 00000000 		.4byte	0
 3576              	.LLST17:
 3577 0394 00000000 		.4byte	.LFB17
 3578 0398 02000000 		.4byte	.LCFI48
 3579 039c 0200     		.2byte	0x2
 3580 039e 7D       		.byte	0x7d
 3581 039f 00       		.sleb128 0
 3582 03a0 02000000 		.4byte	.LCFI48
 3583 03a4 04000000 		.4byte	.LCFI49
 3584 03a8 0200     		.2byte	0x2
 3585 03aa 7D       		.byte	0x7d
 3586 03ab 08       		.sleb128 8
 3587 03ac 04000000 		.4byte	.LCFI49
 3588 03b0 18000000 		.4byte	.LFE17
 3589 03b4 0200     		.2byte	0x2
 3590 03b6 77       		.byte	0x77
 3591 03b7 08       		.sleb128 8
 3592 03b8 00000000 		.4byte	0
 3593 03bc 00000000 		.4byte	0
 3594              	.LLST18:
 3595 03c0 00000000 		.4byte	.LFB18
 3596 03c4 02000000 		.4byte	.LCFI50
 3597 03c8 0200     		.2byte	0x2
 3598 03ca 7D       		.byte	0x7d
 3599 03cb 00       		.sleb128 0
 3600 03cc 02000000 		.4byte	.LCFI50
 3601 03d0 04000000 		.4byte	.LCFI51
 3602 03d4 0200     		.2byte	0x2
 3603 03d6 7D       		.byte	0x7d
 3604 03d7 0C       		.sleb128 12
 3605 03d8 04000000 		.4byte	.LCFI51
 3606 03dc 06000000 		.4byte	.LCFI52
 3607 03e0 0200     		.2byte	0x2
 3608 03e2 7D       		.byte	0x7d
 3609 03e3 20       		.sleb128 32
 3610 03e4 06000000 		.4byte	.LCFI52
 3611 03e8 48000000 		.4byte	.LFE18
 3612 03ec 0200     		.2byte	0x2
 3613 03ee 77       		.byte	0x77
 3614 03ef 20       		.sleb128 32
 3615 03f0 00000000 		.4byte	0
 3616 03f4 00000000 		.4byte	0
 3617              	.LLST19:
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 89


 3618 03f8 00000000 		.4byte	.LFB19
 3619 03fc 02000000 		.4byte	.LCFI53
 3620 0400 0200     		.2byte	0x2
 3621 0402 7D       		.byte	0x7d
 3622 0403 00       		.sleb128 0
 3623 0404 02000000 		.4byte	.LCFI53
 3624 0408 04000000 		.4byte	.LCFI54
 3625 040c 0200     		.2byte	0x2
 3626 040e 7D       		.byte	0x7d
 3627 040f 08       		.sleb128 8
 3628 0410 04000000 		.4byte	.LCFI54
 3629 0414 06000000 		.4byte	.LCFI55
 3630 0418 0200     		.2byte	0x2
 3631 041a 7D       		.byte	0x7d
 3632 041b 10       		.sleb128 16
 3633 041c 06000000 		.4byte	.LCFI55
 3634 0420 1C000000 		.4byte	.LFE19
 3635 0424 0200     		.2byte	0x2
 3636 0426 77       		.byte	0x77
 3637 0427 10       		.sleb128 16
 3638 0428 00000000 		.4byte	0
 3639 042c 00000000 		.4byte	0
 3640              	.LLST20:
 3641 0430 00000000 		.4byte	.LFB20
 3642 0434 02000000 		.4byte	.LCFI56
 3643 0438 0200     		.2byte	0x2
 3644 043a 7D       		.byte	0x7d
 3645 043b 00       		.sleb128 0
 3646 043c 02000000 		.4byte	.LCFI56
 3647 0440 04000000 		.4byte	.LCFI57
 3648 0444 0200     		.2byte	0x2
 3649 0446 7D       		.byte	0x7d
 3650 0447 08       		.sleb128 8
 3651 0448 04000000 		.4byte	.LCFI57
 3652 044c 18000000 		.4byte	.LFE20
 3653 0450 0200     		.2byte	0x2
 3654 0452 77       		.byte	0x77
 3655 0453 08       		.sleb128 8
 3656 0454 00000000 		.4byte	0
 3657 0458 00000000 		.4byte	0
 3658              	.LLST21:
 3659 045c 00000000 		.4byte	.LFB21
 3660 0460 02000000 		.4byte	.LCFI58
 3661 0464 0200     		.2byte	0x2
 3662 0466 7D       		.byte	0x7d
 3663 0467 00       		.sleb128 0
 3664 0468 02000000 		.4byte	.LCFI58
 3665 046c 04000000 		.4byte	.LCFI59
 3666 0470 0200     		.2byte	0x2
 3667 0472 7D       		.byte	0x7d
 3668 0473 0C       		.sleb128 12
 3669 0474 04000000 		.4byte	.LCFI59
 3670 0478 06000000 		.4byte	.LCFI60
 3671 047c 0200     		.2byte	0x2
 3672 047e 7D       		.byte	0x7d
 3673 047f 20       		.sleb128 32
 3674 0480 06000000 		.4byte	.LCFI60
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 90


 3675 0484 48000000 		.4byte	.LFE21
 3676 0488 0200     		.2byte	0x2
 3677 048a 77       		.byte	0x77
 3678 048b 20       		.sleb128 32
 3679 048c 00000000 		.4byte	0
 3680 0490 00000000 		.4byte	0
 3681              	.LLST22:
 3682 0494 00000000 		.4byte	.LFB22
 3683 0498 02000000 		.4byte	.LCFI61
 3684 049c 0200     		.2byte	0x2
 3685 049e 7D       		.byte	0x7d
 3686 049f 00       		.sleb128 0
 3687 04a0 02000000 		.4byte	.LCFI61
 3688 04a4 04000000 		.4byte	.LCFI62
 3689 04a8 0200     		.2byte	0x2
 3690 04aa 7D       		.byte	0x7d
 3691 04ab 08       		.sleb128 8
 3692 04ac 04000000 		.4byte	.LCFI62
 3693 04b0 06000000 		.4byte	.LCFI63
 3694 04b4 0200     		.2byte	0x2
 3695 04b6 7D       		.byte	0x7d
 3696 04b7 10       		.sleb128 16
 3697 04b8 06000000 		.4byte	.LCFI63
 3698 04bc 1C000000 		.4byte	.LFE22
 3699 04c0 0200     		.2byte	0x2
 3700 04c2 77       		.byte	0x77
 3701 04c3 10       		.sleb128 16
 3702 04c4 00000000 		.4byte	0
 3703 04c8 00000000 		.4byte	0
 3704              	.LLST23:
 3705 04cc 00000000 		.4byte	.LFB23
 3706 04d0 02000000 		.4byte	.LCFI64
 3707 04d4 0200     		.2byte	0x2
 3708 04d6 7D       		.byte	0x7d
 3709 04d7 00       		.sleb128 0
 3710 04d8 02000000 		.4byte	.LCFI64
 3711 04dc 04000000 		.4byte	.LCFI65
 3712 04e0 0200     		.2byte	0x2
 3713 04e2 7D       		.byte	0x7d
 3714 04e3 08       		.sleb128 8
 3715 04e4 04000000 		.4byte	.LCFI65
 3716 04e8 18000000 		.4byte	.LFE23
 3717 04ec 0200     		.2byte	0x2
 3718 04ee 77       		.byte	0x77
 3719 04ef 08       		.sleb128 8
 3720 04f0 00000000 		.4byte	0
 3721 04f4 00000000 		.4byte	0
 3722              	.LLST24:
 3723 04f8 00000000 		.4byte	.LFB24
 3724 04fc 02000000 		.4byte	.LCFI66
 3725 0500 0200     		.2byte	0x2
 3726 0502 7D       		.byte	0x7d
 3727 0503 00       		.sleb128 0
 3728 0504 02000000 		.4byte	.LCFI66
 3729 0508 04000000 		.4byte	.LCFI67
 3730 050c 0200     		.2byte	0x2
 3731 050e 7D       		.byte	0x7d
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 91


 3732 050f 08       		.sleb128 8
 3733 0510 04000000 		.4byte	.LCFI67
 3734 0514 06000000 		.4byte	.LCFI68
 3735 0518 0200     		.2byte	0x2
 3736 051a 7D       		.byte	0x7d
 3737 051b 10       		.sleb128 16
 3738 051c 06000000 		.4byte	.LCFI68
 3739 0520 1C000000 		.4byte	.LFE24
 3740 0524 0200     		.2byte	0x2
 3741 0526 77       		.byte	0x77
 3742 0527 10       		.sleb128 16
 3743 0528 00000000 		.4byte	0
 3744 052c 00000000 		.4byte	0
 3745              	.LLST25:
 3746 0530 00000000 		.4byte	.LFB25
 3747 0534 02000000 		.4byte	.LCFI69
 3748 0538 0200     		.2byte	0x2
 3749 053a 7D       		.byte	0x7d
 3750 053b 00       		.sleb128 0
 3751 053c 02000000 		.4byte	.LCFI69
 3752 0540 04000000 		.4byte	.LCFI70
 3753 0544 0200     		.2byte	0x2
 3754 0546 7D       		.byte	0x7d
 3755 0547 08       		.sleb128 8
 3756 0548 04000000 		.4byte	.LCFI70
 3757 054c 18000000 		.4byte	.LFE25
 3758 0550 0200     		.2byte	0x2
 3759 0552 77       		.byte	0x77
 3760 0553 08       		.sleb128 8
 3761 0554 00000000 		.4byte	0
 3762 0558 00000000 		.4byte	0
 3763              	.LLST26:
 3764 055c 00000000 		.4byte	.LFB26
 3765 0560 02000000 		.4byte	.LCFI71
 3766 0564 0200     		.2byte	0x2
 3767 0566 7D       		.byte	0x7d
 3768 0567 00       		.sleb128 0
 3769 0568 02000000 		.4byte	.LCFI71
 3770 056c 04000000 		.4byte	.LCFI72
 3771 0570 0200     		.2byte	0x2
 3772 0572 7D       		.byte	0x7d
 3773 0573 08       		.sleb128 8
 3774 0574 04000000 		.4byte	.LCFI72
 3775 0578 18000000 		.4byte	.LFE26
 3776 057c 0200     		.2byte	0x2
 3777 057e 77       		.byte	0x77
 3778 057f 08       		.sleb128 8
 3779 0580 00000000 		.4byte	0
 3780 0584 00000000 		.4byte	0
 3781              	.LLST27:
 3782 0588 00000000 		.4byte	.LFB27
 3783 058c 02000000 		.4byte	.LCFI73
 3784 0590 0200     		.2byte	0x2
 3785 0592 7D       		.byte	0x7d
 3786 0593 00       		.sleb128 0
 3787 0594 02000000 		.4byte	.LCFI73
 3788 0598 04000000 		.4byte	.LCFI74
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 92


 3789 059c 0200     		.2byte	0x2
 3790 059e 7D       		.byte	0x7d
 3791 059f 08       		.sleb128 8
 3792 05a0 04000000 		.4byte	.LCFI74
 3793 05a4 18000000 		.4byte	.LFE27
 3794 05a8 0200     		.2byte	0x2
 3795 05aa 77       		.byte	0x77
 3796 05ab 08       		.sleb128 8
 3797 05ac 00000000 		.4byte	0
 3798 05b0 00000000 		.4byte	0
 3799              	.LLST28:
 3800 05b4 00000000 		.4byte	.LFB28
 3801 05b8 02000000 		.4byte	.LCFI75
 3802 05bc 0200     		.2byte	0x2
 3803 05be 7D       		.byte	0x7d
 3804 05bf 00       		.sleb128 0
 3805 05c0 02000000 		.4byte	.LCFI75
 3806 05c4 04000000 		.4byte	.LCFI76
 3807 05c8 0200     		.2byte	0x2
 3808 05ca 7D       		.byte	0x7d
 3809 05cb 0C       		.sleb128 12
 3810 05cc 04000000 		.4byte	.LCFI76
 3811 05d0 06000000 		.4byte	.LCFI77
 3812 05d4 0200     		.2byte	0x2
 3813 05d6 7D       		.byte	0x7d
 3814 05d7 20       		.sleb128 32
 3815 05d8 06000000 		.4byte	.LCFI77
 3816 05dc 44000000 		.4byte	.LFE28
 3817 05e0 0200     		.2byte	0x2
 3818 05e2 77       		.byte	0x77
 3819 05e3 20       		.sleb128 32
 3820 05e4 00000000 		.4byte	0
 3821 05e8 00000000 		.4byte	0
 3822              	.LLST29:
 3823 05ec 00000000 		.4byte	.LFB29
 3824 05f0 02000000 		.4byte	.LCFI78
 3825 05f4 0200     		.2byte	0x2
 3826 05f6 7D       		.byte	0x7d
 3827 05f7 00       		.sleb128 0
 3828 05f8 02000000 		.4byte	.LCFI78
 3829 05fc 04000000 		.4byte	.LCFI79
 3830 0600 0200     		.2byte	0x2
 3831 0602 7D       		.byte	0x7d
 3832 0603 0C       		.sleb128 12
 3833 0604 04000000 		.4byte	.LCFI79
 3834 0608 06000000 		.4byte	.LCFI80
 3835 060c 0200     		.2byte	0x2
 3836 060e 7D       		.byte	0x7d
 3837 060f 20       		.sleb128 32
 3838 0610 06000000 		.4byte	.LCFI80
 3839 0614 44000000 		.4byte	.LFE29
 3840 0618 0200     		.2byte	0x2
 3841 061a 77       		.byte	0x77
 3842 061b 20       		.sleb128 32
 3843 061c 00000000 		.4byte	0
 3844 0620 00000000 		.4byte	0
 3845              	.LLST30:
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 93


 3846 0624 00000000 		.4byte	.LFB30
 3847 0628 02000000 		.4byte	.LCFI81
 3848 062c 0200     		.2byte	0x2
 3849 062e 7D       		.byte	0x7d
 3850 062f 00       		.sleb128 0
 3851 0630 02000000 		.4byte	.LCFI81
 3852 0634 04000000 		.4byte	.LCFI82
 3853 0638 0200     		.2byte	0x2
 3854 063a 7D       		.byte	0x7d
 3855 063b 0C       		.sleb128 12
 3856 063c 04000000 		.4byte	.LCFI82
 3857 0640 06000000 		.4byte	.LCFI83
 3858 0644 0200     		.2byte	0x2
 3859 0646 7D       		.byte	0x7d
 3860 0647 20       		.sleb128 32
 3861 0648 06000000 		.4byte	.LCFI83
 3862 064c 48000000 		.4byte	.LFE30
 3863 0650 0200     		.2byte	0x2
 3864 0652 77       		.byte	0x77
 3865 0653 20       		.sleb128 32
 3866 0654 00000000 		.4byte	0
 3867 0658 00000000 		.4byte	0
 3868              	.LLST31:
 3869 065c 00000000 		.4byte	.LFB31
 3870 0660 02000000 		.4byte	.LCFI84
 3871 0664 0200     		.2byte	0x2
 3872 0666 7D       		.byte	0x7d
 3873 0667 00       		.sleb128 0
 3874 0668 02000000 		.4byte	.LCFI84
 3875 066c 04000000 		.4byte	.LCFI85
 3876 0670 0200     		.2byte	0x2
 3877 0672 7D       		.byte	0x7d
 3878 0673 0C       		.sleb128 12
 3879 0674 04000000 		.4byte	.LCFI85
 3880 0678 06000000 		.4byte	.LCFI86
 3881 067c 0200     		.2byte	0x2
 3882 067e 7D       		.byte	0x7d
 3883 067f 20       		.sleb128 32
 3884 0680 06000000 		.4byte	.LCFI86
 3885 0684 44000000 		.4byte	.LFE31
 3886 0688 0200     		.2byte	0x2
 3887 068a 77       		.byte	0x77
 3888 068b 20       		.sleb128 32
 3889 068c 00000000 		.4byte	0
 3890 0690 00000000 		.4byte	0
 3891              	.LLST32:
 3892 0694 00000000 		.4byte	.LFB32
 3893 0698 02000000 		.4byte	.LCFI87
 3894 069c 0200     		.2byte	0x2
 3895 069e 7D       		.byte	0x7d
 3896 069f 00       		.sleb128 0
 3897 06a0 02000000 		.4byte	.LCFI87
 3898 06a4 04000000 		.4byte	.LCFI88
 3899 06a8 0200     		.2byte	0x2
 3900 06aa 7D       		.byte	0x7d
 3901 06ab 0C       		.sleb128 12
 3902 06ac 04000000 		.4byte	.LCFI88
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 94


 3903 06b0 06000000 		.4byte	.LCFI89
 3904 06b4 0200     		.2byte	0x2
 3905 06b6 7D       		.byte	0x7d
 3906 06b7 20       		.sleb128 32
 3907 06b8 06000000 		.4byte	.LCFI89
 3908 06bc 44000000 		.4byte	.LFE32
 3909 06c0 0200     		.2byte	0x2
 3910 06c2 77       		.byte	0x77
 3911 06c3 20       		.sleb128 32
 3912 06c4 00000000 		.4byte	0
 3913 06c8 00000000 		.4byte	0
 3914              	.LLST33:
 3915 06cc 00000000 		.4byte	.LFB33
 3916 06d0 02000000 		.4byte	.LCFI90
 3917 06d4 0200     		.2byte	0x2
 3918 06d6 7D       		.byte	0x7d
 3919 06d7 00       		.sleb128 0
 3920 06d8 02000000 		.4byte	.LCFI90
 3921 06dc 04000000 		.4byte	.LCFI91
 3922 06e0 0200     		.2byte	0x2
 3923 06e2 7D       		.byte	0x7d
 3924 06e3 0C       		.sleb128 12
 3925 06e4 04000000 		.4byte	.LCFI91
 3926 06e8 06000000 		.4byte	.LCFI92
 3927 06ec 0200     		.2byte	0x2
 3928 06ee 7D       		.byte	0x7d
 3929 06ef 20       		.sleb128 32
 3930 06f0 06000000 		.4byte	.LCFI92
 3931 06f4 3C000000 		.4byte	.LFE33
 3932 06f8 0200     		.2byte	0x2
 3933 06fa 77       		.byte	0x77
 3934 06fb 20       		.sleb128 32
 3935 06fc 00000000 		.4byte	0
 3936 0700 00000000 		.4byte	0
 3937              	.LLST34:
 3938 0704 00000000 		.4byte	.LFB34
 3939 0708 02000000 		.4byte	.LCFI93
 3940 070c 0200     		.2byte	0x2
 3941 070e 7D       		.byte	0x7d
 3942 070f 00       		.sleb128 0
 3943 0710 02000000 		.4byte	.LCFI93
 3944 0714 04000000 		.4byte	.LCFI94
 3945 0718 0200     		.2byte	0x2
 3946 071a 7D       		.byte	0x7d
 3947 071b 08       		.sleb128 8
 3948 071c 04000000 		.4byte	.LCFI94
 3949 0720 20000000 		.4byte	.LFE34
 3950 0724 0200     		.2byte	0x2
 3951 0726 77       		.byte	0x77
 3952 0727 08       		.sleb128 8
 3953 0728 00000000 		.4byte	0
 3954 072c 00000000 		.4byte	0
 3955              	.LLST35:
 3956 0730 00000000 		.4byte	.LFB35
 3957 0734 02000000 		.4byte	.LCFI95
 3958 0738 0200     		.2byte	0x2
 3959 073a 7D       		.byte	0x7d
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 95


 3960 073b 00       		.sleb128 0
 3961 073c 02000000 		.4byte	.LCFI95
 3962 0740 04000000 		.4byte	.LCFI96
 3963 0744 0200     		.2byte	0x2
 3964 0746 7D       		.byte	0x7d
 3965 0747 08       		.sleb128 8
 3966 0748 04000000 		.4byte	.LCFI96
 3967 074c 06000000 		.4byte	.LCFI97
 3968 0750 0200     		.2byte	0x2
 3969 0752 7D       		.byte	0x7d
 3970 0753 10       		.sleb128 16
 3971 0754 06000000 		.4byte	.LCFI97
 3972 0758 18000000 		.4byte	.LFE35
 3973 075c 0200     		.2byte	0x2
 3974 075e 77       		.byte	0x77
 3975 075f 10       		.sleb128 16
 3976 0760 00000000 		.4byte	0
 3977 0764 00000000 		.4byte	0
 3978              	.LLST36:
 3979 0768 00000000 		.4byte	.LFB36
 3980 076c 02000000 		.4byte	.LCFI98
 3981 0770 0200     		.2byte	0x2
 3982 0772 7D       		.byte	0x7d
 3983 0773 00       		.sleb128 0
 3984 0774 02000000 		.4byte	.LCFI98
 3985 0778 04000000 		.4byte	.LCFI99
 3986 077c 0200     		.2byte	0x2
 3987 077e 7D       		.byte	0x7d
 3988 077f 08       		.sleb128 8
 3989 0780 04000000 		.4byte	.LCFI99
 3990 0784 14000000 		.4byte	.LFE36
 3991 0788 0200     		.2byte	0x2
 3992 078a 77       		.byte	0x77
 3993 078b 08       		.sleb128 8
 3994 078c 00000000 		.4byte	0
 3995 0790 00000000 		.4byte	0
 3996              	.LLST37:
 3997 0794 00000000 		.4byte	.LFB37
 3998 0798 02000000 		.4byte	.LCFI100
 3999 079c 0200     		.2byte	0x2
 4000 079e 7D       		.byte	0x7d
 4001 079f 00       		.sleb128 0
 4002 07a0 02000000 		.4byte	.LCFI100
 4003 07a4 04000000 		.4byte	.LCFI101
 4004 07a8 0200     		.2byte	0x2
 4005 07aa 7D       		.byte	0x7d
 4006 07ab 08       		.sleb128 8
 4007 07ac 04000000 		.4byte	.LCFI101
 4008 07b0 14000000 		.4byte	.LFE37
 4009 07b4 0200     		.2byte	0x2
 4010 07b6 77       		.byte	0x77
 4011 07b7 08       		.sleb128 8
 4012 07b8 00000000 		.4byte	0
 4013 07bc 00000000 		.4byte	0
 4014              	.LLST38:
 4015 07c0 00000000 		.4byte	.LFB38
 4016 07c4 02000000 		.4byte	.LCFI102
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 96


 4017 07c8 0200     		.2byte	0x2
 4018 07ca 7D       		.byte	0x7d
 4019 07cb 00       		.sleb128 0
 4020 07cc 02000000 		.4byte	.LCFI102
 4021 07d0 04000000 		.4byte	.LCFI103
 4022 07d4 0200     		.2byte	0x2
 4023 07d6 7D       		.byte	0x7d
 4024 07d7 08       		.sleb128 8
 4025 07d8 04000000 		.4byte	.LCFI103
 4026 07dc 06000000 		.4byte	.LCFI104
 4027 07e0 0200     		.2byte	0x2
 4028 07e2 7D       		.byte	0x7d
 4029 07e3 10       		.sleb128 16
 4030 07e4 06000000 		.4byte	.LCFI104
 4031 07e8 18000000 		.4byte	.LFE38
 4032 07ec 0200     		.2byte	0x2
 4033 07ee 77       		.byte	0x77
 4034 07ef 10       		.sleb128 16
 4035 07f0 00000000 		.4byte	0
 4036 07f4 00000000 		.4byte	0
 4037              	.LLST39:
 4038 07f8 00000000 		.4byte	.LFB39
 4039 07fc 02000000 		.4byte	.LCFI105
 4040 0800 0200     		.2byte	0x2
 4041 0802 7D       		.byte	0x7d
 4042 0803 00       		.sleb128 0
 4043 0804 02000000 		.4byte	.LCFI105
 4044 0808 04000000 		.4byte	.LCFI106
 4045 080c 0200     		.2byte	0x2
 4046 080e 7D       		.byte	0x7d
 4047 080f 08       		.sleb128 8
 4048 0810 04000000 		.4byte	.LCFI106
 4049 0814 06000000 		.4byte	.LCFI107
 4050 0818 0200     		.2byte	0x2
 4051 081a 7D       		.byte	0x7d
 4052 081b 10       		.sleb128 16
 4053 081c 06000000 		.4byte	.LCFI107
 4054 0820 18000000 		.4byte	.LFE39
 4055 0824 0200     		.2byte	0x2
 4056 0826 77       		.byte	0x77
 4057 0827 10       		.sleb128 16
 4058 0828 00000000 		.4byte	0
 4059 082c 00000000 		.4byte	0
 4060              		.section	.debug_aranges,"",%progbits
 4061 0000 54010000 		.4byte	0x154
 4062 0004 0200     		.2byte	0x2
 4063 0006 00000000 		.4byte	.Ldebug_info0
 4064 000a 04       		.byte	0x4
 4065 000b 00       		.byte	0
 4066 000c 0000     		.2byte	0
 4067 000e 0000     		.2byte	0
 4068 0010 00000000 		.4byte	.LFB0
 4069 0014 64000000 		.4byte	.LFE0-.LFB0
 4070 0018 00000000 		.4byte	.LFB1
 4071 001c 30000000 		.4byte	.LFE1-.LFB1
 4072 0020 00000000 		.4byte	.LFB2
 4073 0024 24000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 97


 4074 0028 00000000 		.4byte	.LFB3
 4075 002c 30000000 		.4byte	.LFE3-.LFB3
 4076 0030 00000000 		.4byte	.LFB4
 4077 0034 48000000 		.4byte	.LFE4-.LFB4
 4078 0038 00000000 		.4byte	.LFB5
 4079 003c 48000000 		.4byte	.LFE5-.LFB5
 4080 0040 00000000 		.4byte	.LFB6
 4081 0044 48000000 		.4byte	.LFE6-.LFB6
 4082 0048 00000000 		.4byte	.LFB7
 4083 004c 4C000000 		.4byte	.LFE7-.LFB7
 4084 0050 00000000 		.4byte	.LFB8
 4085 0054 1C000000 		.4byte	.LFE8-.LFB8
 4086 0058 00000000 		.4byte	.LFB9
 4087 005c 48000000 		.4byte	.LFE9-.LFB9
 4088 0060 00000000 		.4byte	.LFB10
 4089 0064 48000000 		.4byte	.LFE10-.LFB10
 4090 0068 00000000 		.4byte	.LFB11
 4091 006c 4C000000 		.4byte	.LFE11-.LFB11
 4092 0070 00000000 		.4byte	.LFB12
 4093 0074 48000000 		.4byte	.LFE12-.LFB12
 4094 0078 00000000 		.4byte	.LFB13
 4095 007c 1C000000 		.4byte	.LFE13-.LFB13
 4096 0080 00000000 		.4byte	.LFB14
 4097 0084 18000000 		.4byte	.LFE14-.LFB14
 4098 0088 00000000 		.4byte	.LFB15
 4099 008c 48000000 		.4byte	.LFE15-.LFB15
 4100 0090 00000000 		.4byte	.LFB16
 4101 0094 1C000000 		.4byte	.LFE16-.LFB16
 4102 0098 00000000 		.4byte	.LFB17
 4103 009c 18000000 		.4byte	.LFE17-.LFB17
 4104 00a0 00000000 		.4byte	.LFB18
 4105 00a4 48000000 		.4byte	.LFE18-.LFB18
 4106 00a8 00000000 		.4byte	.LFB19
 4107 00ac 1C000000 		.4byte	.LFE19-.LFB19
 4108 00b0 00000000 		.4byte	.LFB20
 4109 00b4 18000000 		.4byte	.LFE20-.LFB20
 4110 00b8 00000000 		.4byte	.LFB21
 4111 00bc 48000000 		.4byte	.LFE21-.LFB21
 4112 00c0 00000000 		.4byte	.LFB22
 4113 00c4 1C000000 		.4byte	.LFE22-.LFB22
 4114 00c8 00000000 		.4byte	.LFB23
 4115 00cc 18000000 		.4byte	.LFE23-.LFB23
 4116 00d0 00000000 		.4byte	.LFB24
 4117 00d4 1C000000 		.4byte	.LFE24-.LFB24
 4118 00d8 00000000 		.4byte	.LFB25
 4119 00dc 18000000 		.4byte	.LFE25-.LFB25
 4120 00e0 00000000 		.4byte	.LFB26
 4121 00e4 18000000 		.4byte	.LFE26-.LFB26
 4122 00e8 00000000 		.4byte	.LFB27
 4123 00ec 18000000 		.4byte	.LFE27-.LFB27
 4124 00f0 00000000 		.4byte	.LFB28
 4125 00f4 44000000 		.4byte	.LFE28-.LFB28
 4126 00f8 00000000 		.4byte	.LFB29
 4127 00fc 44000000 		.4byte	.LFE29-.LFB29
 4128 0100 00000000 		.4byte	.LFB30
 4129 0104 48000000 		.4byte	.LFE30-.LFB30
 4130 0108 00000000 		.4byte	.LFB31
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 98


 4131 010c 44000000 		.4byte	.LFE31-.LFB31
 4132 0110 00000000 		.4byte	.LFB32
 4133 0114 44000000 		.4byte	.LFE32-.LFB32
 4134 0118 00000000 		.4byte	.LFB33
 4135 011c 3C000000 		.4byte	.LFE33-.LFB33
 4136 0120 00000000 		.4byte	.LFB34
 4137 0124 20000000 		.4byte	.LFE34-.LFB34
 4138 0128 00000000 		.4byte	.LFB35
 4139 012c 18000000 		.4byte	.LFE35-.LFB35
 4140 0130 00000000 		.4byte	.LFB36
 4141 0134 14000000 		.4byte	.LFE36-.LFB36
 4142 0138 00000000 		.4byte	.LFB37
 4143 013c 14000000 		.4byte	.LFE37-.LFB37
 4144 0140 00000000 		.4byte	.LFB38
 4145 0144 18000000 		.4byte	.LFE38-.LFB38
 4146 0148 00000000 		.4byte	.LFB39
 4147 014c 18000000 		.4byte	.LFE39-.LFB39
 4148 0150 00000000 		.4byte	0
 4149 0154 00000000 		.4byte	0
 4150              		.section	.debug_ranges,"",%progbits
 4151              	.Ldebug_ranges0:
 4152 0000 00000000 		.4byte	.LFB0
 4153 0004 64000000 		.4byte	.LFE0
 4154 0008 00000000 		.4byte	.LFB1
 4155 000c 30000000 		.4byte	.LFE1
 4156 0010 00000000 		.4byte	.LFB2
 4157 0014 24000000 		.4byte	.LFE2
 4158 0018 00000000 		.4byte	.LFB3
 4159 001c 30000000 		.4byte	.LFE3
 4160 0020 00000000 		.4byte	.LFB4
 4161 0024 48000000 		.4byte	.LFE4
 4162 0028 00000000 		.4byte	.LFB5
 4163 002c 48000000 		.4byte	.LFE5
 4164 0030 00000000 		.4byte	.LFB6
 4165 0034 48000000 		.4byte	.LFE6
 4166 0038 00000000 		.4byte	.LFB7
 4167 003c 4C000000 		.4byte	.LFE7
 4168 0040 00000000 		.4byte	.LFB8
 4169 0044 1C000000 		.4byte	.LFE8
 4170 0048 00000000 		.4byte	.LFB9
 4171 004c 48000000 		.4byte	.LFE9
 4172 0050 00000000 		.4byte	.LFB10
 4173 0054 48000000 		.4byte	.LFE10
 4174 0058 00000000 		.4byte	.LFB11
 4175 005c 4C000000 		.4byte	.LFE11
 4176 0060 00000000 		.4byte	.LFB12
 4177 0064 48000000 		.4byte	.LFE12
 4178 0068 00000000 		.4byte	.LFB13
 4179 006c 1C000000 		.4byte	.LFE13
 4180 0070 00000000 		.4byte	.LFB14
 4181 0074 18000000 		.4byte	.LFE14
 4182 0078 00000000 		.4byte	.LFB15
 4183 007c 48000000 		.4byte	.LFE15
 4184 0080 00000000 		.4byte	.LFB16
 4185 0084 1C000000 		.4byte	.LFE16
 4186 0088 00000000 		.4byte	.LFB17
 4187 008c 18000000 		.4byte	.LFE17
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 99


 4188 0090 00000000 		.4byte	.LFB18
 4189 0094 48000000 		.4byte	.LFE18
 4190 0098 00000000 		.4byte	.LFB19
 4191 009c 1C000000 		.4byte	.LFE19
 4192 00a0 00000000 		.4byte	.LFB20
 4193 00a4 18000000 		.4byte	.LFE20
 4194 00a8 00000000 		.4byte	.LFB21
 4195 00ac 48000000 		.4byte	.LFE21
 4196 00b0 00000000 		.4byte	.LFB22
 4197 00b4 1C000000 		.4byte	.LFE22
 4198 00b8 00000000 		.4byte	.LFB23
 4199 00bc 18000000 		.4byte	.LFE23
 4200 00c0 00000000 		.4byte	.LFB24
 4201 00c4 1C000000 		.4byte	.LFE24
 4202 00c8 00000000 		.4byte	.LFB25
 4203 00cc 18000000 		.4byte	.LFE25
 4204 00d0 00000000 		.4byte	.LFB26
 4205 00d4 18000000 		.4byte	.LFE26
 4206 00d8 00000000 		.4byte	.LFB27
 4207 00dc 18000000 		.4byte	.LFE27
 4208 00e0 00000000 		.4byte	.LFB28
 4209 00e4 44000000 		.4byte	.LFE28
 4210 00e8 00000000 		.4byte	.LFB29
 4211 00ec 44000000 		.4byte	.LFE29
 4212 00f0 00000000 		.4byte	.LFB30
 4213 00f4 48000000 		.4byte	.LFE30
 4214 00f8 00000000 		.4byte	.LFB31
 4215 00fc 44000000 		.4byte	.LFE31
 4216 0100 00000000 		.4byte	.LFB32
 4217 0104 44000000 		.4byte	.LFE32
 4218 0108 00000000 		.4byte	.LFB33
 4219 010c 3C000000 		.4byte	.LFE33
 4220 0110 00000000 		.4byte	.LFB34
 4221 0114 20000000 		.4byte	.LFE34
 4222 0118 00000000 		.4byte	.LFB35
 4223 011c 18000000 		.4byte	.LFE35
 4224 0120 00000000 		.4byte	.LFB36
 4225 0124 14000000 		.4byte	.LFE36
 4226 0128 00000000 		.4byte	.LFB37
 4227 012c 14000000 		.4byte	.LFE37
 4228 0130 00000000 		.4byte	.LFB38
 4229 0134 18000000 		.4byte	.LFE38
 4230 0138 00000000 		.4byte	.LFB39
 4231 013c 18000000 		.4byte	.LFE39
 4232 0140 00000000 		.4byte	0
 4233 0144 00000000 		.4byte	0
 4234              		.section	.debug_line,"",%progbits
 4235              	.Ldebug_line0:
 4236 0000 74030000 		.section	.debug_str,"MS",%progbits,1
 4236      02004200 
 4236      00000201 
 4236      FB0E0D00 
 4236      01010101 
 4237              	.LASF40:
 4238 0000 636F756E 		.ascii	"count\000"
 4238      7400
 4239              	.LASF18:
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 100


 4240 0006 50574D5F 		.ascii	"PWM_Enable\000"
 4240      456E6162 
 4240      6C6500
 4241              	.LASF31:
 4242 0011 50574D5F 		.ascii	"PWM_SetPWMSyncKill\000"
 4242      53657450 
 4242      574D5379 
 4242      6E634B69 
 4242      6C6C00
 4243              	.LASF44:
 4244 0024 70657269 		.ascii	"period\000"
 4244      6F6400
 4245              	.LASF7:
 4246 002b 6C6F6E67 		.ascii	"long long unsigned int\000"
 4246      206C6F6E 
 4246      6720756E 
 4246      7369676E 
 4246      65642069 
 4247              	.LASF61:
 4248 0042 50574D5F 		.ascii	"PWM_SetCaptureMode\000"
 4248      53657443 
 4248      61707475 
 4248      72654D6F 
 4248      646500
 4249              	.LASF24:
 4250 0055 71644D6F 		.ascii	"qdMode\000"
 4250      646500
 4251              	.LASF39:
 4252 005c 50574D5F 		.ascii	"PWM_WriteCounter\000"
 4252      57726974 
 4252      65436F75 
 4252      6E746572 
 4252      00
 4253              	.LASF45:
 4254 006d 50574D5F 		.ascii	"PWM_ReadCounter\000"
 4254      52656164 
 4254      436F756E 
 4254      74657200 
 4255              	.LASF6:
 4256 007d 6C6F6E67 		.ascii	"long long int\000"
 4256      206C6F6E 
 4256      6720696E 
 4256      7400
 4257              	.LASF0:
 4258 008b 7369676E 		.ascii	"signed char\000"
 4258      65642063 
 4258      68617200 
 4259              	.LASF56:
 4260 0097 50574D5F 		.ascii	"PWM_WriteCompareBuf\000"
 4260      57726974 
 4260      65436F6D 
 4260      70617265 
 4260      42756600 
 4261              	.LASF70:
 4262 00ab 50574D5F 		.ascii	"PWM_SetInterruptMode\000"
 4262      53657449 
 4262      6E746572 
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 101


 4262      72757074 
 4262      4D6F6465 
 4263              	.LASF74:
 4264 00c0 50574D5F 		.ascii	"PWM_ClearInterrupt\000"
 4264      436C6561 
 4264      72496E74 
 4264      65727275 
 4264      707400
 4265              	.LASF77:
 4266 00d3 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM.c\000"
 4266      6E657261 
 4266      7465645F 
 4266      536F7572 
 4266      63655C50 
 4267              	.LASF4:
 4268 00f2 6C6F6E67 		.ascii	"long int\000"
 4268      20696E74 
 4268      00
 4269              	.LASF9:
 4270 00fb 75696E74 		.ascii	"uint8\000"
 4270      3800
 4271              	.LASF12:
 4272 0101 646F7562 		.ascii	"double\000"
 4272      6C6500
 4273              	.LASF58:
 4274 0108 50574D5F 		.ascii	"PWM_ReadCompareBuf\000"
 4274      52656164 
 4274      436F6D70 
 4274      61726542 
 4274      756600
 4275              	.LASF47:
 4276 011b 50574D5F 		.ascii	"PWM_SetCompareSwap\000"
 4276      53657443 
 4276      6F6D7061 
 4276      72655377 
 4276      617000
 4277              	.LASF19:
 4278 012e 50574D5F 		.ascii	"PWM_Stop\000"
 4278      53746F70 
 4278      00
 4279              	.LASF37:
 4280 0137 50574D5F 		.ascii	"PWM_SetPWMInvert\000"
 4280      53657450 
 4280      574D496E 
 4280      76657274 
 4280      00
 4281              	.LASF10:
 4282 0148 75696E74 		.ascii	"uint32\000"
 4282      333200
 4283              	.LASF64:
 4284 014f 50574D5F 		.ascii	"PWM_SetStartMode\000"
 4284      53657453 
 4284      74617274 
 4284      4D6F6465 
 4284      00
 4285              	.LASF62:
 4286 0160 74726967 		.ascii	"triggerMode\000"
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 102


 4286      6765724D 
 4286      6F646500 
 4287              	.LASF38:
 4288 016c 6D61736B 		.ascii	"mask\000"
 4288      00
 4289              	.LASF69:
 4290 0171 50574D5F 		.ascii	"PWM_ReadStatus\000"
 4290      52656164 
 4290      53746174 
 4290      757300
 4291              	.LASF36:
 4292 0180 64656164 		.ascii	"deadTime\000"
 4292      54696D65 
 4292      00
 4293              	.LASF65:
 4294 0189 50574D5F 		.ascii	"PWM_SetStopMode\000"
 4294      53657453 
 4294      746F704D 
 4294      6F646500 
 4295              	.LASF8:
 4296 0199 756E7369 		.ascii	"unsigned int\000"
 4296      676E6564 
 4296      20696E74 
 4296      00
 4297              	.LASF35:
 4298 01a6 50574D5F 		.ascii	"PWM_SetPWMDeadTime\000"
 4298      53657450 
 4298      574D4465 
 4298      61645469 
 4298      6D6500
 4299              	.LASF68:
 4300 01b9 636F6D6D 		.ascii	"command\000"
 4300      616E6400 
 4301              	.LASF5:
 4302 01c1 6C6F6E67 		.ascii	"long unsigned int\000"
 4302      20756E73 
 4302      69676E65 
 4302      6420696E 
 4302      7400
 4303              	.LASF30:
 4304 01d3 6D6F6465 		.ascii	"modeMask\000"
 4304      4D61736B 
 4304      00
 4305              	.LASF3:
 4306 01dc 73686F72 		.ascii	"short unsigned int\000"
 4306      7420756E 
 4306      7369676E 
 4306      65642069 
 4306      6E7400
 4307              	.LASF25:
 4308 01ef 50574D5F 		.ascii	"PWM_SetPrescaler\000"
 4308      53657450 
 4308      72657363 
 4308      616C6572 
 4308      00
 4309              	.LASF17:
 4310 0200 50574D5F 		.ascii	"PWM_Start\000"
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 103


 4310      53746172 
 4310      7400
 4311              	.LASF67:
 4312 020a 50574D5F 		.ascii	"PWM_TriggerCommand\000"
 4312      54726967 
 4312      67657243 
 4312      6F6D6D61 
 4312      6E6400
 4313              	.LASF53:
 4314 021d 50574D5F 		.ascii	"PWM_WriteCompare\000"
 4314      57726974 
 4314      65436F6D 
 4314      70617265 
 4314      00
 4315              	.LASF43:
 4316 022e 50574D5F 		.ascii	"PWM_WritePeriod\000"
 4316      57726974 
 4316      65506572 
 4316      696F6400 
 4317              	.LASF14:
 4318 023e 72656733 		.ascii	"reg32\000"
 4318      3200
 4319              	.LASF79:
 4320 0244 50574D5F 		.ascii	"PWM_initVar\000"
 4320      696E6974 
 4320      56617200 
 4321              	.LASF46:
 4322 0250 50574D5F 		.ascii	"PWM_ReadPeriod\000"
 4322      52656164 
 4322      50657269 
 4322      6F6400
 4323              	.LASF15:
 4324 025f 73697A65 		.ascii	"sizetype\000"
 4324      74797065 
 4324      00
 4325              	.LASF32:
 4326 0268 73796E63 		.ascii	"syncKillEnable\000"
 4326      4B696C6C 
 4326      456E6162 
 4326      6C6500
 4327              	.LASF54:
 4328 0277 636F6D70 		.ascii	"compare\000"
 4328      61726500 
 4329              	.LASF27:
 4330 027f 50574D5F 		.ascii	"PWM_SetOneShot\000"
 4330      5365744F 
 4330      6E655368 
 4330      6F7400
 4331              	.LASF51:
 4332 028e 50574D5F 		.ascii	"PWM_ReadPeriodBuf\000"
 4332      52656164 
 4332      50657269 
 4332      6F644275 
 4332      6600
 4333              	.LASF11:
 4334 02a0 666C6F61 		.ascii	"float\000"
 4334      7400
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 104


 4335              	.LASF26:
 4336 02a6 70726573 		.ascii	"prescaler\000"
 4336      63616C65 
 4336      7200
 4337              	.LASF59:
 4338 02b0 50574D5F 		.ascii	"PWM_ReadCapture\000"
 4338      52656164 
 4338      43617074 
 4338      75726500 
 4339              	.LASF52:
 4340 02c0 50574D5F 		.ascii	"PWM_SetPeriodSwap\000"
 4340      53657450 
 4340      6572696F 
 4340      64537761 
 4340      7000
 4341              	.LASF76:
 4342 02d2 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 4342      4320342E 
 4342      372E3320 
 4342      32303133 
 4342      30333132 
 4343 0305 616E6368 		.ascii	"anch revision 196615]\000"
 4343      20726576 
 4343      6973696F 
 4343      6E203139 
 4343      36363135 
 4344              	.LASF1:
 4345 031b 756E7369 		.ascii	"unsigned char\000"
 4345      676E6564 
 4345      20636861 
 4345      7200
 4346              	.LASF16:
 4347 0329 50574D5F 		.ascii	"PWM_Init\000"
 4347      496E6974 
 4347      00
 4348              	.LASF34:
 4349 0332 73746F70 		.ascii	"stopOnKillEnable\000"
 4349      4F6E4B69 
 4349      6C6C456E 
 4349      61626C65 
 4349      00
 4350              	.LASF29:
 4351 0343 50574D5F 		.ascii	"PWM_SetPWMMode\000"
 4351      53657450 
 4351      574D4D6F 
 4351      646500
 4352              	.LASF2:
 4353 0352 73686F72 		.ascii	"short int\000"
 4353      7420696E 
 4353      7400
 4354              	.LASF72:
 4355 035c 50574D5F 		.ascii	"PWM_GetInterruptSourceMasked\000"
 4355      47657449 
 4355      6E746572 
 4355      72757074 
 4355      536F7572 
 4356              	.LASF71:
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 105


 4357 0379 696E7465 		.ascii	"interruptMask\000"
 4357      72727570 
 4357      744D6173 
 4357      6B00
 4358              	.LASF49:
 4359 0387 50574D5F 		.ascii	"PWM_WritePeriodBuf\000"
 4359      57726974 
 4359      65506572 
 4359      696F6442 
 4359      756600
 4360              	.LASF22:
 4361 039a 50574D5F 		.ascii	"PWM_SetQDMode\000"
 4361      53657451 
 4361      444D6F64 
 4361      6500
 4362              	.LASF13:
 4363 03a8 63686172 		.ascii	"char\000"
 4363      00
 4364              	.LASF23:
 4365 03ad 6D6F6465 		.ascii	"mode\000"
 4365      00
 4366              	.LASF78:
 4367 03b2 433A5C55 		.ascii	"C:\\Users\\Terrance\\Documents\\PSoC Creator\\SCB_B"
 4367      73657273 
 4367      5C546572 
 4367      72616E63 
 4367      655C446F 
 4368 03e0 6F6F746C 		.ascii	"ootloader_42xx\\Bootloadable Blinking LED.cydsn\000"
 4368      6F616465 
 4368      725F3432 
 4368      78785C42 
 4368      6F6F746C 
 4369              	.LASF63:
 4370 040f 50574D5F 		.ascii	"PWM_SetReloadMode\000"
 4370      53657452 
 4370      656C6F61 
 4370      644D6F64 
 4370      6500
 4371              	.LASF42:
 4372 0421 636F756E 		.ascii	"counterMode\000"
 4372      7465724D 
 4372      6F646500 
 4373              	.LASF75:
 4374 042d 50574D5F 		.ascii	"PWM_SetInterrupt\000"
 4374      53657449 
 4374      6E746572 
 4374      72757074 
 4374      00
 4375              	.LASF57:
 4376 043e 636F6D70 		.ascii	"compareBuf\000"
 4376      61726542 
 4376      756600
 4377              	.LASF50:
 4378 0449 70657269 		.ascii	"periodBuf\000"
 4378      6F644275 
 4378      6600
 4379              	.LASF60:
ARM GAS  C:\Users\Terrance\AppData\Local\Temp\ccHh2A52.s 			page 106


 4380 0453 50574D5F 		.ascii	"PWM_ReadCaptureBuf\000"
 4380      52656164 
 4380      43617074 
 4380      75726542 
 4380      756600
 4381              	.LASF20:
 4382 0466 656E6162 		.ascii	"enableInterrupts\000"
 4382      6C65496E 
 4382      74657272 
 4382      75707473 
 4382      00
 4383              	.LASF66:
 4384 0477 50574D5F 		.ascii	"PWM_SetCountMode\000"
 4384      53657443 
 4384      6F756E74 
 4384      4D6F6465 
 4384      00
 4385              	.LASF28:
 4386 0488 6F6E6553 		.ascii	"oneShotEnable\000"
 4386      686F7445 
 4386      6E61626C 
 4386      6500
 4387              	.LASF21:
 4388 0496 50574D5F 		.ascii	"PWM_SetMode\000"
 4388      5365744D 
 4388      6F646500 
 4389              	.LASF33:
 4390 04a2 50574D5F 		.ascii	"PWM_SetPWMStopOnKill\000"
 4390      53657450 
 4390      574D5374 
 4390      6F704F6E 
 4390      4B696C6C 
 4391              	.LASF48:
 4392 04b7 73776170 		.ascii	"swapEnable\000"
 4392      456E6162 
 4392      6C6500
 4393              	.LASF73:
 4394 04c2 50574D5F 		.ascii	"PWM_GetInterruptSource\000"
 4394      47657449 
 4394      6E746572 
 4394      72757074 
 4394      536F7572 
 4395              	.LASF41:
 4396 04d9 50574D5F 		.ascii	"PWM_SetCounterMode\000"
 4396      53657443 
 4396      6F756E74 
 4396      65724D6F 
 4396      646500
 4397              	.LASF55:
 4398 04ec 50574D5F 		.ascii	"PWM_ReadCompare\000"
 4398      52656164 
 4398      436F6D70 
 4398      61726500 
 4399              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
